{"version":3,"file":"static\\development\\pages\\api\\ratings.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/api/ratings.js","webpack:///./server/Validation.js","webpack:///./server/config/db.js","webpack:///./server/middleware/auth.js","webpack:///./server/middleware/cors.js","webpack:///./server/models/Ratings.js","webpack:///external \"@hapi/joi\"","webpack:///external \"cors\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","import auth from '../../server/middleware/auth';\r\nimport connectDB from '../../server/config/db';\r\nimport { RatingValidation } from '../../server/Validation';\r\n\r\nimport Ratings from '../../server/models/Ratings';\r\n\r\nexport default auth(async (req, res) => {\r\n  await connectDB();\r\n\r\n  const { method, query } = req;\r\n\r\n  const { media_id, rating } = req.body;\r\n\r\n  const { error } = RatingValidation(req.body);\r\n\r\n  switch (method) {\r\n    // @route   GET api/ratings\r\n    // @desc    Get all Ratings Media\r\n    // @access  Private\r\n    case 'GET':\r\n      try {\r\n        const ratings = await Ratings.find({ user: req.user.id }).sort({\r\n          date: -1,\r\n        });\r\n        res.json(ratings);\r\n      } catch (err) {\r\n        console.log(err.message);\r\n        res.status(500).send('Server Error');\r\n      }\r\n      break;\r\n    case 'POST':\r\n      // @route   POST api/ratings\r\n      // @desc    add new ratings\r\n      // @access  Private\r\n\r\n      if (error) return res.status(400).json({ msg: error.details[0].message });\r\n\r\n      try {\r\n        const newRating = new Ratings({\r\n          media_id,\r\n          rating,\r\n          user: req.user.id,\r\n        });\r\n\r\n        const ratings = await newRating.save();\r\n\r\n        res.json(ratings);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).send('Server Error');\r\n      }\r\n      break;\r\n    case 'PUT':\r\n      // @route   PUT api/ratings/:id\r\n      // @desc    Update ratings\r\n      // @access  Private\r\n\r\n      // Build ratings object\r\n      if (error) return res.status(400).json({ msg: error.details[0].message });\r\n\r\n      const ratingsFields = {};\r\n      if (media_id) ratingsFields.media_id = media_id;\r\n      if (rating) ratingsFields.rating = rating;\r\n      try {\r\n        let ratings = await Ratings.findById(query.id);\r\n\r\n        if (!ratings) return res.status(400).json({ msg: 'Ratings not found' });\r\n\r\n        // Make sure user owns ratings\r\n        if (ratings.user.toString() !== req.user.id) {\r\n          return res.status(401).json({ msg: 'Not authorized' });\r\n        }\r\n\r\n        ratings = await Ratings.findByIdAndUpdate(\r\n          query.id,\r\n          { $set: ratingsFields },\r\n          { new: true }\r\n        );\r\n\r\n        res.json({ ratings, msg: 'Rating updated' });\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).send('Server Error');\r\n      }\r\n      break;\r\n\r\n    case 'DELETE':\r\n      // @route   DELETE api/ratings/:id\r\n      // @desc    Delete ratings\r\n      // @access  Private\r\n      try {\r\n        let ratings = await Ratings.findById(query.id);\r\n\r\n        if (!ratings) return res.status(400).json({ msg: 'Ratings not found' });\r\n\r\n        // Make sure user owns ratings\r\n        if (ratings.user.toString() !== req.user.id) {\r\n          return res.status(401).json({ msg: 'Not authorized' });\r\n        }\r\n\r\n        await Ratings.findByIdAndRemove(query.id);\r\n\r\n        res.json({ msg: 'Ratings removed' });\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).send('Server Error');\r\n      }\r\n      break;\r\n    default:\r\n      console.log('defa', method, query);\r\n      return res.status(405).end(`Method ${method} Not Allowed`);\r\n  }\r\n});\r\n","import Joi from '@hapi/joi';\r\n\r\nexport const registerValidation = (data) => {\r\n  const schema = Joi.object({\r\n    userName: Joi.string().min(3).required(),\r\n    email: Joi.string()\r\n      .min(6)\r\n      .required()\r\n      .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n    password: Joi.string().min(6).required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\n\r\nexport const loginValidation = (data) => {\r\n  const schema = Joi.object({\r\n    email: Joi.string()\r\n      .min(3)\r\n      .required()\r\n      .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n    password: Joi.string().min(6).required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\nexport const mediaValidation = (data) => {\r\n  const schema = Joi.object({\r\n    media_id: Joi.number().required(),\r\n    media: Joi.object().required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\nexport const RatingValidation = (data) => {\r\n  const schema = Joi.object({\r\n    media_id: Joi.string().required(),\r\n    rating: Joi.number().max(10).required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\n","// const mongoose = require('mongoose');\r\nimport mongoose from 'mongoose';\r\n\r\nexport default async () => {\r\n  if (mongoose.connections[0].readyState) return;\r\n  // Using new database connection\r\n  try {\r\n    await mongoose.connect(process.env.MONGODB_URI, {\r\n      useNewUrlParser: true,\r\n      useFindAndModify: false,\r\n      useCreateIndex: true,\r\n      useUnifiedTopology: true\r\n    });\r\n    console.log('MongoDB connected...');\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    process.exit(1);\r\n  }\r\n};\r\n","import { verify } from 'jsonwebtoken';\r\nimport Cors from 'cors';\r\nimport { runMiddleware } from './cors';\r\n\r\n// Initializing the cors middleware\r\nconst cors = Cors({\r\n  methods: ['GET', 'HEAD'],\r\n});\r\n\r\nconst auth = (fn) => async (req, res) => {\r\n  await runMiddleware(req, res, cors);\r\n\r\n  const { cookies, method, url } = req;\r\n  if (method === 'POST' && url === '/api/auth') {\r\n    return await fn(req, res);\r\n  }\r\n  try {\r\n    verify(cookies.auth, process.env.jwtSecret, async (err, decoded) => {\r\n      if (!err && decoded) {\r\n        req.user = decoded.user;\r\n        return await fn(req, res);\r\n      }\r\n      return res.status(401).json({ msg: 'No token, authorization denied' });\r\n    });\r\n  } catch (error) {\r\n    res.status(401).json({ msg: 'token is not valid' });\r\n  }\r\n};\r\nexport default auth;\r\n\r\n// const auth = (fn) => async(req, res) => {\r\n//   // Get token from header\r\n//   const token = req.headers['x-auth-token'];\r\n\r\n//   // Check if not token\r\n//   if (!token) {\r\n//     return res.status(401).json({ msg: 'No token, authorization denied' });\r\n//   }\r\n\r\n//   try {\r\n//     const decoded = jwt.verify(token, process.env.jwtSecret);\r\n//     req.user = decoded.user;\r\n//     return await fn(req, res);\r\n\r\n//   } catch (err) {\r\n//     res.status(401).json({ msg: 'token is not valid' });\r\n//   }\r\n// };\r\n// export default auth;\r\n","// Helper method to wait for a middleware to execute before continuing\r\n// And to throw an error when an error happens in a middleware\r\nexport function runMiddleware(req, res, fn) {\r\n  return new Promise((resolve, reject) => {\r\n    fn(req, res, (result) => {\r\n      if (result instanceof Error) {\r\n        return reject(result);\r\n      }\r\n\r\n      return resolve(result);\r\n    });\r\n  });\r\n}\r\n","import mongoose from 'mongoose';\r\n\r\nconst RatingsSchema = new mongoose.Schema({\r\n  user: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: 'users',\r\n  },\r\n  media_id: {\r\n    type: String,\r\n    require: true,\r\n  },\r\n  rating: {\r\n    type: Number,\r\n    require: true,\r\n  },\r\n  date: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\nconst Ratings =\r\n  mongoose.models.Ratings || mongoose.model('Ratings', RatingsSchema);\r\n\r\nexport default Ratings;\r\n","module.exports = require(\"@hapi/joi\");","module.exports = require(\"cors\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AA/FA;AAiGA;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAbA;AAmBA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACxBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}