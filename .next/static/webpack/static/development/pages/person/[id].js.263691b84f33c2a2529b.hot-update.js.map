{"version":3,"file":"static/webpack/static\\development\\pages\\person\\[id].js.263691b84f33c2a2529b.hot-update.js","sources":["webpack:///./pages/person/.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { IMG_URL } from '../../components/context/types';\r\nimport Layout from '../../components/layout';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport KnownFor from '../../components/ui/PersonProfile/KnownFor';\r\nimport MediaCredits from '../../components/ui/PersonProfile/MediaCredits';\r\nimport PersonFacts from '../../components/ui/PersonProfile/PersonFacts';\r\nimport Biography from '../../components/ui/PersonProfile/Biography';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  margin-top: 110px;\r\n\r\n  .profile--person {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n\r\n    img {\r\n      height: 100%;\r\n      object-fit: contain;\r\n    }\r\n  }\r\n\r\n  .line-between {\r\n    display: none;\r\n    width: 100%;\r\n    background: var(--bg-gradient);\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    margin-top: 100px;\r\n    display: grid;\r\n    grid-template-areas:\r\n      'pp bio'\r\n      'lin lin'\r\n      'pf pm';\r\n    grid-template-columns: calc(100% - 60%) 1fr;\r\n    grid-auto-rows: auto 40px auto;\r\n\r\n    .profile--person {\r\n      grid-area: pp;\r\n      justify-self: end;\r\n      max-width: 355px;\r\n      margin: 0;\r\n      z-index: 10;\r\n    }\r\n\r\n    .profile--biography {\r\n      grid-area: bio;\r\n      align-self: center;\r\n      justify-self: center;\r\n    }\r\n\r\n    .line-between {\r\n      grid-area: lin;\r\n      display: block;\r\n    }\r\n\r\n    .profile--media {\r\n      grid-area: pm;\r\n      /* background: var(--bg-gradient); */\r\n      padding-left: 2em;\r\n      padding-top: 1.2em;\r\n      /* position: relative; */\r\n    }\r\n\r\n    .profile--media--container {\r\n      max-width: 1200px;\r\n    }\r\n\r\n    .profile--facts {\r\n      grid-area: pf;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PersonProfile = ({ person }) => {\r\n  const [tab, setTab] = useState('movies');\r\n\r\n  // const { setModal } = useContext(MovieContext);\r\n\r\n  const knonwFor =\r\n    person &&\r\n    person.combined_credits.cast\r\n      .sort((a, b) => b.vote_count - a.vote_count)\r\n      .slice(0, 8);\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile'>\r\n        <div className='profile--person pt-5'>\r\n          <img\r\n            src={\r\n              person.profile_path\r\n                ? `${IMG_URL}${person.profile_path}`\r\n                : 'no_img.jpg'\r\n            }\r\n            alt={person.name}\r\n          />\r\n        </div>\r\n        <Biography name={person.name} bio={person.biography} />\r\n        <div className='line-between' />\r\n        <div className='profile--media'>\r\n          <div className='profile--media--container'>\r\n            <KnownFor data={knonwFor} />\r\n            <MediaCredits data={person} tab={tab} setTab={setTab} />\r\n          </div>\r\n        </div>\r\n        <PersonFacts data={person} />\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPersonProfile.getInitialProps = async ctx => {\r\n  try {\r\n    const person = await movieDB(\r\n      `person/${ctx.query.id || '85'}`,\r\n      'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      person: { typeFor: 'person', ...person }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default PersonProfile;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAkEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAGA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAOA;AAAA;AAAA;AADA;AACA;AAPA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;;;;A","sourceRoot":""}