{"version":3,"file":"static/webpack/static\\development\\pages\\person\\[id].js.bf713cfd406938e520c2.hot-update.js","sources":["webpack:///./components/ui/PersonProfile/Biography.jsx","webpack:///./pages/person/.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\r\n\r\nconst Styled = styled.div`\r\n  margin: 2em 0;\r\n  display: grid;\r\n\r\n  .profile--biography__name {\r\n    font-weight: bold;\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n  }\r\n\r\n  .read--more {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    background-color: var(--primary-clr);\r\n    border-radius: 50%;\r\n    padding: 0.25em;\r\n    font-size: 1.7rem;\r\n    transition: var(--ease--in--out--02s);\r\n    color: var(--white-clr);\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n      transform: scale(0.9);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Biography = ({ name, bio }) => {\r\n  const [bioActive, setBioActive] = useState(false);\r\n\r\n  const bioCondetion =\r\n    bio.length === 0\r\n      ? 'Sorry Nothing Available'\r\n      : bio.length <= 500\r\n      ? bio\r\n      : `${bio.slice(0, 500)}...`;\r\n\r\n  return (\r\n    <Styled className='profile--biography px-2'>\r\n      <h2 className='profile--biography__name'>{name}</h2>\r\n      <h3 className='subTitle'>Biography</h3>\r\n      <p className='profile--biography__bio'>\r\n        {bioActive ? bio : bioCondetion}\r\n      </p>\r\n      {bio.biography.length >= 500 && (\r\n        <a\r\n          href='#'\r\n          // onClick={() => setModal(person.biography, 'person')}\r\n          onClick={() => setBioActive(!bioActive)}\r\n          className='read--more'\r\n        >\r\n          {bioActive ? (\r\n            <IoIosArrowUp className='read--more__arrow' />\r\n          ) : (\r\n            <IoIosArrowDown className='read--more__arrow' />\r\n          )}\r\n        </a>\r\n      )}\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default Biography;\r\n","import { useContext, useState } from 'react';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport { IMG_URL } from '../../components/context/types';\r\nimport Layout from '../../components/layout';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport KnownFor from '../../components/ui/PersonProfile/KnownFor';\r\nimport MediaCredits from '../../components/ui/PersonProfile/MediaCredits';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\r\nimport PersonFacts from '../../components/ui/PersonProfile/PersonFacts';\r\nimport Biography from '../../components/ui/PersonProfile/Biography';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 110px;\r\n\r\n  .profile--person {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n`;\r\n\r\nconst PersonProfile = ({ person }) => {\r\n  const [tab, setTab] = useState('movies');\r\n\r\n  // const { setModal } = useContext(MovieContext);\r\n\r\n  const bio =\r\n    person.biography.length === 0\r\n      ? 'Sorry Nothing Available'\r\n      : person.biography.length <= 500\r\n      ? person.biography\r\n      : `${person.biography.slice(0, 500)}...`;\r\n\r\n  const knonwFor =\r\n    person &&\r\n    person.combined_credits.cast\r\n      .sort((a, b) => b.vote_count - a.vote_count)\r\n      .slice(0, 8);\r\n\r\n  console.log(person.biography.length);\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile'>\r\n        <div className='profile--person pt-5'>\r\n          <img\r\n            src={\r\n              person.profile_path\r\n                ? `${IMG_URL}${person.profile_path}`\r\n                : 'no_img.jpg'\r\n            }\r\n            alt={person.name}\r\n          />\r\n        </div>\r\n        <Biography name={person.name} bio={person.biography} />\r\n        <div className='profile--media'>\r\n          <KnownFor data={knonwFor} />\r\n          <MediaCredits data={person} tab={tab} setTab={setTab} />\r\n        </div>\r\n        <PersonFacts data={person} />\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPersonProfile.getInitialProps = async ctx => {\r\n  try {\r\n    const person = await movieDB(\r\n      `person/${ctx.query.id || '85'}`,\r\n      'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      person: { typeFor: 'person', ...person }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default PersonProfile;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AA2BA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AADA;AAGA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAGA;AAOA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAOA;AAAA;AAAA;AADA;AACA;AAPA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;;;;A","sourceRoot":""}