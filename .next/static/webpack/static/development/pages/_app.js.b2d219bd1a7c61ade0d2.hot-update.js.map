{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.b2d219bd1a7c61ade0d2.hot-update.js","sources":["webpack:///./components/ui/Forms/SearchFrom.jsx"],"sourcesContent":["import { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport styled from 'styled-components';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { MdPerson, MdLocalMovies, MdTv } from 'react-icons/md';\r\nimport { CLEAR_SEARCH_DATA } from '../../context/types';\r\nimport Link from 'next/link';\r\n\r\nconst Styled = styled.div`\r\n  background-color: var(--white-clr);\r\n  padding: 0;\r\n\r\n  .form {\r\n    max-width: 920px;\r\n    margin: 0 auto;\r\n    padding: 0 1em;\r\n    position: relative;\r\n\r\n    &:hover svg {\r\n      color: var(--primary-clr);\r\n    }\r\n  }\r\n\r\n  .form-group {\r\n    display: flex;\r\n    margin: 0;\r\n  }\r\n  .form-label {\r\n    margin: 0;\r\n    margin-right: 0.5em;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n\r\n    svg {\r\n      color: var(--grey-clr);\r\n    }\r\n  }\r\n\r\n  .form--clear {\r\n    position: absolute;\r\n    /* display: none; */\r\n    top: 50%;\r\n    right: 6%;\r\n    transform: translate(-6%, -50%);\r\n    color: var(--primary-clr);\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n    transition: var(--ease--in--out--02s);\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n\r\n  .form-control {\r\n    border: 0;\r\n    color: var(--grey-clr);\r\n\r\n    &:focus {\r\n      outline: 0;\r\n      border-color: var(--primary-clr-rgba);\r\n    }\r\n    &::placeholder {\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    option {\r\n      &:hover {\r\n        background-color: var(--primary-clr-rgba);\r\n        color: var(--white-clr);\r\n      }\r\n    }\r\n  }\r\n\r\n  .search--content {\r\n    height: auto;\r\n    overflow-y: auto;\r\n    box-shadow: 0 11px 15px rgba(0, 0, 0, 0.28);\r\n\r\n    & > .search--content--item:first-child {\r\n      border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    & > .search--content--item:last-child {\r\n      border-top: none;\r\n    }\r\n  }\r\n\r\n  .search--content--item {\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n    padding: 0.1em 1em;\r\n    transition: var(--ease--in--out--02s);\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: rgba(196, 196, 196, 0.4);\r\n    }\r\n\r\n    &__name {\r\n      color: var(--second-clr);\r\n      margin-bottom: 0;\r\n      margin-left: 1em;\r\n\r\n      .media--in {\r\n        color: rgb(151, 151, 151);\r\n        margin-left: 0.3em;\r\n      }\r\n    }\r\n\r\n    &:hover .search--content--item__name,\r\n    &:hover .search--content--item__icon {\r\n      color: var(--primary-clr);\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    margin: 0 auto;\r\n    max-width: 920px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 0.9em;\r\n    color: var(--second-clr);\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    .form {\r\n      padding: 0;\r\n    }\r\n\r\n    .form--clear {\r\n      right: 2%;\r\n      transform: translate(-2%, -50%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchFrom = () => {\r\n  const { getSearchData, clearData, searchData } = useContext(MovieContext);\r\n  const [search, setSearch] = useState('');\r\n  const [isFocus, setIsFocus] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const router = useRouter();\r\n\r\n  const handleChange = e => setSearch(e.target.value);\r\n\r\n  useEffect(() => {\r\n    if (search === '') {\r\n      clearData(CLEAR_SEARCH_DATA);\r\n      return;\r\n    } else {\r\n      getSearchData(search);\r\n    }\r\n  }, [search]);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (search === '') {\r\n      console.log('enter something');\r\n    } else {\r\n      console.log('loged', search);\r\n      router.push('/search/[query]', `/search/${search}`);\r\n    }\r\n    setSearch('');\r\n  };\r\n\r\n  return (\r\n    <Styled classname='search form'>\r\n      <Form className='form' onSubmit={handleSubmit}>\r\n        <Form.Group controlId='search'>\r\n          <Form.Label>\r\n            <FaSearch />\r\n          </Form.Label>\r\n          <Form.Control\r\n            ref={inputRef}\r\n            type='text'\r\n            name='search'\r\n            value={search}\r\n            onChange={handleChange}\r\n            onClick={() => setIsFocus(true)}\r\n            onBlur={() => setTimeout(() => setIsFocus(false), 300)}\r\n            placeholder='Search for a movie, tv show, person...'\r\n          />\r\n        </Form.Group>\r\n        {(isFocus === true || search !== '') && (\r\n          <span\r\n            onClick={() => {\r\n              setSearch('');\r\n              setIsFocus(false);\r\n            }}\r\n            className='form--clear'\r\n          >\r\n            x\r\n          </span>\r\n        )}\r\n      </Form>\r\n      <div className='search--content'>\r\n        {isFocus &&\r\n          searchData &&\r\n          searchData.map(item => (\r\n            <Link\r\n              key={item.id}\r\n              href={`/${item.media_type}/[id]`}\r\n              as={`/${item.media_type}/${item.id}`}\r\n            >\r\n              <div\r\n                // key={item.id}\r\n                onClick={() => setSearch('')}\r\n                className='search--content--item'\r\n              >\r\n                <div className='wrapper'>\r\n                  {item.media_type === 'movie' ? (\r\n                    <MdLocalMovies className='search--content--item__icon' />\r\n                  ) : item.media_type === 'tv' ? (\r\n                    <MdTv className='search--content--item__icon' />\r\n                  ) : (\r\n                    <MdPerson className='search--content--item__icon' />\r\n                  )}\r\n                  <p className='search--content--item__name'>\r\n                    {item.name || item.title}\r\n                    <span className='media--in'>\r\n                      in{' '}\r\n                      {item.media_type === 'person'\r\n                        ? 'People'\r\n                        : item.media_type}\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default SearchFrom;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAkIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AAmCA;AACA;AACA;;;;A","sourceRoot":""}