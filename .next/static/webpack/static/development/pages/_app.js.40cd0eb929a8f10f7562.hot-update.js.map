{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.40cd0eb929a8f10f7562.hot-update.js","sources":["webpack:///./components/context/MovieProvider.js"],"sourcesContent":["import { useState, useEffect, useRef, useReducer } from 'react';\r\nimport MovieContext from './MovieContext';\r\nimport useMovieReducer from './useMovieReducer';\r\nimport { API_KEY } from './types';\r\n\r\nconst log = console.log;\r\n\r\nconst movieInitalState = {\r\n  current_page: 1,\r\n  total_pages: 0,\r\n  query: 'movie',\r\n  movieDBData: {},\r\n  pageData: {}\r\n};\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [windowSize, setWindowSize] = useState(0);\r\n  const [toggle, setToggle] = useState(false);\r\n  const navRef = useRef();\r\n  const [state, dispatch] = useReducer(useMovieReducer, movieInitalState);\r\n\r\n  const setCarosuel = (tablet = 3, laptop = 4, laptopLg = 5) => {\r\n    if (windowSize < 768) {\r\n      return 1;\r\n    } else if (windowSize <= 768 || windowSize < 1280) {\r\n      return tablet;\r\n    } else if (windowSize <= 1280 || windowSize < 2000) {\r\n      return laptop;\r\n    } else if (windowSize >= 2000) {\r\n      return laptopLg;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWindowSize(window.innerWidth);\r\n  }, []);\r\n\r\n  log('env', process.env.API_KEY);\r\n  log('type', API_KEY);\r\n\r\n  return (\r\n    <MovieContext.Provider\r\n      value={{\r\n        windowSize,\r\n        setCarosuel,\r\n        toggle,\r\n        setToggle,\r\n        navRef,\r\n        ...state\r\n      }}\r\n    >\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StateProvider;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;;;;A","sourceRoot":""}