{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.6c30d08c13d46f79ca75.hot-update.js","sources":["webpack:///./components/context/auth/AuthState.js"],"sourcesContent":["import React, { useReducer } from 'react';\r\nimport useAuthReducer from './useAuthReducer';\r\nimport AuthContext from './AuthContext';\r\nimport axios from 'axios';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n} from '../types';\r\n\r\nimport configHeader from '../../utility/configHeader';\r\n\r\nconst authInitialState = {\r\n  isAuthentucated: null,\r\n  loading: true,\r\n  user: null,\r\n  error: null,\r\n  msg: null,\r\n};\r\n\r\nconst AuthState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(useAuthReducer, authInitialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    try {\r\n      const res = await axios.get('/api/auth');\r\n      dispatch({ type: USER_LOADED, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({ type: AUTH_ERROR, payload: error.response.data.msg });\r\n    }\r\n  };\r\n\r\n  const registerUser = async (formData) => {\r\n    try {\r\n      const { data } = await axios.post(`/api/user`, formData, configHeader);\r\n      dispatch({ type: REGISTER_SUCCESS, payload: data.msg });\r\n      // Load User\r\n      // loadUser();\r\n    } catch (error) {\r\n      dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\r\n    }\r\n  };\r\n\r\n  // Login User\r\n  const loginUser = async (formData) => {\r\n    try {\r\n      const { data } = await axios.post(`/api/auth`, formData, configHeader);\r\n      dispatch({ type: LOGIN_SUCCESS, payload: data.msg });\r\n      // Load User\r\n      loadUser();\r\n    } catch (error) {\r\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data.msg });\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n  // Clear Erros\r\n  const clearErros = () => dispatch({ type: CLEAR_ERRORS });\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadUser,\r\n        registerUser,\r\n        loginUser,\r\n        logout,\r\n        clearErros,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;;;;A","sourceRoot":""}