{"version":3,"file":"static/webpack/static\\development\\pages\\movie.js.99e10e901725c30d9a50.hot-update.js","sources":["webpack:///./components/ui/Pagination/Pagination.jsx","webpack:///./pages/movie/index.jsx"],"sourcesContent":["// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import MovieContext from '../context/MovieContext';\r\n// import Link from 'next/link';\r\n\r\n// const Styled = styled.nav`\r\n//   .pagination {\r\n//     justify-content: center;\r\n//     flex-wrap: wrap;\r\n//   }\r\n\r\n//   .page-link {\r\n//     color: var(--primary-clr);\r\n//     font-weight: bold;\r\n//     /* font-family: var(--primary--fn); */\r\n//     border: 1px solid var(--primary--clr);\r\n//     cursor: pointer;\r\n//     &:hover,\r\n//     &:focus,\r\n//     &.active {\r\n//       background-color: var(--primary--clr);\r\n//     }\r\n//   }\r\n\r\n//   /* .pagination  */\r\n\r\n//   .page-item + .page-item {\r\n//     margin-left: 0.8em;\r\n//   }\r\n\r\n//   .page-item {\r\n//     padding: 0.5em 0;\r\n//   }\r\n// `;\r\n\r\n// const Pagination = ({ total_pages, typeFor }) => {\r\n//   const { itemPerPage, paginate, currentPage } = useContext(MovieContext);\r\n\r\n//   const pageNumbers = [];\r\n\r\n//     let prev = '';\r\n\r\n//     let next = '';\r\n\r\n//   for (let i = 1; i <= total_pages; i++) {\r\n//     pageNumbers.push(i);\r\n//     }\r\n\r\n//   return (\r\n//     <Styled className='pagination-nav'>\r\n//       <ul className='pagination'>\r\n//         {pageNumbers.length === 1\r\n//           ? ''\r\n//           : pageNumbers.map(number => (\r\n//               <li key={number} className='page-item'>\r\n//                 <Link href={typeFor + number}>\r\n//                   <div\r\n//                     onClick={() => paginate(number)}\r\n//                     className={`page-link ${\r\n//                       number === currentPage ? 'active' : ''\r\n//                     }`}\r\n//                   >\r\n//                     {number}\r\n//                   </div>\r\n//                 </Link>\r\n//               </li>\r\n//             ))}\r\n//       </ul>\r\n//     </Styled>\r\n//   );\r\n// };\r\n\r\n// export default Pagination;\r\n\r\n/* Pagination Component \r\n-------------------------------------------------*/\r\n\r\n// Pagination.propTypes = propTypes;\r\n\r\nconst createPagination = params => {\r\n  const {\r\n    numberOfArticles,\r\n    articlesPerPage,\r\n    currentPage,\r\n    numberOfButtons\r\n  } = params;\r\n\r\n  const numberOfPages = Math.ceil(numberOfArticles / articlesPerPage);\r\n\r\n  if (currentPage > numberOfPages || currentPage < 1)\r\n    return {\r\n      pagination: [],\r\n      currentPage\r\n    };\r\n\r\n  const buttons = Array(numberOfPages)\r\n    .fill(1)\r\n    .map((e, i) => e + i);\r\n  const sideButtons =\r\n    numberOfButtons % 2 === 0 ? numberOfButtons / 2 : (numberOfButtons - 1) / 2;\r\n\r\n  const calculLeft = (rest = 0) => {\r\n    return {\r\n      array: buttons\r\n        .slice(0, currentPage - 1)\r\n        .reverse()\r\n        .slice(0, sideButtons + rest)\r\n        .reverse(),\r\n      rest: function() {\r\n        return sideButtons - this.array.length;\r\n      }\r\n    };\r\n  };\r\n\r\n  const calculRight = (rest = 0) => {\r\n    return {\r\n      array: buttons.slice(currentPage).slice(0, sideButtons + rest),\r\n      rest: function() {\r\n        return sideButtons - this.array.length;\r\n      }\r\n    };\r\n  };\r\n\r\n  const leftButtons = calculLeft(calculRight().rest()).array;\r\n  const rightButtons = calculRight(calculLeft().rest()).array;\r\n\r\n  return {\r\n    pagination: [...leftButtons, currentPage, ...rightButtons],\r\n    currentPage\r\n  };\r\n};\r\n\r\nexport default createPagination;\r\n","import React from 'react';\r\nimport Layout from '../../components/layout';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport CardTwo from '../../components/ui/Cards/CardTwo';\r\nimport { useContext } from 'react';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport Pagination from '../../components/ui/Pagination/Pagination';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  padding: 150px 1em 5em 1em;\r\n\r\n  .wrapper {\r\n    max-width: 1500px;\r\n    margin: 0 auto;\r\n\r\n    .title {\r\n      font-size: 1.5rem;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n\r\n  .content--container {\r\n    display: grid;\r\n    grid-gap: 2em;\r\n    margin-bottom: 2em;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .content--container {\r\n      grid-row-gap: 3.5em;\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nconst movie = ({ movies }) => {\r\n  const { paginate, currentPage } = useContext(MovieContext);\r\n  const [pageOfItems, setPageOfItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    paginate(movies.page);\r\n  }, [movies.page]);\r\n\r\n  const pageNumber = [];\r\n\r\n  for (let i = 1; i <= movies.total_pages; i++) {\r\n    pageNumber.push(i);\r\n  }\r\n\r\n  const { pagination } = createPagination({\r\n    numberOfArticles: 223,\r\n    articlesPerPage: 12,\r\n    numberOfButtons: 10,\r\n    currentPage\r\n  });\r\n\r\n  console.log(pagination);\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='movie--section'>\r\n        <div className='wrapper'>\r\n          <h2 className='title'>{movies.title} Movies</h2>\r\n          <div className='content--container'>\r\n            {movies.results.map(item => (\r\n              <CardTwo key={item.id} data={item} typeFor={movies.typeFor} />\r\n            ))}\r\n          </div>\r\n          {/* <Pagination\r\n            total_pages={movies.total_pages}\r\n            typeFor={`/movie?query=${movies.title.split(' ').join('_')}&page=`}\r\n          /> */}\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nmovie.getInitialProps = async ({ query }) => {\r\n  const queryLeng = Object.keys(query).length;\r\n  try {\r\n    const movies = await movieDB(\r\n      `movie/${queryLeng === 0 ? 'popular' : query.query}`,\r\n      `page=${query.page ? query.page : 1}`\r\n    );\r\n    return {\r\n      movies: {\r\n        typeFor: 'movie',\r\n        title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' '),\r\n        ...movies\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default movie;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AAEA;AACA;AAFA;AAKA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAKA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AA2BA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAJA;AAdA;AACA;AAoBA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAQA;AACA;AACA;AAFA;AADA;AACA;AARA;AAAA;AAAA;AAeA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;;;;A","sourceRoot":""}