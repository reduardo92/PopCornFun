{"version":3,"file":"static/webpack/static\\development\\pages\\movie.js.71b1376eaf32e0eb9923.hot-update.js","sources":["webpack:///./components/ui/mediaProfile/MediaSection.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../layout';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport CardTwo from '../Cards/CardTwo';\r\nimport PersonCard from '../Cards/PersonCard';\r\nimport Link from 'next/link';\r\nimport DiscoverForm from '../Forms/DiscoverFrom';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  padding: 150px 1em 5em 1em;\r\n\r\n  .wrapper {\r\n    max-width: 1500px;\r\n    margin: 0 auto;\r\n\r\n    .title {\r\n      font-size: 1.5rem;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n\r\n  .content--container {\r\n    display: grid;\r\n    grid-gap: 2em;\r\n    margin: 3em 0;\r\n    justify-items: center;\r\n  }\r\n\r\n  .person--grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    justify-items: center;\r\n    grid-gap: 1em;\r\n    grid-row-gap: 2em;\r\n    margin: 3em 0;\r\n  }\r\n\r\n  /* Set Styles for When Discover Page is Active */\r\n  .head--tabs {\r\n    display: flex;\r\n    max-width: 240px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 0 auto 1.2em;\r\n\r\n    &__tab {\r\n      font-size: 1.25rem;\r\n      font-weight: bold;\r\n      border-bottom: 2px solid transparent;\r\n      transition: var(--ease-12s);\r\n      color: var(--white-clr);\r\n\r\n      &:hover {\r\n        opacity: 0.5;\r\n        border-bottom-color: var(--primary-clr);\r\n      }\r\n\r\n      &:first-child {\r\n        /* margin-right: 1em; */\r\n      }\r\n    }\r\n    .disabled {\r\n      border-bottom-color: var(--primary-clr);\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    /* Set Styles for When Discover Page is Active */\r\n    .head {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n\r\n      .title {\r\n        flex: 100%;\r\n      }\r\n\r\n      .head--tabs {\r\n        margin: 0;\r\n        margin-bottom: 1em;\r\n        flex: 1;\r\n\r\n        &__tab {\r\n          margin-right: 1em;\r\n        }\r\n      }\r\n    }\r\n\r\n    .content--container {\r\n      grid-row-gap: 3.5em;\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    .person--grid {\r\n      grid-template-columns: repeat(3, 1fr);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    .person--grid {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    /* Set Styles for When Discover Page is Active */\r\n    .head {\r\n      .head--tabs {\r\n        margin: 0;\r\n        flex: 1;\r\n\r\n        &__tab {\r\n          margin-right: 1em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    .head {\r\n      padding: 0 2.2em 0 2em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MediaSection = ({ mediaFor, forPage }) => {\r\n  const {\r\n    paginate,\r\n    currentPage,\r\n    discoverForm: { setForm }\r\n  } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    paginate(mediaFor.page);\r\n  }, [mediaFor.page]);\r\n\r\n  const setLink = () => {\r\n    const mediaLink = `/${mediaFor.typeFor}?query=${mediaFor.title\r\n      .split(' ')\r\n      .join('_')}&page=`;\r\n\r\n    const discLink = `/discover?query=${mediaFor.typeFor}&page=`;\r\n\r\n    return forPage ? discLink : mediaLink;\r\n  };\r\n\r\n  const router = useRouter();\r\n\r\n  console.log('from media section', router);\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='MediaSection'>\r\n        <div className='wrapper'>\r\n          <div className={`head`}>\r\n            <h2 className='title'>\r\n              {forPage ? (\r\n                'Discover New Movies & TV Shows'\r\n              ) : (\r\n                <>\r\n                  {mediaFor.title}\r\n                  {'  '}\r\n                  {mediaFor.typeFor === 'tv' ? 'TV' : mediaFor.typeFor}\r\n                </>\r\n              )}\r\n            </h2>\r\n            {forPage && (\r\n              <>\r\n                <div className='head--tabs'>\r\n                  <Link href='/discover?query=movie&page=1'>\r\n                    <a\r\n                      onClick={() =>\r\n                        setForm({\r\n                          year: '',\r\n                          sort_by: 'popularity.desc',\r\n                          genre: ''\r\n                        })\r\n                      }\r\n                      className={`head--tabs__tab ${mediaFor.title ===\r\n                        'movie' && 'disabled'}`}\r\n                    >\r\n                      {' '}\r\n                      Movies\r\n                    </a>\r\n                  </Link>\r\n                  <Link href='/discover?query=tv&page=1'>\r\n                    <a\r\n                      onClick={() =>\r\n                        setForm({\r\n                          year: '',\r\n                          sort_by: 'popularity.desc',\r\n                          genre: ''\r\n                        })\r\n                      }\r\n                      className={`head--tabs__tab ${mediaFor.title === 'tv' &&\r\n                        'disabled'}`}\r\n                    >\r\n                      Tv Shows\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n                <DiscoverForm />\r\n              </>\r\n            )}\r\n          </div>\r\n          <Pagination\r\n            numberOfArticles={mediaFor.total_pages}\r\n            typeFor={setLink()}\r\n          />\r\n          <div\r\n            className={\r\n              mediaFor.typeFor === 'person'\r\n                ? 'person--grid'\r\n                : 'content--container'\r\n            }\r\n          >\r\n            {mediaFor.results.length === 0 ? (\r\n              <h3 className='text-dark vh-100'>Sorry Nothing Found</h3>\r\n            ) : (\r\n              mediaFor.results.map(item =>\r\n                mediaFor.typeFor === 'person' ? (\r\n                  <PersonCard key={item.id} data={item} />\r\n                ) : (\r\n                  <CardTwo\r\n                    key={item.id}\r\n                    data={item}\r\n                    typeFor={mediaFor.typeFor}\r\n                  />\r\n                )\r\n              )\r\n            )}\r\n          </div>\r\n          <Pagination\r\n            numberOfArticles={mediaFor.total_pages}\r\n            typeFor={setLink()}\r\n          />\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MediaSection;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAmHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAOA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAOA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAcA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}