{"version":3,"file":"static/webpack/static\\development\\pages\\tv.js.7d99a81949ac461a10c7.hot-update.js","sources":["webpack:///./pages/tv/index.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport Layout from '../../components/layout';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport CardTwo from '../../components/ui/Cards/CardTwo';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport Pagination from '../../components/ui/Pagination/Pagination';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  padding: 150px 1em 0 1em;\r\n\r\n  .wrapper {\r\n    max-width: 1500px;\r\n    margin: 0 auto;\r\n\r\n    .title {\r\n      font-size: 1.5rem;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n\r\n  .content--container {\r\n    display: grid;\r\n    grid-gap: 2em;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .content--container {\r\n      grid-row-gap: 3.5em;\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nconst tv = ({ tv }) => {\r\n  const { paginate } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    paginate(tv.page);\r\n  }, [tv.page]);\r\n\r\n  console.log(tv);\r\n  return (\r\n    <Layout>\r\n      <Styled className='movie--section'>\r\n        <div className='wrapper'>\r\n          <h2 className='title'>{tv.title} TV Show</h2>\r\n          <Pagination\r\n            numberOfArticles={tv.total_pages}\r\n            typeFor={`/tv?query=${tv.title.split(' ').join('_')}&page=`}\r\n          />\r\n          <div className='content--container'>\r\n            {tv.results.map(item => (\r\n              <CardTwo key={item.id} data={item} typeFor={tv.typeFor} />\r\n            ))}\r\n          </div>\r\n          <Pagination\r\n            numberOfArticles={tv.total_pages}\r\n            typeFor={`/tv?query=${tv.title.split(' ').join('_')}&page=`}\r\n          />\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\ntv.getInitialProps = async ({ query }) => {\r\n  const queryLeng = Object.keys(query).length;\r\n  try {\r\n    const tv = await movieDB(\r\n      `tv/${queryLeng === 0 ? 'popular' : query.query}`,\r\n      `page=${query.page ? query.page : 1}`\r\n    );\r\n    return {\r\n      tv: {\r\n        typeFor: 'tv',\r\n        title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' '),\r\n        ...tv\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default tv;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AA0BA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAQA;AACA;AACA;AAFA;AADA;AACA;AARA;AAAA;AAAA;AAeA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;;;;A","sourceRoot":""}