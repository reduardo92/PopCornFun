{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d45b6b067c9628d3abbf.hot-update.js","sources":["webpack:///./components/ui/Cards/CardOne.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport { IMG_URL } from '../../context/types';\r\nimport { GoStar } from 'react-icons/go';\r\nimport setDateFormat from '../../utility/setDateFormat';\r\n\r\nconst Styled = styled.figure`\r\n  width: 160px;\r\n\r\n  .card--poster {\r\n    position: relative;\r\n    transition: var(--ease--in--out--02s);\r\n    cursor: pointer;\r\n    background-color: var(--grey-clr);\r\n    height: 240px;\r\n\r\n    img {\r\n      height: 100%;\r\n      object-fit: contain;\r\n    }\r\n\r\n    &::after {\r\n      content: 'View More';\r\n      transition: var(--ease--in--out--02s);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      position: absolute;\r\n      font-size: 0.8rem;\r\n      font-weight: bold;\r\n      /* background-color: rgba(188, 49, 49, 0.85); */\r\n      background-color: var(--primary-clr-rgba);\r\n      height: 0;\r\n      width: 100%;\r\n      opacity: 0;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n\r\n    &:hover::after,\r\n    &:focus::after {\r\n      opacity: 1;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .card--body {\r\n    &__info {\r\n      color: ${({ invert }) =>\r\n        invert ? 'var(--second-clr)' : 'var(--grey-clr)'};\r\n      display: flex;\r\n      align-items: baseline;\r\n      margin-top: 0.5em;\r\n\r\n      .info--top {\r\n        font-size: 0.9rem;\r\n      }\r\n    }\r\n\r\n    &__title a {\r\n      font-weight: bold;\r\n      color: ${({ invert }) => invert && 'var(--second-clr)'};\r\n      transition: var(--ease--in--out--02s);\r\n\r\n      &:hover,\r\n      &:focus {\r\n        color: var(--primary-clr);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: 180px;\r\n\r\n    .card--poster {\r\n      height: 270px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardOne = ({ data, typeFor, invert }) => (\r\n  <Styled className='card--one' invert={invert}>\r\n    <Link href={`/${typeFor}/[id]`} as={`/${typeFor}/${data.id}`}>\r\n      <div className='card--poster'>\r\n        <img\r\n          className='poster__img'\r\n          src={\r\n            data.poster_path || data.profile_path\r\n              ? `${IMG_URL}${data.poster_path || data.profile_path}`\r\n              : 'no_img.jpg'\r\n          }\r\n          alt={data.title || data.name}\r\n        />\r\n      </div>\r\n    </Link>\r\n    <div className='card--body'>\r\n      <div className='card--body__info'>\r\n        <span className='info--top'>\r\n          {data.release_date\r\n            ? setDateFormat(data.release_date)\r\n            : data.first_air_date\r\n            ? setDateFormat(data.first_air_date)\r\n            : data.known_for_department}\r\n        </span>\r\n        {(data.release_date || data.first_air_date) && (\r\n          <span className='rating--star'>\r\n            {data.vote_average}\r\n            <GoStar className='star' />\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className='card--body__title'>\r\n        <Link href={`/${typeFor}/[id]`} as={`/${typeFor}/${data.id}`}>\r\n          <a>{data.title || data.name}</a>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  </Styled>\r\n);\r\n\r\nexport default CardOne;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AA2CA;AAAA;AAAA;AAaA;AAAA;AAAA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjCA;AACA;AAuCA;;;;A","sourceRoot":""}