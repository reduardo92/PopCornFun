{"version":3,"file":"static/webpack/static\\development\\pages\\movie.js.164d34f10e49017d41a3.hot-update.js","sources":["webpack:///./components/ui/Pagination.jsx"],"sourcesContent":["// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import MovieContext from '../context/MovieContext';\r\n// import Link from 'next/link';\r\n\r\n// const Styled = styled.nav`\r\n//   .pagination {\r\n//     justify-content: center;\r\n//     flex-wrap: wrap;\r\n//   }\r\n\r\n//   .page-link {\r\n//     color: var(--primary-clr);\r\n//     font-weight: bold;\r\n//     /* font-family: var(--primary--fn); */\r\n//     border: 1px solid var(--primary--clr);\r\n//     cursor: pointer;\r\n//     &:hover,\r\n//     &:focus,\r\n//     &.active {\r\n//       background-color: var(--primary--clr);\r\n//     }\r\n//   }\r\n\r\n//   /* .pagination  */\r\n\r\n//   .page-item + .page-item {\r\n//     margin-left: 0.8em;\r\n//   }\r\n\r\n//   .page-item {\r\n//     padding: 0.5em 0;\r\n//   }\r\n// `;\r\n\r\n// const Pagination = ({ total_pages, typeFor }) => {\r\n//   const { itemPerPage, paginate, currentPage } = useContext(MovieContext);\r\n\r\n//   const pageNumbers = [];\r\n\r\n//     let prev = '';\r\n\r\n//     let next = '';\r\n\r\n//   for (let i = 1; i <= total_pages; i++) {\r\n//     pageNumbers.push(i);\r\n//     }\r\n\r\n//   return (\r\n//     <Styled className='pagination-nav'>\r\n//       <ul className='pagination'>\r\n//         {pageNumbers.length === 1\r\n//           ? ''\r\n//           : pageNumbers.map(number => (\r\n//               <li key={number} className='page-item'>\r\n//                 <Link href={typeFor + number}>\r\n//                   <div\r\n//                     onClick={() => paginate(number)}\r\n//                     className={`page-link ${\r\n//                       number === currentPage ? 'active' : ''\r\n//                     }`}\r\n//                   >\r\n//                     {number}\r\n//                   </div>\r\n//                 </Link>\r\n//               </li>\r\n//             ))}\r\n//       </ul>\r\n//     </Styled>\r\n//   );\r\n// };\r\n\r\n// export default Pagination;\r\n\r\n/* Pagination Component \r\n-------------------------------------------------*/\r\n\r\n// Pagination.propTypes = propTypes;\r\n\r\nconst Pagination = params => {\r\n  const {\r\n    numberOfArticles,\r\n    articlesPerPage,\r\n    currentPage,\r\n    numberOfButtons\r\n  } = params;\r\n\r\n  const numberOfPages = Math.ceil(numberOfArticles / articlesPerPage);\r\n\r\n  if (currentPage > numberOfPages || currentPage < 1)\r\n    return {\r\n      pagination: [],\r\n      currentPage\r\n    };\r\n\r\n  const buttons = Array(numberOfPages)\r\n    .fill(1)\r\n    .map((e, i) => e + i);\r\n  const sideButtons =\r\n    numberOfButtons % 2 === 0 ? numberOfButtons / 2 : (numberOfButtons - 1) / 2;\r\n\r\n  const calculLeft = (rest = 0) => {\r\n    return {\r\n      array: buttons\r\n        .slice(0, currentPage - 1)\r\n        .reverse()\r\n        .slice(0, sideButtons + rest)\r\n        .reverse(),\r\n      rest: function() {\r\n        return sideButtons - this.array.length;\r\n      }\r\n    };\r\n  };\r\n\r\n  const calculRight = (rest = 0) => {\r\n    return {\r\n      array: buttons.slice(currentPage).slice(0, sideButtons + rest),\r\n      rest: function() {\r\n        return sideButtons - this.array.length;\r\n      }\r\n    };\r\n  };\r\n\r\n  const leftButtons = calculLeft(calculRight().rest()).array;\r\n  const rightButtons = calculRight(calculLeft().rest()).array;\r\n\r\n  return {\r\n    pagination: [...leftButtons, currentPage, ...rightButtons],\r\n    currentPage\r\n  };\r\n};\r\n\r\nexport default Pagination;\r\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AAEA;AACA;AAFA;AAKA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAKA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;A","sourceRoot":""}