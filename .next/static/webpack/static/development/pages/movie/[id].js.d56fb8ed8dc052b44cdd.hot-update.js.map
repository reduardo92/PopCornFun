{"version":3,"file":"static/webpack/static\\development\\pages\\movie\\[id].js.d56fb8ed8dc052b44cdd.hot-update.js","sources":["webpack:///./pages/movie/.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport { IMG_URL_OR } from '../../components/context/types';\r\nimport TopBilledCast from '../../components/ui/TopBilledCast';\r\nimport ReviewSection from '../../components/ui/ReviewSection';\r\nimport MediaSection from '../../components/ui/MediaSection';\r\nimport Layout from '../../components/layout';\r\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\r\nimport RecommenSection from '../../components/ui/RecommenSection';\r\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  /* background: var(--white-clr); */\r\n  margin-top: 110px;\r\n\r\n  .profile--backdrop {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\r\n      url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`}) no-repeat center;\r\n    background-color: black;\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: top;\r\n    object-fit: cover;\r\n    position: relative;\r\n\r\n    /* &__img {\r\n      position: absolute;\r\n      bottom: -20vw;\r\n      left: 20px;\r\n      width: 120px;\r\n    } */\r\n  }\r\n\r\n  .profile--main {\r\n    position: relative;\r\n    padding: 2em 0.5em;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--main {\r\n      max-width: 1100px;\r\n      padding: 2em 1em;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    margin-top: 60px;\r\n\r\n    .profile--backdrop {\r\n      display: none;\r\n    }\r\n\r\n    .profile--main {\r\n      padding: 2em 0;\r\n      max-width: 100%;\r\n      width: 100%;\r\n      display: flex;\r\n      /* align-content: flex-start; */\r\n      flex-wrap: wrap;\r\n\r\n      .profile--content {\r\n        flex: 100%;\r\n      }\r\n\r\n      .main-con {\r\n        /* width: calc((100vw - 1000px) / 2 + 1100px); */\r\n        /* min-height: calc(100vh - 795px); */\r\n        max-width: 1600px;\r\n        /* flex: 80%; */\r\n        margin: 0 auto;\r\n      }\r\n\r\n      .profile--stats {\r\n        flex: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst MovieProfile = ({ movie }) => {\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile' bgImg={movie.backdrop_path}>\r\n        <div className='profile--backdrop' />\r\n        <div className='profile--main'>\r\n          <ProfileHeader data={movie} bgImg={movie.backdrop_path} />\r\n          <div className='main-con'>\r\n            <TopBilledCast data={movie.credits.cast} />\r\n            <ReviewSection data={movie.reviews.results} movieId={movie.id} />\r\n            <MediaSection\r\n              videos={movie.videos.results}\r\n              posters={movie.images.posters}\r\n              backdrops={movie.images.backdrops}\r\n              typeId={movie.id}\r\n            />\r\n            <RecommenSection data={movie} />\r\n          </div>\r\n        </div>\r\n        <ProfileStats\r\n          data={movie}\r\n          keywords={Object.values(movie.keywords)[0]}\r\n        />\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nMovieProfile.getInitialProps = async ctx => {\r\n  try {\r\n    const movie = await movieDB(\r\n      `movie/${ctx.query.id || '454626'}`,\r\n      'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      movie: { typeFor: 'movie', ...movie }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AA+DA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAOA;AAAA;AAAA;AADA;AACA;AAPA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;;;;A","sourceRoot":""}