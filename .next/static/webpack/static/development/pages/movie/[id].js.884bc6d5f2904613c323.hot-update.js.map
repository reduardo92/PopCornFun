{"version":3,"file":"static/webpack/static\\development\\pages\\movie\\[id].js.884bc6d5f2904613c323.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./pages/movie/.jsx"],"sourcesContent":["import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArrayLimit(arr, i) {\n  if (!(_isIterable(Object(arr)) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport { IMG_URL_OR } from '../../components/context/types';\r\nimport CirclePercentage from '../../components/ui/CirclePercentage';\r\nimport TagGroup from '../../components/ui/TagGroup';\r\nimport Link from 'next/link';\r\n\r\nconst Styled = styled.section`\r\n  background-color: red;\r\n  .profile--backdrop {\r\n    background-image: url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`});\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: center;\r\n  }\r\n`;\r\n\r\nconst MovieProfile = ({ movie, typeFor }) => {\r\n  console.log('profile', movie);\r\n\r\n  let countedNames = movie.credits.crew.reduce(function(acc, obj, index) {\r\n    let key = obj.name;\r\n    if (!acc[key]) {\r\n      acc[key] = [];\r\n    }\r\n\r\n    acc[key].push(obj);\r\n    return acc;\r\n  }, []);\r\n\r\n  console.log(\r\n    'out',\r\n    Object.entries(countedNames).map(([key, value]) => key[value])\r\n  );\r\n\r\n  return (\r\n    <Styled className='profile' bgImg={movie.backdrop_path}>\r\n      <div className='profile--backdrop' />\r\n      <div className='profile--header'>\r\n        <div className='profile--header__img'>\r\n          <img src='' alt='' className='poster' />\r\n        </div>\r\n        <div className='profile--header__content'>\r\n          <h2 className='title'>{movie.title || movie.name}</h2>\r\n          <div className='rating'>\r\n            <CirclePercentage value={movie.vote_average * 10} />\r\n            <TagGroup />\r\n          </div>\r\n          <div className='meta'>\r\n            <span className='release meta--tab'>2017</span>\r\n            <span className='runtime meta--tab'>1h 02 mins</span>\r\n            <span className='rating meta--tab'>R</span>\r\n            <span className='genre meta--tab'>Action,Drama,Sci-fi</span>\r\n          </div>\r\n          <div className='overview'>{movie.overview}</div>\r\n          <div className='crew'>\r\n            {movie.credits.crew\r\n              .filter(\r\n                item =>\r\n                  item.department === 'Directing' ||\r\n                  item.department === 'Writing' ||\r\n                  item.department === 'Producer'\r\n              )\r\n              .map(c => (\r\n                <div key={c.id} className='crew--person'>\r\n                  <Link href='/person/[id]' as={`/person/${c.id}`}>\r\n                    {c.name}\r\n                  </Link>\r\n                  <small className='d-block mt-1'>{c.job}</small>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nMovieProfile.getInitialProps = async ({ asPath }) => {\r\n  try {\r\n    const movie = await movieDB(\r\n      asPath.slice(1),\r\n      'append_to_response=account_states,external_ids,images,keywords,release_dates,videos,recommendations,reviews,credits'\r\n    );\r\n    return {\r\n      movie\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAOA;AADA;AACA;AAPA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;;;;A","sourceRoot":""}