{"version":3,"file":"static/webpack/static\\development\\pages\\movie\\[id].js.da3df62810eaf5cb3555.hot-update.js","sources":["webpack:///./components/ui/mediaProfile/ProfileHeader.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport { IMG_URL, IMG_URL_OR } from '../../context/types';\r\nimport groupCredits from '../../utility/groupCredits';\r\nimport timeConvert from '../../utility/timeConvert';\r\nimport CirclePercentage from '../CirclePercentage';\r\nimport TagGroup from '../TagGroup';\r\nimport PlayButton from '../PlayButton';\r\nimport Link from 'next/link';\r\nimport getRating from '../../utility/getRating';\r\nimport CrewTab from './CrewTab';\r\n\r\nconst Styled = styled.div`\r\n  .inner--content {\r\n    display: grid;\r\n    grid-gap: 1.7em;\r\n    grid-auto-columns: auto;\r\n  }\r\n\r\n  .rating,\r\n  .meta,\r\n  .overview,\r\n  .crew,\r\n  .play--button {\r\n    grid-column: 1/ 3;\r\n  }\r\n\r\n  .rating {\r\n    svg {\r\n      margin-right: calc(3vw + 0.5em);\r\n    }\r\n  }\r\n\r\n  .title {\r\n    align-self: center;\r\n    font-size: calc(0.5em + 3vw);\r\n  }\r\n\r\n  /* profile--content__img */\r\n  .profile--content__img {\r\n    width: 120px;\r\n    margin-top: -8em;\r\n    align-self: flex-end;\r\n  }\r\n\r\n  .year {\r\n    opacity: 0.6;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .rating,\r\n  .meta {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 0.5em;\r\n  }\r\n\r\n  .tag--group {\r\n    border-left: 1px solid #7b7b7b;\r\n    padding-left: 1.5em;\r\n  }\r\n\r\n  /* /// */\r\n  .meta {\r\n    justify-content: space-between;\r\n    font-size: 0.85rem;\r\n    align-items: stretch;\r\n\r\n    &--tab {\r\n      border-right: 1px solid #7b7b7b;\r\n      padding: 0 2em;\r\n      text-align: center;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    &--tab:last-child {\r\n      border: none;\r\n      padding: 0;\r\n      padding-left: 1em;\r\n      flex-wrap: wrap;\r\n      justify-content: space-evenly;\r\n    }\r\n  }\r\n\r\n  .crew {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 1em;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .play--button {\r\n    width: fit-content;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--header {\r\n      max-width: 1100px;\r\n      padding: 2em 1em;\r\n    }\r\n\r\n    .profile--content__img {\r\n      width: 160px;\r\n      justify-self: center;\r\n    }\r\n\r\n    .rating {\r\n      grid-column: 1 /2;\r\n    }\r\n\r\n    .meta {\r\n      grid-column: 2 /3;\r\n    }\r\n\r\n    .overview,\r\n    .crew {\r\n      grid-column: 1/ 3;\r\n    }\r\n\r\n    .play--button {\r\n      flex-direction: row;\r\n      font-size: 1.1rem;\r\n\r\n      &::before {\r\n        width: auto;\r\n        margin: auto;\r\n        transform-origin: left;\r\n      }\r\n\r\n      svg {\r\n        font-size: 2rem;\r\n        order: 1;\r\n        margin-left: 5px;\r\n      }\r\n\r\n      &:hover svg,\r\n      &:focus svg {\r\n        margin-left: 15px;\r\n        margin-bottom: 0;\r\n        transform: scale(0.98);\r\n      }\r\n    }\r\n\r\n    .CircularProgressbar {\r\n      width: 66px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.65), rgba(0, 0, 0, 0.65)),\r\n      url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`}) no-repeat center;\r\n    background-color: black;\r\n    min-height: 500px;\r\n    background-size: cover;\r\n    background-position: top;\r\n    object-fit: cover;\r\n    position: relative;\r\n    padding: 10em 1em 5em;\r\n\r\n    .inner--content {\r\n      max-width: 1500px;\r\n      margin: 0 auto;\r\n      grid-template-areas:\r\n        'prImg title title'\r\n        'prImg rating play'\r\n        'prImg meta meta'\r\n        'prImg overV overV'\r\n        'prImg crew crew';\r\n      grid-template-columns: 500px 1fr 1fr;\r\n      grid-gap: 2em;\r\n    }\r\n\r\n    .profile--content__img {\r\n      grid-area: prImg;\r\n      width: auto;\r\n      align-self: end;\r\n      max-width: 450px;\r\n    }\r\n    .title {\r\n      grid-area: title;\r\n    }\r\n    .rating {\r\n      grid-area: rating;\r\n    }\r\n    .meta {\r\n      grid-area: meta;\r\n    }\r\n    .overview {\r\n      grid-area: overV;\r\n    }\r\n    .crew {\r\n      grid-area: crew;\r\n    }\r\n    .play--button {\r\n      grid-area: play;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProfileHeader = ({ data, bgImg }) => {\r\n  const { setModal } = useContext(MovieContext);\r\n\r\n  const getGenres = () =>\r\n    data.genres.map((item, i) => (\r\n      <span className='genre--tab' key={item.name}>\r\n        {item.name}\r\n        {data.genres.length - 1 === i ? '' : ', '}\r\n      </span>\r\n    ));\r\n\r\n  const crew = (\r\n    <>\r\n      {data.created_by &&\r\n        data.created_by.map(item => <CrewTab key={item.id} crew={item} />)}\r\n      {groupCredits(data.credits.crew)\r\n        .slice(0, 6)\r\n        .map(item => (\r\n          <CrewTab key={item[0].id} crew={item[0]} />\r\n        ))}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Styled className='profile--content' bgImg={bgImg}>\r\n      <div className='inner--content'>\r\n        <div className='profile--content__img'>\r\n          <img\r\n            className='poster'\r\n            src={`${IMG_URL}${data.poster_path || data.profile_path}`}\r\n            alt={data.title || data.name}\r\n          />\r\n        </div>\r\n        <h2 className='title'>\r\n          {data.title || data.name}{' '}\r\n          <span className='year'>\r\n            (\r\n            {data.release_date\r\n              ? data.release_date.slice(0, 4)\r\n              : data.first_air_date.slice(0, 4)}\r\n            )\r\n          </span>\r\n        </h2>\r\n        <div className='rating'>\r\n          <CirclePercentage value={data.vote_average * 10} />\r\n          <TagGroup />\r\n        </div>\r\n        <div className='meta'>\r\n          <span className='release meta--tab'>\r\n            {data.release_date\r\n              ? data.release_date.slice(0, 4)\r\n              : data.first_air_date.slice(0, 4)}\r\n          </span>\r\n          <span className='runtime meta--tab'>\r\n            {timeConvert(\r\n              data.typeFor === 'movie' ? data.runtime : data.episode_run_time[0]\r\n            )}\r\n          </span>\r\n          <span className='rating meta--tab'>\r\n            {data.release_date\r\n              ? getRating(data.release_dates.results)\r\n              : getRating(data.content_ratings.results)}\r\n          </span>\r\n          <span className='genre meta--tab'>{getGenres()}</span>\r\n        </div>\r\n        <div className='overview'>\r\n          <h3 className='subTitle'>OVERVIEW</h3>\r\n          <p className='overview--para'>{data.overview}</p>\r\n        </div>\r\n        <div className='crew'>{crew}</div>\r\n        <PlayButton onclick={() => setModal(data.videos.results[0].key)} />\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AA2IA;AAAA;AAAA;AACA;AAgDA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AAOA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}