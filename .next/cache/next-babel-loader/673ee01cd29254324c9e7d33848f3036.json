{"ast":null,"code":"import axios from 'axios';\nimport { API_KEY, BASE_URL } from '../context/types';\n\nconst movieDB = async (url, query = '', method = 'get') => {\n  const type = {\n    movie: {\n      details: `/movie/${id}`,\n      accStates: `/movie/${id}/account_states`,\n      alterTitles: `/movie/${id}/alternative_titles`,\n      changes: `/movie/${id}/changes`,\n      credits: `/movie/${id}/credits`,\n      externalId: `/movie/${id}/external_ids`,\n      images: `/movie/${id}/images`,\n      Keywords: `/movie/${id}/keywords`,\n      ReleaseDate: `/movie/${id}/release_dates`,\n      videos: `/movie/${id}/videos`,\n      translations: `/movie/${id}/translations`,\n      recommend: `/movie/${id}/recommendations`,\n      similar: `/movie/${id}/similar`,\n      reviews: `/movie/${id}/reviews`,\n      list: `/movie/${id}/lists`,\n      rate: `/movie/${id}/rating`,\n      rating: `/movie/${id}/rating`,\n      latest: `/movie/latest`,\n      now_playing: `/movie/now_playing`,\n      popular: `/movie/popular`,\n      top_rated: `/movie/top_rated`,\n      upcoming: `/movie/upcoming`\n    }\n  };\n\n  try {\n    const {\n      data\n    } = await axios[method](`${BASE_URL}${url}?${API_KEY}&language=en-US${query == '' ? '' : `&${query}`}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return {\n      error: 'sorry something went wrong'\n    };\n  }\n};\n\nexport default movieDB;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/utility/movieDB.js"],"names":["axios","API_KEY","BASE_URL","movieDB","url","query","method","type","movie","details","id","accStates","alterTitles","changes","credits","externalId","images","Keywords","ReleaseDate","videos","translations","recommend","similar","reviews","list","rate","rating","latest","now_playing","popular","top_rated","upcoming","data","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;;AAEA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,KAAK,GAAG,EAApB,EAAwBC,MAAM,GAAG,KAAjC,KAA2C;AACzD,QAAMC,IAAI,GAAG;AACXC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAG,UAASC,EAAG,EADjB;AAELC,MAAAA,SAAS,EAAG,UAASD,EAAG,iBAFnB;AAGLE,MAAAA,WAAW,EAAG,UAASF,EAAG,qBAHrB;AAILG,MAAAA,OAAO,EAAG,UAASH,EAAG,UAJjB;AAKLI,MAAAA,OAAO,EAAG,UAASJ,EAAG,UALjB;AAMLK,MAAAA,UAAU,EAAG,UAASL,EAAG,eANpB;AAOLM,MAAAA,MAAM,EAAG,UAASN,EAAG,SAPhB;AAQLO,MAAAA,QAAQ,EAAG,UAASP,EAAG,WARlB;AASLQ,MAAAA,WAAW,EAAG,UAASR,EAAG,gBATrB;AAULS,MAAAA,MAAM,EAAG,UAAST,EAAG,SAVhB;AAWLU,MAAAA,YAAY,EAAG,UAASV,EAAG,eAXtB;AAYLW,MAAAA,SAAS,EAAG,UAASX,EAAG,kBAZnB;AAaLY,MAAAA,OAAO,EAAG,UAASZ,EAAG,UAbjB;AAcLa,MAAAA,OAAO,EAAG,UAASb,EAAG,UAdjB;AAeLc,MAAAA,IAAI,EAAG,UAASd,EAAG,QAfd;AAgBLe,MAAAA,IAAI,EAAG,UAASf,EAAG,SAhBd;AAiBLgB,MAAAA,MAAM,EAAG,UAAShB,EAAG,SAjBhB;AAkBLiB,MAAAA,MAAM,EAAG,eAlBJ;AAmBLC,MAAAA,WAAW,EAAG,oBAnBT;AAoBLC,MAAAA,OAAO,EAAG,gBApBL;AAqBLC,MAAAA,SAAS,EAAG,kBArBP;AAsBLC,MAAAA,QAAQ,EAAG;AAtBN;AADI,GAAb;;AA2BA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhC,KAAK,CAACM,MAAD,CAAL,CACpB,GAAEJ,QAAS,GAAEE,GAAI,IAAGH,OAAQ,kBAC3BI,KAAK,IAAI,EAAT,GAAc,EAAd,GAAoB,IAAGA,KAAM,EAC9B,EAHoB,CAAvB;AAKA,WAAO2B,IAAP;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AACLA,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;AACF,CAzCD;;AA2CA,eAAe9B,OAAf","sourcesContent":["import axios from 'axios';\r\nimport { API_KEY, BASE_URL } from '../context/types';\r\n\r\nconst movieDB = async (url, query = '', method = 'get') => {\r\n  const type = {\r\n    movie: {\r\n      details: `/movie/${id}`,\r\n      accStates: `/movie/${id}/account_states`,\r\n      alterTitles: `/movie/${id}/alternative_titles`,\r\n      changes: `/movie/${id}/changes`,\r\n      credits: `/movie/${id}/credits`,\r\n      externalId: `/movie/${id}/external_ids`,\r\n      images: `/movie/${id}/images`,\r\n      Keywords: `/movie/${id}/keywords`,\r\n      ReleaseDate: `/movie/${id}/release_dates`,\r\n      videos: `/movie/${id}/videos`,\r\n      translations: `/movie/${id}/translations`,\r\n      recommend: `/movie/${id}/recommendations`,\r\n      similar: `/movie/${id}/similar`,\r\n      reviews: `/movie/${id}/reviews`,\r\n      list: `/movie/${id}/lists`,\r\n      rate: `/movie/${id}/rating`,\r\n      rating: `/movie/${id}/rating`,\r\n      latest: `/movie/latest`,\r\n      now_playing: `/movie/now_playing`,\r\n      popular: `/movie/popular`,\r\n      top_rated: `/movie/top_rated`,\r\n      upcoming: `/movie/upcoming`\r\n    }\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios[method](\r\n      `${BASE_URL}${url}?${API_KEY}&language=en-US${\r\n        query == '' ? '' : `&${query}`\r\n      }`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      error: 'sorry something went wrong'\r\n    };\r\n  }\r\n};\r\n\r\nexport default movieDB;\r\n"]},"metadata":{},"sourceType":"module"}