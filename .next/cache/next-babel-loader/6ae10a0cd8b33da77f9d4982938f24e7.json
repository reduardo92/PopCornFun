{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\context\\\\auth\\\\AuthState.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport useAuthReducer from './useAuthReducer';\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../profile/profileTypes';\nimport setAuthToken from '../../utility/setAuthToken';\nimport configHeader from '../../utility/configHeader';\nvar authInitialState = {\n  token: localStorage.getItem('token'),\n  isAuthentucated: null,\n  loading: true,\n  user: null,\n  error: null\n};\n\nvar AuthState = function AuthState(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(useAuthReducer, authInitialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Load User\n\n\n  var loadUser = function loadUser() {\n    var res;\n    return _regeneratorRuntime.async(function loadUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //   check if token is in localStrorage to load user\n            if (localStorage.token) {\n              setAuthToken(localStorage.token);\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get('/api/auth'));\n\n          case 4:\n            res = _context.sent;\n            dispatch({\n              type: USER_LOADED,\n              payload: res.data\n            });\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch({\n              type: AUTH_ERROR\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  }; // Register User\n\n\n  var registerUser = function registerUser(formData) {\n    var res;\n    return _regeneratorRuntime.async(function registerUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('/api/users', formData, configHeader));\n\n          case 3:\n            res = _context2.sent;\n            dispatch({\n              type: REGISTER_SUCCESS,\n              payload: res.data\n            }); // Load User\n\n            loadUser();\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: REGISTER_FAIL,\n              payload: _context2.t0.response.data.msg\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }; // Login User\n\n\n  var loginUser = function loginUser(formData) {\n    var res;\n    return _regeneratorRuntime.async(function loginUser$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('/api/auth', formData, configHeader));\n\n          case 3:\n            res = _context3.sent;\n            dispatch({\n              type: LOGIN_SUCCESS,\n              payload: res.data\n            }); // Load User\n\n            loadUser();\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            dispatch({\n              type: LOGIN_FAIL,\n              payload: _context3.t0.response.data.msg\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }; // Logout\n\n\n  var logout = function logout() {\n    dispatch({\n      type: LOGOUT\n    });\n  }; // Clear Erros\n\n\n  var clearErros = function clearErros() {\n    return dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: _objectSpread({}, state, {\n      loadUser: loadUser,\n      registerUser: registerUser,\n      loginUser: loginUser,\n      logout: logout,\n      clearErros: clearErros\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/context/auth/AuthState.js"],"names":["React","useReducer","useAuthReducer","AuthContext","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","setAuthToken","configHeader","authInitialState","token","localStorage","getItem","isAuthentucated","loading","user","error","AuthState","children","state","dispatch","loadUser","get","res","type","payload","data","registerUser","formData","post","response","msg","loginUser","logout","clearErros"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport useAuthReducer from './useAuthReducer';\r\nimport AuthContext from './AuthContext';\r\nimport axios from 'axios';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS\r\n} from '../profile/profileTypes';\r\nimport setAuthToken from '../../utility/setAuthToken';\r\nimport configHeader from '../../utility/configHeader';\r\n\r\nconst authInitialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthentucated: null,\r\n  loading: true,\r\n  user: null,\r\n  error: null\r\n};\r\n\r\nconst AuthState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(useAuthReducer, authInitialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    //   check if token is in localStrorage to load user\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get('/api/auth');\r\n      dispatch({ type: USER_LOADED, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  };\r\n  // Register User\r\n  const registerUser = async formData => {\r\n    try {\r\n      const res = await axios.post('/api/users', formData, configHeader);\r\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n\r\n      // Load User\r\n      loadUser();\r\n    } catch (error) {\r\n      dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\r\n    }\r\n  };\r\n  // Login User\r\n  const loginUser = async formData => {\r\n    try {\r\n      const res = await axios.post('/api/auth', formData, configHeader);\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n      // Load User\r\n      loadUser();\r\n    } catch (error) {\r\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data.msg });\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n  // Clear Erros\r\n  const clearErros = () => dispatch({ type: CLEAR_ERRORS });\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadUser,\r\n        registerUser,\r\n        loginUser,\r\n        logout,\r\n        clearErros\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}