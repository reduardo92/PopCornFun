{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\Cards\\\\RecommenCard.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport CirclePercentage from '../CirclePercentage';\nimport { IMG_URL } from '../../context/types';\nimport { GoCalendar } from 'react-icons/go';\nimport Link from 'next/link';\nconst Styled = styled.div.withConfig({\n  displayName: \"RecommenCard__Styled\",\n  componentId: \"sc-8rijlz-0\"\n})([\".recommend--card--poster{position:relative;&__release{position:absolute;bottom:0;left:0;right:0;color:var(--white-clr);background-color:rgba(188,49,49,1);padding:0.5em 0;text-align:center;font-weight:bold;font-size:0.9rem;display:flex;align-items:center;justify-content:center;.calendar{margin-right:0.5em;font-size:1.2rem;}.date{margin-right:0.5em;}}}\"]);\n\nconst RecommenCard = ({\n  data,\n  typeFor\n}) => {\n  return __jsx(Styled, {\n    className: \"recommend--card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/${typeFor}/[id]`,\n    as: `/${typeFor}/${data.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"recommend--card--poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"recommend--card--poster__img\",\n    src: `${IMG_URL}${data.poster_path}`,\n    alt: data.title || data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"recommend--card--poster__release\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(GoCalendar, {\n    className: \"calendar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, data.release_date)))), __jsx(\"div\", {\n    className: \"recommend--card__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/${typeFor}/[id]`,\n    as: `/${typeFor}/${data.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"recommend--card__content--name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, data.title)), __jsx(CirclePercentage, {\n    value: data.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n};\n\nexport default RecommenCard;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/Cards/RecommenCard.jsx"],"names":["React","styled","CirclePercentage","IMG_URL","GoCalendar","Link","Styled","div","RecommenCard","data","typeFor","id","poster_path","title","name","release_date","vote_average"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,MAAM,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,wWAAZ;;AAgCA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAC1C,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGA,OAAQ,OAAxB;AAAgC,IAAA,EAAE,EAAG,IAAGA,OAAQ,IAAGD,IAAI,CAACE,EAAG,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,GAAG,EAAG,GAAER,OAAQ,GAAEM,IAAI,CAACG,WAAY,EAFrC;AAGE,IAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACK,IAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBL,IAAI,CAACM,YAA7B,CAFF,CANF,CADF,CADF,EAeE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGL,OAAQ,OAAxB;AAAgC,IAAA,EAAE,EAAG,IAAGA,OAAQ,IAAGD,IAAI,CAACE,EAAG,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CF,IAAI,CAACI,KAApD,CADF,CADF,EAIE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEJ,IAAI,CAACO,YAAL,GAAoB,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAfF,CADF;AAwBD,CAzBD;;AA2BA,eAAeR,YAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CirclePercentage from '../CirclePercentage';\r\nimport { IMG_URL } from '../../context/types';\r\nimport { GoCalendar } from 'react-icons/go';\r\nimport Link from 'next/link';\r\n\r\nconst Styled = styled.div`\r\n  .recommend--card--poster {\r\n    position: relative;\r\n    /* width: 200px; */\r\n    /* height: 100px; */\r\n    &__release {\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      color: var(--white-clr);\r\n      background-color: rgba(188, 49, 49, 1);\r\n      padding: 0.5em 0;\r\n      text-align: center;\r\n      font-weight: bold;\r\n      font-size: 0.9rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      .calendar {\r\n        margin-right: 0.5em;\r\n        font-size: 1.2rem;\r\n      }\r\n\r\n      .date {\r\n        margin-right: 0.5em;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst RecommenCard = ({ data, typeFor }) => {\r\n  return (\r\n    <Styled className='recommend--card'>\r\n      <Link href={`/${typeFor}/[id]`} as={`/${typeFor}/${data.id}`}>\r\n        <div className='recommend--card--poster'>\r\n          <img\r\n            className='recommend--card--poster__img'\r\n            src={`${IMG_URL}${data.poster_path}`}\r\n            alt={data.title || data.name}\r\n          />\r\n          <div className='recommend--card--poster__release'>\r\n            <GoCalendar className='calendar' />\r\n            <span className='date'>{data.release_date}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='recommend--card__content'>\r\n        <Link href={`/${typeFor}/[id]`} as={`/${typeFor}/${data.id}`}>\r\n          <a className='recommend--card__content--name'>{data.title}</a>\r\n        </Link>\r\n        <CirclePercentage value={data.vote_average * 10} />\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default RecommenCard;\r\n"]},"metadata":{},"sourceType":"module"}