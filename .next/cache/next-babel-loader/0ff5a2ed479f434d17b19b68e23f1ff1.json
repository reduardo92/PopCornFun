{"ast":null,"code":"import { verify } from 'jsonwebtoken';\n\nconst auth = fn => async (req, res) => {\n  console.log(req.url);\n\n  try {\n    verify(req.cookies.auth, process.env.jwtSecret, async (err, decoded) => {\n      if (!err && decoded) {\n        req.user = decoded.user;\n        return await fn(req, res);\n      }\n\n      return res.status(401).json({\n        msg: 'No token, authorization denied'\n      });\n    });\n  } catch (error) {\n    res.status(401).json({\n      msg: 'token is not valid'\n    });\n  }\n};\n\nexport default auth; // const auth = (fn) => async(req, res) => {\n//   // Get token from header\n//   const token = req.headers['x-auth-token'];\n//   // Check if not token\n//   if (!token) {\n//     return res.status(401).json({ msg: 'No token, authorization denied' });\n//   }\n//   try {\n//     const decoded = jwt.verify(token, process.env.jwtSecret);\n//     req.user = decoded.user;\n//     return await fn(req, res);\n//   } catch (err) {\n//     res.status(401).json({ msg: 'token is not valid' });\n//   }\n// };\n// export default auth;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/server/middleware/auth.js"],"names":["verify","auth","fn","req","res","console","log","url","cookies","process","env","jwtSecret","err","decoded","user","status","json","msg","error"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,IAAI,GAAIC,EAAD,IAAQ,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,GAAhB;;AACA,MAAI;AACFP,IAAAA,MAAM,CAACG,GAAG,CAACK,OAAJ,CAAYP,IAAb,EAAmBQ,OAAO,CAACC,GAAR,CAAYC,SAA/B,EAA0C,OAAOC,GAAP,EAAYC,OAAZ,KAAwB;AACtE,UAAI,CAACD,GAAD,IAAQC,OAAZ,EAAqB;AACnBV,QAAAA,GAAG,CAACW,IAAJ,GAAWD,OAAO,CAACC,IAAnB;AACA,eAAO,MAAMZ,EAAE,CAACC,GAAD,EAAMC,GAAN,CAAf;AACD;;AACD,aAAOA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAArB,CAAP;AACD,KANK,CAAN;AAOD,GARD,CAQE,OAAOC,KAAP,EAAc;AACdd,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB;AACD;AACF,CAbD;;AAcA,eAAehB,IAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { verify } from 'jsonwebtoken';\r\n\r\nconst auth = (fn) => async (req, res) => {\r\n  console.log(req.url);\r\n  try {\r\n    verify(req.cookies.auth, process.env.jwtSecret, async (err, decoded) => {\r\n      if (!err && decoded) {\r\n        req.user = decoded.user;\r\n        return await fn(req, res);\r\n      }\r\n      return res.status(401).json({ msg: 'No token, authorization denied' });\r\n    });\r\n  } catch (error) {\r\n    res.status(401).json({ msg: 'token is not valid' });\r\n  }\r\n};\r\nexport default auth;\r\n\r\n// const auth = (fn) => async(req, res) => {\r\n//   // Get token from header\r\n//   const token = req.headers['x-auth-token'];\r\n\r\n//   // Check if not token\r\n//   if (!token) {\r\n//     return res.status(401).json({ msg: 'No token, authorization denied' });\r\n//   }\r\n\r\n//   try {\r\n//     const decoded = jwt.verify(token, process.env.jwtSecret);\r\n//     req.user = decoded.user;\r\n//     return await fn(req, res);\r\n\r\n//   } catch (err) {\r\n//     res.status(401).json({ msg: 'token is not valid' });\r\n//   }\r\n// };\r\n// export default auth;\r\n"]},"metadata":{},"sourceType":"module"}