{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport { IMG_URL_OR, IMG_URL } from '../../components/context/types';\nimport CirclePercentage from '../../components/ui/CirclePercentage';\nimport TagGroup from '../../components/ui/TagGroup';\nimport Link from 'next/link';\nimport PlayButton from '../../components/ui/PlayButton';\nimport TopBilledCast from '../../components/ui/TopBilledCast';\nimport ReviewSection from '../../components/ui/ReviewSection';\nimport MediaSection from '../../components/ui/MediaSection';\nimport MovieContext from '../../components/context/MovieContext';\nimport Layout from '../../components/layout';\nconst Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"zlmctg-0\"\n})([\"background:var(--bg-gradient);margin-top:123px;.profile--backdrop{background:linear-gradient(rgba(0,0,0,0.2),rgba(0,0,0,0.2)),url(\", \") no-repeat center;background-color:black;min-height:400px;background-size:cover;background-position:top;object-fit:cover;position:relative;&__img{position:absolute;bottom:-20vw;left:20px;width:120px;}}.profile--header{position:relative;padding:2em 0.5em;max-width:750px;margin:0 auto;}.profile--header__content{display:grid;grid-gap:1.7em;grid-auto-columns:auto;.rating{svg{margin-right:calc(3vw + 0.5em);}}}.head{display:grid;grid-template-columns:auto 1fr;grid-gap:1em;padding:0 1em 0.5em;.title{align-self:center;font-size:calc(0.5em + 3vw);}}.profile--header__img{width:120px;margin-top:-8em;align-self:flex-end;}.year{opacity:0.6;font-weight:400;}.rating,.meta{display:flex;align-items:center;padding:0 0.5em;}.tag--group{border-left:1px solid #7b7b7b;padding-left:1.5em;}.meta{justify-content:space-between;font-size:0.85rem;&--tab{border-right:1px solid #7b7b7b;padding-right:1em;text-align:center;}&--tab:last-child{border:none;}}.crew{display:grid;grid-template-columns:repeat(2,1fr);grid-gap:1em;font-weight:bold;}.play--button{width:fit-content;}@media screen and (min-width:768px){.profile--header{max-width:900px;padding:2em 1em;}.head .profile--header__img{width:160px;}.rating{grid-column:1 /2;}.meta{grid-column:2 /3;}.head,.overview,.crew{grid-column:1/ 3;}.play--button{flex-direction:row;font-size:1.1rem;&::before{width:auto;margin:auto;transform-origin:left;}svg{font-size:2rem;order:1;margin-left:5px;}&:hover svg,&:focus svg{margin-left:15px;margin-bottom:0;transform:scale(0.98);}}.CircularProgressbar{width:66px;}}\"], ({\n  bgImg\n}) => `${IMG_URL_OR}${bgImg}`);\n\nconst credits = arry => {\n  const arrData = arry.reduce((acc, obj) => {\n    let key = obj.name;\n\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n\n    acc[key].push(obj);\n    return acc;\n  }, []);\n  const joinData = Object.entries(arrData).map(([key, value]) => {\n    let department = value.map(item => item.department);\n    let item = arrData[key].map(item => _objectSpread({}, item, {\n      department\n    }));\n    return item;\n  }).sort((a, b) => b.length - a.length);\n  return joinData;\n};\n\nconst MovieProfile = ({\n  movie,\n  typeFor\n}) => {\n  const {\n    setData\n  } = useContext(MovieContext);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"profile\",\n    bgImg: movie.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--header__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--header__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"poster\",\n    src: `${IMG_URL}${movie.poster_path || movie.profile_path}`,\n    alt: movie.title || movie.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, movie.title || movie.name, ' ', __jsx(\"span\", {\n    className: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"(\", movie.release_date.slice(0, 4), \")\"))), __jsx(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, __jsx(CirclePercentage, {\n    value: movie.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), __jsx(TagGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"release meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"2017\"), __jsx(\"span\", {\n    className: \"runtime meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"1h 02 mins\"), __jsx(\"span\", {\n    className: \"rating meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"R\"), __jsx(\"span\", {\n    className: \"genre meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Action,Drama,Sci-fi\")), __jsx(\"div\", {\n    className: \"overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"OVERVIEW\"), __jsx(\"p\", {\n    className: \"overview--para\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, movie.overview)), __jsx(\"div\", {\n    className: \"crew\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, credits(movie.credits.crew).map((c, i) => i < 6 && __jsx(\"div\", {\n    key: c[0].id,\n    className: \"crew--person\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/person/[id]\",\n    as: `/person/${c[0].id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, c[0].name), __jsx(\"small\", {\n    className: \"d-block mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, c[0].department.join(', '))))), __jsx(PlayButton, {\n    onclick: () => setData(movie.videos.results[1].key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }))), __jsx(TopBilledCast, {\n    data: movie.credits.cast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), __jsx(ReviewSection, {\n    data: movie.reviews.results,\n    movieId: movie.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }), __jsx(MediaSection, {\n    data: movie,\n    videos: movie.videos.results,\n    posters: movie.images.posters,\n    backdrops: movie.images.backdrops,\n    typeId: movie.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  })));\n};\n\nMovieProfile.getInitialProps = async ctx => {\n  console.log(ctx); // ctx.asPath.slice(1)\n\n  try {\n    const movie = await movieDB('movie/546554', 'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null');\n    console.log(ctx);\n    return {\n      movie\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default MovieProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/[id].jsx"],"names":["useContext","styled","movieDB","IMG_URL_OR","IMG_URL","CirclePercentage","TagGroup","Link","PlayButton","TopBilledCast","ReviewSection","MediaSection","MovieContext","Layout","Styled","section","bgImg","credits","arry","arrData","reduce","acc","obj","key","name","push","joinData","Object","entries","map","value","department","item","sort","a","b","length","MovieProfile","movie","typeFor","setData","backdrop_path","poster_path","profile_path","title","release_date","slice","vote_average","overview","crew","c","i","id","join","videos","results","cast","reviews","images","posters","backdrops","getInitialProps","ctx","console","log","error"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport { IMG_URL_OR, IMG_URL } from '../../components/context/types';\r\nimport CirclePercentage from '../../components/ui/CirclePercentage';\r\nimport TagGroup from '../../components/ui/TagGroup';\r\nimport Link from 'next/link';\r\nimport PlayButton from '../../components/ui/PlayButton';\r\nimport TopBilledCast from '../../components/ui/TopBilledCast';\r\nimport ReviewSection from '../../components/ui/ReviewSection';\r\nimport MediaSection from '../../components/ui/MediaSection';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport Layout from '../../components/layout';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 123px;\r\n\r\n  .profile--backdrop {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\r\n      url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`}) no-repeat center;\r\n    background-color: black;\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: top;\r\n    object-fit: cover;\r\n    position: relative;\r\n\r\n    &__img {\r\n      position: absolute;\r\n      bottom: -20vw;\r\n      left: 20px;\r\n      width: 120px;\r\n    }\r\n  }\r\n\r\n  .profile--header {\r\n    position: relative;\r\n    padding: 2em 0.5em;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .profile--header__content {\r\n    display: grid;\r\n    grid-gap: 1.7em;\r\n    grid-auto-columns: auto;\r\n\r\n    .rating {\r\n      svg {\r\n        margin-right: calc(3vw + 0.5em);\r\n      }\r\n    }\r\n  }\r\n\r\n  .head {\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    grid-gap: 1em;\r\n    padding: 0 1em 0.5em;\r\n\r\n    .title {\r\n      align-self: center;\r\n      font-size: calc(0.5em + 3vw);\r\n    }\r\n  }\r\n\r\n  /* profile--header__img */\r\n  .profile--header__img {\r\n    width: 120px;\r\n    margin-top: -8em;\r\n    align-self: flex-end;\r\n  }\r\n\r\n  .year {\r\n    opacity: 0.6;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .rating,\r\n  .meta {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 0.5em;\r\n  }\r\n\r\n  .tag--group {\r\n    border-left: 1px solid #7b7b7b;\r\n    padding-left: 1.5em;\r\n  }\r\n\r\n  /* /// */\r\n  .meta {\r\n    justify-content: space-between;\r\n    font-size: 0.85rem;\r\n\r\n    &--tab {\r\n      border-right: 1px solid #7b7b7b;\r\n      padding-right: 1em;\r\n      text-align: center;\r\n    }\r\n    &--tab:last-child {\r\n      border: none;\r\n    }\r\n  }\r\n  /* /// */\r\n\r\n  .crew {\r\n    /* margin: 1em 0; */\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 1em;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .play--button {\r\n    width: fit-content;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--header {\r\n      max-width: 900px;\r\n      padding: 2em 1em;\r\n    }\r\n\r\n    .head .profile--header__img {\r\n      width: 160px;\r\n    }\r\n\r\n    .rating {\r\n      grid-column: 1 /2;\r\n    }\r\n\r\n    .meta {\r\n      grid-column: 2 /3;\r\n    }\r\n\r\n    .head,\r\n    .overview,\r\n    .crew {\r\n      grid-column: 1/ 3;\r\n    }\r\n\r\n    .play--button {\r\n      flex-direction: row;\r\n      font-size: 1.1rem;\r\n\r\n      &::before {\r\n        width: auto;\r\n        margin: auto;\r\n        transform-origin: left;\r\n      }\r\n\r\n      svg {\r\n        font-size: 2rem;\r\n        order: 1;\r\n        margin-left: 5px;\r\n      }\r\n\r\n      &:hover svg,\r\n      &:focus svg {\r\n        margin-left: 15px;\r\n        margin-bottom: 0;\r\n        transform: scale(0.98);\r\n      }\r\n    }\r\n\r\n    .CircularProgressbar {\r\n      width: 66px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst credits = arry => {\r\n  const arrData = arry.reduce((acc, obj) => {\r\n    let key = obj.name;\r\n    if (!acc[key]) {\r\n      acc[key] = [];\r\n    }\r\n    acc[key].push(obj);\r\n    return acc;\r\n  }, []);\r\n\r\n  const joinData = Object.entries(arrData)\r\n    .map(([key, value]) => {\r\n      let department = value.map(item => item.department);\r\n      let item = arrData[key].map(item => ({ ...item, department }));\r\n      return item;\r\n    })\r\n    .sort((a, b) => b.length - a.length);\r\n\r\n  return joinData;\r\n};\r\n\r\nconst MovieProfile = ({ movie, typeFor }) => {\r\n  const { setData } = useContext(MovieContext);\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile' bgImg={movie.backdrop_path}>\r\n        <div className='profile--backdrop' />\r\n        <div className='profile--header'>\r\n          <div className='profile--header__content'>\r\n            <div className='head'>\r\n              <div className='profile--header__img'>\r\n                <img\r\n                  className='poster'\r\n                  src={`${IMG_URL}${movie.poster_path || movie.profile_path}`}\r\n                  alt={movie.title || movie.name}\r\n                />\r\n              </div>\r\n              <h2 className='title'>\r\n                {movie.title || movie.name}{' '}\r\n                <span className='year'>({movie.release_date.slice(0, 4)})</span>\r\n              </h2>\r\n            </div>\r\n            <div className='rating'>\r\n              <CirclePercentage value={movie.vote_average * 10} />\r\n              <TagGroup />\r\n            </div>\r\n            <div className='meta'>\r\n              <span className='release meta--tab'>2017</span>\r\n              <span className='runtime meta--tab'>1h 02 mins</span>\r\n              <span className='rating meta--tab'>R</span>\r\n              <span className='genre meta--tab'>Action,Drama,Sci-fi</span>\r\n            </div>\r\n            <div className='overview'>\r\n              <h3 className='subTitle'>OVERVIEW</h3>\r\n              <p className='overview--para'>{movie.overview}</p>\r\n            </div>\r\n            <div className='crew'>\r\n              {credits(movie.credits.crew).map(\r\n                (c, i) =>\r\n                  i < 6 && (\r\n                    <div key={c[0].id} className='crew--person'>\r\n                      <Link href='/person/[id]' as={`/person/${c[0].id}`}>\r\n                        {c[0].name}\r\n                      </Link>\r\n                      <small className='d-block mt-1'>\r\n                        {c[0].department.join(', ')}\r\n                      </small>\r\n                    </div>\r\n                  )\r\n              )}\r\n            </div>\r\n            <PlayButton onclick={() => setData(movie.videos.results[1].key)} />\r\n          </div>\r\n        </div>\r\n        <TopBilledCast data={movie.credits.cast} />\r\n        <ReviewSection data={movie.reviews.results} movieId={movie.id} />\r\n        <MediaSection\r\n          data={movie}\r\n          videos={movie.videos.results}\r\n          posters={movie.images.posters}\r\n          backdrops={movie.images.backdrops}\r\n          typeId={movie.id}\r\n        />\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nMovieProfile.getInitialProps = async ctx => {\r\n  console.log(ctx);\r\n\r\n  // ctx.asPath.slice(1)\r\n  try {\r\n    const movie = await movieDB(\r\n      'movie/546554',\r\n      'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null'\r\n    );\r\n    console.log(ctx);\r\n    return {\r\n      movie\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"]},"metadata":{},"sourceType":"module"}