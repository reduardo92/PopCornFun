{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport { IMG_URL_OR, IMG_URL } from '../../components/context/types';\nimport CirclePercentage from '../../components/ui/CirclePercentage';\nimport TagGroup from '../../components/ui/TagGroup';\nimport Link from 'next/link';\nimport PlayButton from '../../components/ui/PlayButton';\nvar Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"zlmctg-0\"\n})([\"background:var(--bg-gradient);margin-top:123px;.profile--backdrop{background-color:black;background:linear-gradient(rgba(0,0,0,0.2),rgba(0,0,0,0.2)),url(\", \") no-repeat center;min-height:400px;background-size:cover;background-position:top;object-fit:cover;position:relative;&__img{position:absolute;bottom:-20vw;left:20px;width:120px;}}.profile--header{position:relative;padding:2em 0.5em;max-width:750px;margin:0 auto;}.profile--header__content{display:grid;grid-gap:1.7em;grid-auto-columns:auto;}.head{display:grid;grid-template-columns:auto 1fr;grid-gap:1em;padding:0 1em 0.5em;}.profile--header__img{width:120px;margin-top:-8em;align-self:flex-end;}.title{align-self:center;font-size:calc(0.5em + 3vw);}.year{opacity:0.6;font-weight:400;}.rating,.meta{display:flex;align-items:center;padding:0 0.5em;}.rating{svg{margin-right:calc(3vw + 0.5em);}}.tag--group{border-left:1px solid #7b7b7b;padding-left:1.5em;}.meta{justify-content:space-between;font-size:0.85rem;&--tab{border-right:1px solid #7b7b7b;padding-right:1em;text-align:center;}&--tab:last-child{border:none;}}.overview{&--title{font-weight:bold;font-size:1.15rem;}}.crew{display:grid;grid-template-columns:repeat(2,1fr);grid-gap:1em;font-weight:bold;}@media screen and (min-width:768px){.profile--header{max-width:900px;padding:2em 1em;}.head .profile--header__img{width:160px;}.rating{grid-column:1 /2;}.meta{grid-column:2 /3;}.head,.overview,.crew{grid-column:1/ 3;}}\"], function (_ref) {\n  var bgImg = _ref.bgImg;\n  return \"\".concat(IMG_URL_OR).concat(bgImg);\n});\n\nvar credits = function credits(arry) {\n  var arrData = arry.reduce(function (acc, obj) {\n    var key = obj.name;\n\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n\n    acc[key].push(obj);\n    return acc;\n  }, []);\n\n  var joinData = _Object$entries(arrData).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n\n    var department = value.map(function (item) {\n      return item.department;\n    });\n    var item = arrData[key].map(function (item) {\n      return _objectSpread({}, item, {\n        department: department\n      });\n    });\n    return item;\n  }).sort(function (a, b) {\n    return b.length - a.length;\n  });\n\n  return joinData;\n};\n\nvar MovieProfile = function MovieProfile(_ref4) {\n  var movie = _ref4.movie,\n      typeFor = _ref4.typeFor;\n  console.log('profile', movie);\n  return __jsx(Styled, {\n    className: \"profile\",\n    bgImg: movie.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--header__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--header__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"poster\",\n    src: \"\".concat(IMG_URL).concat(movie.poster_path || movie.profile_path),\n    alt: movie.title || movie.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, movie.title || movie.name, ' ', __jsx(\"span\", {\n    className: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"(\", movie.release_date.slice(0, 4), \")\"))), __jsx(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(CirclePercentage, {\n    value: movie.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), __jsx(TagGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"release meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"2017\"), __jsx(\"span\", {\n    className: \"runtime meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"1h 02 mins\"), __jsx(\"span\", {\n    className: \"rating meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"R\"), __jsx(\"span\", {\n    className: \"genre meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Action,Drama,Sci-fi\")), __jsx(\"div\", {\n    className: \"overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"overview--title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"OVERVIEW\"), __jsx(\"p\", {\n    className: \"overview--para\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, movie.overview)), __jsx(\"div\", {\n    className: \"crew\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, credits(movie.credits.crew).map(function (c, i) {\n    return i < 6 && __jsx(\"div\", {\n      key: c[0].id,\n      className: \"crew--person\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/person/[id]\",\n      as: \"/person/\".concat(c[0].id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, c[0].name), __jsx(\"small\", {\n      className: \"d-block mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, c[0].department.join(', ')));\n  })))));\n};\n\nMovieProfile.getInitialProps = function _callee(ctx) {\n  var movie;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(ctx);\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(movieDB(ctx.asPath.slice(1), 'append_to_response=account_states,external_ids,images,keywords,release_dates,videos,recommendations,reviews,credits'));\n\n        case 4:\n          movie = _context.sent;\n          return _context.abrupt(\"return\", {\n            movie: movie\n          });\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]]);\n};\n\nexport default MovieProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/[id].jsx"],"names":["styled","movieDB","IMG_URL_OR","IMG_URL","CirclePercentage","TagGroup","Link","PlayButton","Styled","section","bgImg","credits","arry","arrData","reduce","acc","obj","key","name","push","joinData","map","value","department","item","sort","a","b","length","MovieProfile","movie","typeFor","console","log","backdrop_path","poster_path","profile_path","title","release_date","slice","vote_average","overview","crew","c","i","id","join","getInitialProps","ctx","asPath"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport { IMG_URL_OR, IMG_URL } from '../../components/context/types';\r\nimport CirclePercentage from '../../components/ui/CirclePercentage';\r\nimport TagGroup from '../../components/ui/TagGroup';\r\nimport Link from 'next/link';\r\nimport PlayButton from '../../components/ui/PlayButton';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 123px;\r\n\r\n  .profile--backdrop {\r\n    background-color: black;\r\n    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\r\n      url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`}) no-repeat center;\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: top;\r\n    object-fit: cover;\r\n    position: relative;\r\n\r\n    &__img {\r\n      position: absolute;\r\n      bottom: -20vw;\r\n      left: 20px;\r\n      width: 120px;\r\n    }\r\n  }\r\n\r\n  .profile--header {\r\n    position: relative;\r\n    padding: 2em 0.5em;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .profile--header__content {\r\n    display: grid;\r\n    grid-gap: 1.7em;\r\n    grid-auto-columns: auto;\r\n  }\r\n\r\n  .head {\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    grid-gap: 1em;\r\n    padding: 0 1em 0.5em;\r\n  }\r\n\r\n  /* profile--header__img */\r\n  .profile--header__img {\r\n    width: 120px;\r\n    margin-top: -8em;\r\n    align-self: flex-end;\r\n  }\r\n\r\n  .title {\r\n    align-self: center;\r\n    font-size: calc(0.5em + 3vw);\r\n  }\r\n\r\n  .year {\r\n    opacity: 0.6;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .rating,\r\n  .meta {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 0.5em;\r\n  }\r\n\r\n  .rating {\r\n    /* margin: 1em 0; */\r\n    svg {\r\n      margin-right: calc(3vw + 0.5em);\r\n    }\r\n  }\r\n  .tag--group {\r\n    border-left: 1px solid #7b7b7b;\r\n    padding-left: 1.5em;\r\n  }\r\n\r\n  /* /// */\r\n  .meta {\r\n    justify-content: space-between;\r\n    font-size: 0.85rem;\r\n\r\n    &--tab {\r\n      border-right: 1px solid #7b7b7b;\r\n      padding-right: 1em;\r\n      text-align: center;\r\n    }\r\n    &--tab:last-child {\r\n      border: none;\r\n    }\r\n  }\r\n  /* /// */\r\n\r\n  .overview {\r\n    &--title {\r\n      font-weight: bold;\r\n      font-size: 1.15rem;\r\n    }\r\n  }\r\n\r\n  .crew {\r\n    /* margin: 1em 0; */\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 1em;\r\n    font-weight: bold;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--header {\r\n      max-width: 900px;\r\n      padding: 2em 1em;\r\n    }\r\n\r\n    .head .profile--header__img {\r\n      width: 160px;\r\n    }\r\n\r\n    .rating {\r\n      grid-column: 1 /2;\r\n    }\r\n\r\n    .meta {\r\n      grid-column: 2 /3;\r\n    }\r\n\r\n    .head,\r\n    .overview,\r\n    .crew {\r\n      grid-column: 1/ 3;\r\n    }\r\n  }\r\n`;\r\n\r\nconst credits = arry => {\r\n  const arrData = arry.reduce((acc, obj) => {\r\n    let key = obj.name;\r\n    if (!acc[key]) {\r\n      acc[key] = [];\r\n    }\r\n    acc[key].push(obj);\r\n    return acc;\r\n  }, []);\r\n\r\n  const joinData = Object.entries(arrData)\r\n    .map(([key, value]) => {\r\n      let department = value.map(item => item.department);\r\n      let item = arrData[key].map(item => ({ ...item, department }));\r\n      return item;\r\n    })\r\n    .sort((a, b) => b.length - a.length);\r\n\r\n  return joinData;\r\n};\r\n\r\nconst MovieProfile = ({ movie, typeFor }) => {\r\n  console.log('profile', movie);\r\n\r\n  return (\r\n    <Styled className='profile' bgImg={movie.backdrop_path}>\r\n      <div className='profile--backdrop'>\r\n        {/* <div className='profile--backdrop__img'>\r\n          <img\r\n            className='poster'\r\n            src={`${IMG_URL}${movie.poster_path || movie.profile_path}`}\r\n            alt={movie.title || movie.name}\r\n          />\r\n        </div> */}\r\n      </div>\r\n      <div className='profile--header'>\r\n        {/* <div className='profile--header__img'>\r\n          <img\r\n            className='poster'\r\n            src={`${IMG_URL}${movie.poster_path || movie.profile_path}`}\r\n            alt={movie.title || movie.name}\r\n          />\r\n        </div> */}\r\n        <div className='profile--header__content'>\r\n          <div className='head'>\r\n            <div className='profile--header__img'>\r\n              <img\r\n                className='poster'\r\n                src={`${IMG_URL}${movie.poster_path || movie.profile_path}`}\r\n                alt={movie.title || movie.name}\r\n              />\r\n            </div>\r\n            <h2 className='title'>\r\n              {movie.title || movie.name}{' '}\r\n              <span className='year'>({movie.release_date.slice(0, 4)})</span>\r\n            </h2>\r\n          </div>\r\n          <div className='rating'>\r\n            <CirclePercentage value={movie.vote_average * 10} />\r\n            <TagGroup />\r\n            {/* <PlayButton /> */}\r\n          </div>\r\n          <div className='meta'>\r\n            <span className='release meta--tab'>2017</span>\r\n            <span className='runtime meta--tab'>1h 02 mins</span>\r\n            <span className='rating meta--tab'>R</span>\r\n            <span className='genre meta--tab'>Action,Drama,Sci-fi</span>\r\n          </div>\r\n          <div className='overview'>\r\n            <h3 className='overview--title'>OVERVIEW</h3>\r\n            <p className='overview--para'>{movie.overview}</p>\r\n          </div>\r\n          <div className='crew'>\r\n            {credits(movie.credits.crew).map(\r\n              (c, i) =>\r\n                i < 6 && (\r\n                  <div key={c[0].id} className='crew--person'>\r\n                    <Link href='/person/[id]' as={`/person/${c[0].id}`}>\r\n                      {c[0].name}\r\n                    </Link>\r\n                    <small className='d-block mt-1'>\r\n                      {c[0].department.join(', ')}\r\n                    </small>\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nMovieProfile.getInitialProps = async ctx => {\r\n  console.log(ctx);\r\n  try {\r\n    const movie = await movieDB(\r\n      ctx.asPath.slice(1),\r\n      'append_to_response=account_states,external_ids,images,keywords,release_dates,videos,recommendations,reviews,credits'\r\n    );\r\n    return {\r\n      movie\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"]},"metadata":{},"sourceType":"module"}