{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout';\nimport VideoHero from '../components/ui/VideoHero';\nimport PopularSection from '../components/ui/PopularSection';\nimport movieDB from '../components/utility/movieDB';\nimport SectionCarousel from '../components/ui/sectionCarousel/SectionCarousel';\nimport FeturedSection from '../components/ui/FeturedSection/FeturedSection';\nimport getFeturedMedia from '../components/utility/getFeturedMedia';\nimport { SET_HOME_DATA } from '../components/context/types';\nimport { useEffect, useContext } from 'react';\nimport MovieContext from '../components/context/MovieContext';\n\nconst IndexPage = ({\n  movieNowPlay,\n  tvOnAir,\n  movieAction,\n  tvAnima,\n  feturedMovie,\n  feturedTv,\n  people\n}) => {\n  const {\n    setData,\n    homeData\n  } = useContext(MovieContext);\n  useEffect(() => {\n    setData(SET_HOME_DATA, {\n      movieNowPlay,\n      tvOnAir,\n      movieAction,\n      tvAnima,\n      feturedMovie,\n      feturedTv,\n      people\n    });\n  }, [movieNowPlay, tvOnAir, movieAction, tvAnima, feturedMovie, feturedTv, people]);\n  console.log(homeData);\n  return homeData && __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(VideoHero, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: movieNowPlay,\n    typeFor: \"movie\",\n    title: __jsx(React.Fragment, null, \"in theaters \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), \" now to enjoy\"),\n    subtitle: \"Most watched movies\",\n    toLink: \"/movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: people,\n    typeFor: \"person\",\n    title: \"Popular persons in film\",\n    toLink: \"/person\",\n    order: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(FeturedSection, {\n    data: feturedMovie,\n    typeFor: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: tvOnAir,\n    typeFor: \"tv\",\n    title: __jsx(React.Fragment, null, \"Popular TV \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \"Series Right Now\"),\n    subtitle: \"Most watched tv\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: movieAction,\n    typeFor: \"movie\",\n    title: \"popular action movies\",\n    toLink: \"/movie\",\n    order: 'true',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(FeturedSection, {\n    data: feturedTv,\n    typeFor: \"tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: tvAnima,\n    typeFor: \"tv\",\n    title: \"animation to Enjoy\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};\n\nIndexPage.getInitialProps = async () => {\n  try {\n    const tv = await movieDB('tv/on_the_air');\n    const movie = await movieDB('movie/now_playing');\n    const movieAction = await movieDB('discover/movie', 'with_genres=28&sort_by=vote_count.desc');\n    const tvAnima = await movieDB('discover/tv', 'with_genres=16');\n    const feturedMovie = await getFeturedMedia('movie');\n    const feturedTv = await getFeturedMedia('tv');\n    const people = await movieDB('person/popular');\n    return {\n      movieNowPlay: movie.results.slice(0, 12),\n      tvOnAir: tv.results.slice(0, 12),\n      movieAction: movieAction.results.slice(0, 10),\n      tvAnima: tvAnima.results.slice(0, 10),\n      feturedMovie,\n      feturedTv,\n      people: people.results.slice(0, 12)\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      movieNowPlay: null,\n      tvOnAir: null\n    };\n  }\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/index.js"],"names":["Layout","VideoHero","PopularSection","movieDB","SectionCarousel","FeturedSection","getFeturedMedia","SET_HOME_DATA","useEffect","useContext","MovieContext","IndexPage","movieNowPlay","tvOnAir","movieAction","tvAnima","feturedMovie","feturedTv","people","setData","homeData","console","log","getInitialProps","tv","movie","results","slice","error"],"mappings":"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","sourcesContent":["import Layout from '../components/layout';\r\nimport VideoHero from '../components/ui/VideoHero';\r\nimport PopularSection from '../components/ui/PopularSection';\r\nimport movieDB from '../components/utility/movieDB';\r\nimport SectionCarousel from '../components/ui/sectionCarousel/SectionCarousel';\r\nimport FeturedSection from '../components/ui/FeturedSection/FeturedSection';\r\nimport getFeturedMedia from '../components/utility/getFeturedMedia';\r\nimport { SET_HOME_DATA } from '../components/context/types';\r\nimport { useEffect, useContext } from 'react';\r\nimport MovieContext from '../components/context/MovieContext';\r\n\r\nconst IndexPage = ({\r\n  movieNowPlay,\r\n  tvOnAir,\r\n  movieAction,\r\n  tvAnima,\r\n  feturedMovie,\r\n  feturedTv,\r\n  people\r\n}) => {\r\n  const { setData, homeData } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    setData(SET_HOME_DATA, {\r\n      movieNowPlay,\r\n      tvOnAir,\r\n      movieAction,\r\n      tvAnima,\r\n      feturedMovie,\r\n      feturedTv,\r\n      people\r\n    });\r\n  }, [\r\n    movieNowPlay,\r\n    tvOnAir,\r\n    movieAction,\r\n    tvAnima,\r\n    feturedMovie,\r\n    feturedTv,\r\n    people\r\n  ]);\r\n\r\n  console.log(homeData);\r\n\r\n  return (\r\n    homeData && (\r\n      <Layout>\r\n        <VideoHero />\r\n        <PopularSection\r\n          data={movieNowPlay}\r\n          typeFor='movie'\r\n          title={\r\n            <>\r\n              in theaters <br /> now to enjoy\r\n            </>\r\n          }\r\n          subtitle='Most watched movies'\r\n          toLink='/movie'\r\n        />\r\n        <SectionCarousel\r\n          data={people}\r\n          typeFor='person'\r\n          title='Popular persons in film'\r\n          toLink='/person'\r\n          order='true'\r\n        />\r\n        <FeturedSection data={feturedMovie} typeFor='movie' />\r\n        <PopularSection\r\n          data={tvOnAir}\r\n          typeFor='tv'\r\n          title={\r\n            <>\r\n              Popular TV <br />\r\n              Series Right Now\r\n            </>\r\n          }\r\n          subtitle='Most watched tv'\r\n          toLink='/tv'\r\n        />\r\n        <SectionCarousel\r\n          data={movieAction}\r\n          typeFor='movie'\r\n          title='popular action movies'\r\n          toLink='/movie'\r\n          order={'true'}\r\n        />\r\n        <FeturedSection data={feturedTv} typeFor='tv' />\r\n        <SectionCarousel\r\n          data={tvAnima}\r\n          typeFor='tv'\r\n          title='animation to Enjoy'\r\n          toLink='/tv'\r\n        />\r\n      </Layout>\r\n    )\r\n  );\r\n};\r\n\r\nIndexPage.getInitialProps = async () => {\r\n  try {\r\n    const tv = await movieDB('tv/on_the_air');\r\n    const movie = await movieDB('movie/now_playing');\r\n    const movieAction = await movieDB(\r\n      'discover/movie',\r\n      'with_genres=28&sort_by=vote_count.desc'\r\n    );\r\n    const tvAnima = await movieDB('discover/tv', 'with_genres=16');\r\n    const feturedMovie = await getFeturedMedia('movie');\r\n    const feturedTv = await getFeturedMedia('tv');\r\n    const people = await movieDB('person/popular');\r\n\r\n    return {\r\n      movieNowPlay: movie.results.slice(0, 12),\r\n      tvOnAir: tv.results.slice(0, 12),\r\n      movieAction: movieAction.results.slice(0, 10),\r\n      tvAnima: tvAnima.results.slice(0, 10),\r\n      feturedMovie,\r\n      feturedTv,\r\n      people: people.results.slice(0, 12)\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      movieNowPlay: null,\r\n      tvOnAir: null\r\n    };\r\n  }\r\n};\r\n\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}