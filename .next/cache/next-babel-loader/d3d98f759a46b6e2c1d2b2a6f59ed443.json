{"ast":null,"code":"import axios from 'axios';\nimport Router from 'next/router';\nimport { SITE_URL } from '../context/types';\n\nasync function getAuthToken(url, ctx) {\n  var _ctx$req;\n\n  const cookie = (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie;\n\n  if (!cookie) {\n    Router.replace('/login');\n    return {};\n  }\n\n  const data = await axios(`${SITE_URL}${url}`, {\n    headers: {\n      cookie\n    }\n  });\n\n  if (data.status === 401 && !ctx.req) {\n    Router.replace('/login');\n    return {};\n  }\n\n  if (data.status === 401 && ctx.req) {\n    ctx.res.writeHead(302, {\n      Location: `${SITE_URL}/login`\n    });\n    ctx.res.end();\n    return;\n  }\n\n  return data;\n}\n\nexport default getAuthToken;\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/utility/setAuthToken.js"],"names":["axios","Router","SITE_URL","getAuthToken","url","ctx","cookie","req","headers","replace","data","status","res","writeHead","Location","end","setAuthToken","token","defaults","common"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,eAAeC,YAAf,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AAAA;;AACpC,QAAMC,MAAM,eAAGD,GAAG,CAACE,GAAP,6CAAG,SAASC,OAAT,CAAiBF,MAAhC;;AAEA,MAAI,CAACA,MAAL,EAAa;AACXL,IAAAA,MAAM,CAACQ,OAAP,CAAe,QAAf;AACA,WAAO,EAAP;AACD;;AAED,QAAMC,IAAI,GAAG,MAAMV,KAAK,CAAE,GAAEE,QAAS,GAAEE,GAAI,EAAnB,EAAsB;AAC5CI,IAAAA,OAAO,EAAE;AAAEF,MAAAA;AAAF;AADmC,GAAtB,CAAxB;;AAIA,MAAII,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuB,CAACN,GAAG,CAACE,GAAhC,EAAqC;AACnCN,IAAAA,MAAM,CAACQ,OAAP,CAAe,QAAf;AACA,WAAO,EAAP;AACD;;AAED,MAAIC,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuBN,GAAG,CAACE,GAA/B,EAAoC;AAClCF,IAAAA,GAAG,CAACO,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AACrBC,MAAAA,QAAQ,EAAG,GAAEZ,QAAS;AADD,KAAvB;AAGAG,IAAAA,GAAG,CAACO,GAAJ,CAAQG,GAAR;AACA;AACD;;AAED,SAAOL,IAAP;AACD;;AAED,eAAeP,YAAf;AAEA,OAAO,MAAMa,YAAY,GAAIC,KAAD,IAAW;AACrC,MAAIA,KAAJ,EAAW;AACTjB,IAAAA,KAAK,CAACkB,QAAN,CAAeV,OAAf,CAAuBW,MAAvB,CAA8B,cAA9B,IAAgDF,KAAhD;AACD,GAFD,MAEO;AACL,WAAOjB,KAAK,CAACkB,QAAN,CAAeV,OAAf,CAAuBW,MAAvB,CAA8B,cAA9B,CAAP;AACD;AACF,CANM","sourcesContent":["import axios from 'axios';\r\nimport Router from 'next/router';\r\nimport { SITE_URL } from '../context/types';\r\n\r\nasync function getAuthToken(url, ctx) {\r\n  const cookie = ctx.req?.headers.cookie;\r\n\r\n  if (!cookie) {\r\n    Router.replace('/login');\r\n    return {};\r\n  }\r\n\r\n  const data = await axios(`${SITE_URL}${url}`, {\r\n    headers: { cookie },\r\n  });\r\n\r\n  if (data.status === 401 && !ctx.req) {\r\n    Router.replace('/login');\r\n    return {};\r\n  }\r\n\r\n  if (data.status === 401 && ctx.req) {\r\n    ctx.res.writeHead(302, {\r\n      Location: `${SITE_URL}/login`,\r\n    });\r\n    ctx.res.end();\r\n    return;\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nexport default getAuthToken;\r\n\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}