{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../server/middleware/database'; // import connectDB from '../../server/config/db';\n// // import Movies from '../../server/models/Movies';\n// // import Meal from '../../server/models/Meal';\n// import mongoose from 'mongoose';\n// const MovieSchema = mongoose.Schema({\n//   plot: String\n// });\n// const Movies = mongoose.model('movies', MovieSchema);\n// export default async (req, res) => {\n//   await connectDB();\n//   try {\n//     const movies = await Movies.findOne();\n//     console.log(movies);\n//   } catch (err) {\n//     console.error(err.message);\n//     res.status(500).send('Server Error');\n//   }\n// };\n\nconst user = nextConnect();\nuser.use(middleware);\nconsole.log(user);\nuser.get(async (req, res) => {\n  let doc = await req.db.collection('theaters').findOne();\n  console.log(doc);\n  res.json(doc);\n});\nexport default user;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/api/user.js"],"names":["nextConnect","middleware","user","use","console","log","get","req","res","doc","db","collection","findOne","json"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,kCAAvB,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,IAAI,GAAGF,WAAW,EAAxB;AAEAE,IAAI,CAACC,GAAL,CAASF,UAAT;AAEAG,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAA,IAAI,CAACI,GAAL,CAAS,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC3B,MAAIC,GAAG,GAAG,MAAMF,GAAG,CAACG,EAAJ,CAAOC,UAAP,CAAkB,UAAlB,EAA8BC,OAA9B,EAAhB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAD,EAAAA,GAAG,CAACK,IAAJ,CAASJ,GAAT;AACD,CAJD;AAMA,eAAeP,IAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../server/middleware/database';\r\n// import connectDB from '../../server/config/db';\r\n// // import Movies from '../../server/models/Movies';\r\n// // import Meal from '../../server/models/Meal';\r\n// import mongoose from 'mongoose';\r\n\r\n// const MovieSchema = mongoose.Schema({\r\n//   plot: String\r\n// });\r\n\r\n// const Movies = mongoose.model('movies', MovieSchema);\r\n\r\n// export default async (req, res) => {\r\n//   await connectDB();\r\n\r\n//   try {\r\n//     const movies = await Movies.findOne();\r\n//     console.log(movies);\r\n//   } catch (err) {\r\n//     console.error(err.message);\r\n//     res.status(500).send('Server Error');\r\n//   }\r\n\r\n// };\r\n\r\nconst user = nextConnect();\r\n\r\nuser.use(middleware);\r\n\r\nconsole.log(user);\r\n\r\nuser.get(async (req, res) => {\r\n  let doc = await req.db.collection('theaters').findOne();\r\n  console.log(doc);\r\n  res.json(doc);\r\n});\r\n\r\nexport default user;\r\n"]},"metadata":{},"sourceType":"module"}