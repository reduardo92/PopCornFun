{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { SITE_URL } from '../context/types';\n\nfunction getAuthToken(url, ctx) {\n  var _ctx$req;\n\n  var cookie, data;\n  return _regeneratorRuntime.async(function getAuthToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          cookie = (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie;\n\n          if (cookie) {\n            _context.next = 4;\n            break;\n          }\n\n          Router.replace('/login');\n          return _context.abrupt(\"return\", {});\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(axios(\"\".concat(SITE_URL).concat(url), {\n            headers: {\n              cookie: cookie\n            }\n          }));\n\n        case 6:\n          data = _context.sent;\n\n          if (!(data.status === 401 && !ctx.req)) {\n            _context.next = 10;\n            break;\n          }\n\n          Router.replace('/login');\n          return _context.abrupt(\"return\", {});\n\n        case 10:\n          if (!(data.status === 401 && ctx.req)) {\n            _context.next = 14;\n            break;\n          }\n\n          ctx.res.writeHead(302, {\n            Location: \"\".concat(SITE_URL, \"/login\")\n          });\n          ctx.res.end();\n          return _context.abrupt(\"return\");\n\n        case 14:\n          return _context.abrupt(\"return\", data);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default getAuthToken;\nexport var setAuthToken = function setAuthToken(token) {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/utility/setAuthToken.js"],"names":["axios","Router","SITE_URL","getAuthToken","url","ctx","cookie","req","headers","replace","data","status","res","writeHead","Location","end","setAuthToken","token","defaults","common"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,SAAeC,YAAf,CAA4BC,GAA5B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,UAAAA,MADR,eACiBD,GAAG,CAACE,GADrB,6CACiB,SAASC,OAAT,CAAiBF,MADlC;;AAAA,cAGOA,MAHP;AAAA;AAAA;AAAA;;AAIIL,UAAAA,MAAM,CAACQ,OAAP,CAAe,QAAf;AAJJ,2CAKW,EALX;;AAAA;AAAA;AAAA,2CAQqBT,KAAK,WAAIE,QAAJ,SAAeE,GAAf,GAAsB;AAC5CI,YAAAA,OAAO,EAAE;AAAEF,cAAAA,MAAM,EAANA;AAAF;AADmC,WAAtB,CAR1B;;AAAA;AAQQI,UAAAA,IARR;;AAAA,gBAYMA,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuB,CAACN,GAAG,CAACE,GAZlC;AAAA;AAAA;AAAA;;AAaIN,UAAAA,MAAM,CAACQ,OAAP,CAAe,QAAf;AAbJ,2CAcW,EAdX;;AAAA;AAAA,gBAiBMC,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuBN,GAAG,CAACE,GAjBjC;AAAA;AAAA;AAAA;;AAkBIF,UAAAA,GAAG,CAACO,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AACrBC,YAAAA,QAAQ,YAAKZ,QAAL;AADa,WAAvB;AAGAG,UAAAA,GAAG,CAACO,GAAJ,CAAQG,GAAR;AArBJ;;AAAA;AAAA,2CAyBSL,IAzBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BA,eAAeP,YAAf;AAEA,OAAO,IAAMa,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AACrC,MAAIA,KAAJ,EAAW;AACTjB,IAAAA,KAAK,CAACkB,QAAN,CAAeV,OAAf,CAAuBW,MAAvB,CAA8B,cAA9B,IAAgDF,KAAhD;AACD,GAFD,MAEO;AACL,WAAOjB,KAAK,CAACkB,QAAN,CAAeV,OAAf,CAAuBW,MAAvB,CAA8B,cAA9B,CAAP;AACD;AACF,CANM","sourcesContent":["import axios from 'axios';\r\nimport Router from 'next/router';\r\nimport { SITE_URL } from '../context/types';\r\n\r\nasync function getAuthToken(url, ctx) {\r\n  const cookie = ctx.req?.headers.cookie;\r\n\r\n  if (!cookie) {\r\n    Router.replace('/login');\r\n    return {};\r\n  }\r\n\r\n  const data = await axios(`${SITE_URL}${url}`, {\r\n    headers: { cookie },\r\n  });\r\n\r\n  if (data.status === 401 && !ctx.req) {\r\n    Router.replace('/login');\r\n    return {};\r\n  }\r\n\r\n  if (data.status === 401 && ctx.req) {\r\n    ctx.res.writeHead(302, {\r\n      Location: `${SITE_URL}/login`,\r\n    });\r\n    ctx.res.end();\r\n    return;\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nexport default getAuthToken;\r\n\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}