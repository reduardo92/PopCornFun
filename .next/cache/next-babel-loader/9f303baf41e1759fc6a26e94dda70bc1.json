{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout';\nimport VideoHero from '../components/ui/VideoHero';\nimport Contact from '../components/contact';\nimport PopularSection from '../components/ui/PopularSection';\nimport movieDB from '../components/utility/movieDB';\nimport SectionCarousel from '../components/ui/sectionCarousel/SectionCarousel';\nimport randomNum from '../components/utility/randomNum';\nimport FeturedSection from '../components/ui/FeturedSection/FeturedSection';\n\nconst IndexPage = ({\n  movieNowPlay,\n  tvOnAir,\n  movieAction,\n  tvAnima,\n  feturedMovie,\n  feturedTv,\n  fetTV\n}) => {\n  console.log(feturedMovie, feturedTv);\n  console.log(fetTV);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(VideoHero, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: movieNowPlay,\n    typeFor: \"movie\",\n    title: __jsx(React.Fragment, null, \"in theaters \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), \" now to enjoy\"),\n    subtitle: \"Most watched movies\",\n    toLink: \"/movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: movieAction,\n    typeFor: \"movie\",\n    title: \"popular action movies\",\n    toLink: \"/movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(FeturedSection, {\n    data: feturedMovie,\n    typeFor: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: tvOnAir,\n    typeFor: \"tv\",\n    title: __jsx(React.Fragment, null, \"Popular TV \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"Series Right Now\"),\n    subtitle: \"Most watched tv\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: tvAnima,\n    typeFor: \"tv\",\n    title: \"animation to Enjoy\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(FeturedSection, {\n    data: feturedTv,\n    typeFor: \"tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(Contact, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nconst getvideo = async id => await movieDB(`movie/${id}/videos`);\n\nIndexPage.getInitialProps = async () => {\n  try {\n    const tv = await movieDB('tv/on_the_air');\n    const movie = await movieDB('movie/now_playing');\n    const movieAction = await movieDB('discover/movie', 'with_genres=28&sort_by=vote_count.desc');\n    const tvAnima = await movieDB('discover/tv', 'with_genres=16');\n    const {\n      results: feturedMovie\n    } = await movieDB('trending/movie/week');\n    const {\n      results: feturedTv\n    } = await movieDB('trending/tv/week');\n    console.log('fdfd', getvideo(randomNum(feturedMovie.length)));\n    return {\n      movieNowPlay: movie.results.slice(0, 12),\n      tvOnAir: tv.results.slice(0, 12),\n      movieAction: movieAction.results.slice(0, 10),\n      tvAnima: tvAnima.results.slice(0, 10),\n      feturedMovie: feturedMovie[randomNum(feturedMovie.length)],\n      feturedTv: feturedTv[randomNum(feturedTv.length)],\n      fetTV\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      movieNowPlay: null,\n      tvOnAir: null\n    };\n  }\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/index.js"],"names":["Layout","VideoHero","Contact","PopularSection","movieDB","SectionCarousel","randomNum","FeturedSection","IndexPage","movieNowPlay","tvOnAir","movieAction","tvAnima","feturedMovie","feturedTv","fetTV","console","log","getvideo","id","getInitialProps","tv","movie","results","length","slice","error"],"mappings":"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","sourcesContent":["import Layout from '../components/layout';\r\nimport VideoHero from '../components/ui/VideoHero';\r\nimport Contact from '../components/contact';\r\nimport PopularSection from '../components/ui/PopularSection';\r\nimport movieDB from '../components/utility/movieDB';\r\nimport SectionCarousel from '../components/ui/sectionCarousel/SectionCarousel';\r\nimport randomNum from '../components/utility/randomNum';\r\nimport FeturedSection from '../components/ui/FeturedSection/FeturedSection';\r\n\r\nconst IndexPage = ({\r\n  movieNowPlay,\r\n  tvOnAir,\r\n  movieAction,\r\n  tvAnima,\r\n  feturedMovie,\r\n  feturedTv,\r\n  fetTV\r\n}) => {\r\n  console.log(feturedMovie, feturedTv);\r\n  console.log(fetTV);\r\n  return (\r\n    <Layout>\r\n      <VideoHero />\r\n      <PopularSection\r\n        data={movieNowPlay}\r\n        typeFor='movie'\r\n        title={\r\n          <>\r\n            in theaters <br /> now to enjoy\r\n          </>\r\n        }\r\n        subtitle='Most watched movies'\r\n        toLink='/movie'\r\n      />\r\n      <SectionCarousel\r\n        data={movieAction}\r\n        typeFor='movie'\r\n        title='popular action movies'\r\n        toLink='/movie'\r\n      />\r\n      <FeturedSection data={feturedMovie} typeFor='movie' />\r\n      <PopularSection\r\n        data={tvOnAir}\r\n        typeFor='tv'\r\n        title={\r\n          <>\r\n            Popular TV <br />\r\n            Series Right Now\r\n          </>\r\n        }\r\n        subtitle='Most watched tv'\r\n        toLink='/tv'\r\n      />\r\n      <SectionCarousel\r\n        data={tvAnima}\r\n        typeFor='tv'\r\n        title='animation to Enjoy'\r\n        toLink='/tv'\r\n      />\r\n      <FeturedSection data={feturedTv} typeFor='tv' />\r\n      <Contact />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst getvideo = async id => await movieDB(`movie/${id}/videos`);\r\n\r\nIndexPage.getInitialProps = async () => {\r\n  try {\r\n    const tv = await movieDB('tv/on_the_air');\r\n    const movie = await movieDB('movie/now_playing');\r\n    const movieAction = await movieDB(\r\n      'discover/movie',\r\n      'with_genres=28&sort_by=vote_count.desc'\r\n    );\r\n    const tvAnima = await movieDB('discover/tv', 'with_genres=16');\r\n    const { results: feturedMovie } = await movieDB('trending/movie/week');\r\n    const { results: feturedTv } = await movieDB('trending/tv/week');\r\n\r\n    console.log('fdfd', getvideo(randomNum(feturedMovie.length)));\r\n    return {\r\n      movieNowPlay: movie.results.slice(0, 12),\r\n      tvOnAir: tv.results.slice(0, 12),\r\n      movieAction: movieAction.results.slice(0, 10),\r\n      tvAnima: tvAnima.results.slice(0, 10),\r\n      feturedMovie: feturedMovie[randomNum(feturedMovie.length)],\r\n      feturedTv: feturedTv[randomNum(feturedTv.length)],\r\n      fetTV\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      movieNowPlay: null,\r\n      tvOnAir: null\r\n    };\r\n  }\r\n};\r\n\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}