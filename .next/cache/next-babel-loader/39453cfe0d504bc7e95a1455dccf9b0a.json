{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default (function (arry) {\n  var arrData = arry.reduce(function (acc, obj) {\n    var key = obj.name;\n\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n\n    acc[key].push(obj);\n    return acc;\n  }, []);\n\n  var joinData = _Object$entries(arrData).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    var department = value.map(function (item) {\n      return item.department;\n    });\n    var item = arrData[key].map(function (item) {\n      return _objectSpread({}, item, {\n        department: department\n      });\n    });\n    return item;\n  }).sort(function (a, b) {\n    return b.length - a.length;\n  });\n\n  console.log(joinData);\n  return joinData;\n});","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/utility/groupCredits.js"],"names":["arry","arrData","reduce","acc","obj","key","name","push","joinData","map","value","department","item","sort","a","b","length","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,gBAAe,UAAAA,IAAI,EAAI;AACrB,MAAMC,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxC,QAAIC,GAAG,GAAGD,GAAG,CAACE,IAAd;;AACA,QAAI,CAACH,GAAG,CAACE,GAAD,CAAR,EAAe;AACbF,MAAAA,GAAG,CAACE,GAAD,CAAH,GAAW,EAAX;AACD;;AACDF,IAAAA,GAAG,CAACE,GAAD,CAAH,CAASE,IAAT,CAAcH,GAAd;AACA,WAAOD,GAAP;AACD,GAPe,EAOb,EAPa,CAAhB;;AASA,MAAMK,QAAQ,GAAG,gBAAeP,OAAf,EACdQ,GADc,CACV,gBAAkB;AAAA;AAAA,QAAhBJ,GAAgB;AAAA,QAAXK,KAAW;;AACrB,QAAIC,UAAU,GAAGD,KAAK,CAACD,GAAN,CAAU,UAAAG,IAAI;AAAA,aAAIA,IAAI,CAACD,UAAT;AAAA,KAAd,CAAjB;AACA,QAAIC,IAAI,GAAGX,OAAO,CAACI,GAAD,CAAP,CAAaI,GAAb,CAAiB,UAAAG,IAAI;AAAA,+BAAUA,IAAV;AAAgBD,QAAAA,UAAU,EAAVA;AAAhB;AAAA,KAArB,CAAX;AACA,WAAOC,IAAP;AACD,GALc,EAMdC,IANc,CAMT,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAAvB;AAAA,GANS,CAAjB;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACA,SAAOA,QAAP;AACD,CApBD","sourcesContent":["export default arry => {\r\n  const arrData = arry.reduce((acc, obj) => {\r\n    let key = obj.name;\r\n    if (!acc[key]) {\r\n      acc[key] = [];\r\n    }\r\n    acc[key].push(obj);\r\n    return acc;\r\n  }, []);\r\n\r\n  const joinData = Object.entries(arrData)\r\n    .map(([key, value]) => {\r\n      let department = value.map(item => item.department);\r\n      let item = arrData[key].map(item => ({ ...item, department }));\r\n      return item;\r\n    })\r\n    .sort((a, b) => b.length - a.length);\r\n\r\n  console.log(joinData);\r\n  return joinData;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}