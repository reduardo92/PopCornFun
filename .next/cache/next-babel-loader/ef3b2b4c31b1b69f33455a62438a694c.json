{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\tv\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport movieDB from '../../components/utility/movieDB';\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\n\nconst tv = ({\n  tv\n}) => __jsx(MediaSection, {\n  mediaFor: tv,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n});\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const queryLeng = Object.keys(query).length;\n\n  try {\n    const tv = await movieDB(`tv/${queryLeng === 0 ? 'popular' : query.query}`, `page=${query.page ? query.page : 1}`);\n    return {\n      props: {\n        tv: _objectSpread({\n          typeFor: 'tv',\n          title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' ')\n        }, tv)\n      }\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport default tv;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/tv/index.jsx"],"names":["React","movieDB","MediaSection","tv","getServerSideProps","query","queryLeng","Object","keys","length","page","props","typeFor","title","split","join","error","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;AAEA,MAAMC,EAAE,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAY,MAAC,YAAD;AAAc,EAAA,QAAQ,EAAEA,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvB;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACrD,QAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAArC;;AACA,MAAI;AACF,UAAMN,EAAE,GAAG,MAAMF,OAAO,CACrB,MAAKK,SAAS,KAAK,CAAd,GAAkB,SAAlB,GAA8BD,KAAK,CAACA,KAAM,EAD1B,EAErB,QAAOA,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACK,IAAnB,GAA0B,CAAE,EAFd,CAAxB;AAIA,WAAO;AACLC,MAAAA,KAAK,EAAE;AACLR,QAAAA,EAAE;AACAS,UAAAA,OAAO,EAAE,IADT;AAEAC,UAAAA,KAAK,EAAEP,SAAS,KAAK,CAAd,GAAkB,SAAlB,GAA8BD,KAAK,CAACA,KAAN,CAAYS,KAAZ,CAAkB,GAAlB,EAAuBC,IAAvB,CAA4B,GAA5B;AAFrC,WAGGZ,EAHH;AADG;AADF,KAAP;AASD,GAdD,CAcE,OAAOa,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAnBM;AAqBP,eAAeb,EAAf","sourcesContent":["import React from 'react';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\r\n\r\nconst tv = ({ tv }) => <MediaSection mediaFor={tv} />;\r\n\r\nexport const getServerSideProps = async ({ query }) => {\r\n  const queryLeng = Object.keys(query).length;\r\n  try {\r\n    const tv = await movieDB(\r\n      `tv/${queryLeng === 0 ? 'popular' : query.query}`,\r\n      `page=${query.page ? query.page : 1}`\r\n    );\r\n    return {\r\n      props: {\r\n        tv: {\r\n          typeFor: 'tv',\r\n          title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' '),\r\n          ...tv,\r\n        },\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default tv;\r\n"]},"metadata":{},"sourceType":"module"}