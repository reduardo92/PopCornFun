{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\context\\\\auth\\\\AuthState.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react';\nimport useAuthReducer from './useAuthReducer';\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport configHeader from '../../utility/configHeader';\nimport { setAuthToken } from '../../utility/setAuthToken';\nimport Router from 'next/router';\nconst authInitialState = {\n  // token: localStorage.getItem('token'),\n  token: null,\n  isAuthentucated: null,\n  loading: true,\n  user: null,\n  error: null,\n  msg: null\n};\n\nconst AuthState = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(useAuthReducer, authInitialState); // Load User\n\n  const loadUser = async () => {\n    //   check if token is in localStrorage to load user\n    // if (localStorage.token) {\n    //   setAuthToken(localStorage.token);\n    // }\n    if (state.loading && !state.isAuthentucated) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Sorry login failed, Please try again'\n      });\n    } else {\n      try {\n        const res = await axios.get('/api/auth');\n        dispatch({\n          type: USER_LOADED,\n          payload: res.data\n        });\n      } catch (error) {\n        dispatch({\n          type: AUTH_ERROR,\n          payload: error.response.data.msg\n        });\n      }\n    }\n  };\n\n  const registerUser = async formData => {\n    try {\n      const {\n        data\n      } = await axios.post(`/api/user`, formData, configHeader);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: data.token\n      }); // Load User\n\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const loginUser = async formData => {\n    try {\n      const {\n        data\n      } = await axios.post(`/api/user`, formData, configHeader);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: data.msg\n      }); // Load User\n      // loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data.msg\n      });\n    }\n  }; // Logout\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; // Clear Erros\n\n\n  const clearErros = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  console.log(state.error);\n  console.log(state);\n  return __jsx(AuthContext.Provider, {\n    value: _objectSpread({}, state, {\n      loadUser,\n      registerUser,\n      loginUser,\n      logout,\n      clearErros\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/context/auth/AuthState.js"],"names":["React","useReducer","useAuthReducer","AuthContext","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","configHeader","setAuthToken","Router","authInitialState","token","isAuthentucated","loading","user","error","msg","AuthState","children","state","dispatch","loadUser","type","payload","res","get","data","response","registerUser","formData","post","loginUser","logout","clearErros","console","log"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport useAuthReducer from './useAuthReducer';\r\nimport AuthContext from './AuthContext';\r\nimport axios from 'axios';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n} from '../types';\r\n\r\nimport configHeader from '../../utility/configHeader';\r\nimport { setAuthToken } from '../../utility/setAuthToken';\r\nimport Router from 'next/router';\r\n\r\nconst authInitialState = {\r\n  // token: localStorage.getItem('token'),\r\n  token: null,\r\n  isAuthentucated: null,\r\n  loading: true,\r\n  user: null,\r\n  error: null,\r\n  msg: null,\r\n};\r\n\r\nconst AuthState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(useAuthReducer, authInitialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    //   check if token is in localStrorage to load user\r\n    // if (localStorage.token) {\r\n    //   setAuthToken(localStorage.token);\r\n    // }\r\n\r\n    if (state.loading && !state.isAuthentucated) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: 'Sorry login failed, Please try again',\r\n      });\r\n    } else {\r\n      try {\r\n        const res = await axios.get('/api/auth');\r\n        dispatch({ type: USER_LOADED, payload: res.data });\r\n      } catch (error) {\r\n        dispatch({ type: AUTH_ERROR, payload: error.response.data.msg });\r\n      }\r\n    }\r\n  };\r\n\r\n  const registerUser = async (formData) => {\r\n    try {\r\n      const { data } = await axios.post(`/api/user`, formData, configHeader);\r\n      dispatch({ type: REGISTER_SUCCESS, payload: data.token });\r\n      // Load User\r\n      loadUser();\r\n    } catch (error) {\r\n      dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\r\n    }\r\n  };\r\n\r\n  // Login User\r\n  const loginUser = async (formData) => {\r\n    try {\r\n      const { data } = await axios.post(`/api/user`, formData, configHeader);\r\n      dispatch({ type: LOGIN_SUCCESS, payload: data.msg });\r\n      // Load User\r\n      // loadUser();\r\n    } catch (error) {\r\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data.msg });\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n  // Clear Erros\r\n  const clearErros = () => dispatch({ type: CLEAR_ERRORS });\r\n  console.log(state.error);\r\n\r\n  console.log(state);\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadUser,\r\n        registerUser,\r\n        loginUser,\r\n        logout,\r\n        clearErros,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}