{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\context\\\\auth\\\\AuthState.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport useAuthReducer from './useAuthReducer';\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { setAuthToken } from '../../utility/setAuthToken/';\nimport configHeader from '../../utility/configHeader';\nvar authInitialState = {\n  // token: localStorage.getItem('token'),\n  token: null,\n  isAuthentucated: null,\n  loading: true,\n  user: null,\n  error: null\n};\n\nvar AuthState = function AuthState(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(useAuthReducer, authInitialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Load User\n\n\n  var loadUser = function loadUser() {\n    var res;\n    return _regeneratorRuntime.async(function loadUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //   check if token is in localStrorage to load user\n            if (localStorage.token) {\n              setAuthToken(localStorage.token);\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get('/api/auth'));\n\n          case 4:\n            res = _context.sent;\n            dispatch({\n              type: USER_LOADED,\n              payload: res.data\n            });\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch({\n              type: AUTH_ERROR\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var registerUser = function registerUser(formData) {\n    var _ref2, data;\n\n    return _regeneratorRuntime.async(function registerUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"/api/user\", formData, configHeader));\n\n          case 3:\n            _ref2 = _context2.sent;\n            data = _ref2.data;\n            dispatch({\n              type: REGISTER_SUCCESS,\n              payload: data.token\n            }); // Load User\n\n            loadUser();\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: REGISTER_FAIL,\n              payload: _context2.t0.response.data.msg\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }; // Login User\n\n\n  var loginUser = function loginUser(formData) {\n    var _ref3, data;\n\n    return _regeneratorRuntime.async(function loginUser$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"/api/user\", formData, configHeader));\n\n          case 3:\n            _ref3 = _context3.sent;\n            data = _ref3.data;\n            dispatch({\n              type: LOGIN_SUCCESS,\n              payload: data.token\n            }); // Load User\n\n            loadUser();\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            dispatch({\n              type: LOGIN_FAIL,\n              payload: _context3.t0.response.data.msg\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }; // Logout\n\n\n  var logout = function logout() {\n    dispatch({\n      type: LOGOUT\n    });\n  }; // Clear Erros\n\n\n  var clearErros = function clearErros() {\n    return dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  console.log(state.error);\n  console.log(state);\n  return __jsx(AuthContext.Provider, {\n    value: _objectSpread({}, state, {\n      loadUser: loadUser,\n      registerUser: registerUser,\n      loginUser: loginUser,\n      logout: logout,\n      clearErros: clearErros\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/context/auth/AuthState.js"],"names":["React","useReducer","useAuthReducer","AuthContext","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","setAuthToken","configHeader","authInitialState","token","isAuthentucated","loading","user","error","AuthState","children","state","dispatch","loadUser","localStorage","get","res","type","payload","data","registerUser","formData","post","response","msg","loginUser","logout","clearErros","console","log"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport useAuthReducer from './useAuthReducer';\r\nimport AuthContext from './AuthContext';\r\nimport axios from 'axios';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n} from '../types';\r\nimport { setAuthToken } from '../../utility/setAuthToken/';\r\nimport configHeader from '../../utility/configHeader';\r\n\r\nconst authInitialState = {\r\n  // token: localStorage.getItem('token'),\r\n  token: null,\r\n  isAuthentucated: null,\r\n  loading: true,\r\n  user: null,\r\n  error: null,\r\n};\r\n\r\nconst AuthState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(useAuthReducer, authInitialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    //   check if token is in localStrorage to load user\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      const res = await axios.get('/api/auth');\r\n      dispatch({ type: USER_LOADED, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  };\r\n\r\n  const registerUser = async (formData) => {\r\n    try {\r\n      const { data } = await axios.post(`/api/user`, formData, configHeader);\r\n      dispatch({ type: REGISTER_SUCCESS, payload: data.token });\r\n      // Load User\r\n      loadUser();\r\n    } catch (error) {\r\n      dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\r\n    }\r\n  };\r\n\r\n  // Login User\r\n  const loginUser = async (formData) => {\r\n    try {\r\n      const { data } = await axios.post(`/api/user`, formData, configHeader);\r\n      dispatch({ type: LOGIN_SUCCESS, payload: data.token });\r\n      // Load User\r\n      loadUser();\r\n    } catch (error) {\r\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data.msg });\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n  // Clear Erros\r\n  const clearErros = () => dispatch({ type: CLEAR_ERRORS });\r\n  console.log(state.error);\r\n\r\n  console.log(state);\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadUser,\r\n        registerUser,\r\n        loginUser,\r\n        logout,\r\n        clearErros,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}