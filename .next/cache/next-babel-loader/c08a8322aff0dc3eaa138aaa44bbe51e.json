{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nvar Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"zlmctg-0\"\n})([\"\"]);\n\nvar MovieProfile = function MovieProfile(_ref) {\n  var movie = _ref.movie,\n      typeFor = _ref.typeFor;\n  console.log('profile', movie);\n  return __jsx(Styled, {\n    className: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Moviess fsdafa asfasfa\");\n};\n\nMovieProfile.getInitialProps = function _callee(ctx) {\n  var _ref2, movie;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(ctx);\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(movieDB(\"movie/\".concat(ctx.query.id)));\n\n        case 4:\n          _ref2 = _context.sent;\n          movie = _ref2.results;\n          return _context.abrupt(\"return\", {\n            movie: movie\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]]);\n};\n\nexport default MovieProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/[id].jsx"],"names":["styled","movieDB","Styled","section","MovieProfile","movie","typeFor","console","log","getInitialProps","ctx","query","id","results"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,IAAMC,MAAM,GAAGF,MAAM,CAACG,OAAV;AAAA;AAAA;AAAA,QAAZ;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAwB;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACA,SAAO,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD,CAHD;;AAKAD,YAAY,CAACK,eAAb,GAA+B,iBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC7BH,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAD6B;AAAA;AAAA,2CAIMT,OAAO,iBAAUS,GAAG,CAACC,KAAJ,CAAUC,EAApB,EAJb;;AAAA;AAAA;AAIVP,UAAAA,KAJU,SAInBQ,OAJmB;AAAA,2CAMpB;AACLR,YAAAA,KAAK,EAALA;AADK,WANoB;;AAAA;AAAA;AAAA;AAU3BE,UAAAA,OAAO,CAACC,GAAR;;AAV2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;;AAcA,eAAeJ,YAAf","sourcesContent":["import styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\n\r\nconst Styled = styled.section``;\r\n\r\nconst MovieProfile = ({ movie, typeFor }) => {\r\n  console.log('profile', movie);\r\n  return <Styled className='profile'>Moviess fsdafa asfasfa</Styled>;\r\n};\r\n\r\nMovieProfile.getInitialProps = async ctx => {\r\n  console.log(ctx);\r\n\r\n  try {\r\n    const { results: movie } = await movieDB(`movie/${ctx.query.id}`);\r\n\r\n    return {\r\n      movie\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"]},"metadata":{},"sourceType":"module"}