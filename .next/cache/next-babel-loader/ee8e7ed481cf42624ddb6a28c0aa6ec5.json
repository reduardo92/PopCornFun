{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\tv\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect } from 'react';\nimport Layout from '../../components/layout';\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport CardTwo from '../../components/ui/Cards/CardTwo';\nimport MovieContext from '../../components/context/MovieContext';\nimport Pagination from '../../components/ui/Pagination/Pagination';\nconst Styled = styled.section.withConfig({\n  displayName: \"tv__Styled\",\n  componentId: \"sc-1r3axh9-0\"\n})([\"background:var(--bg-dark-gradient);padding:150px 1em 0 1em;.wrapper{max-width:1500px;margin:0 auto;.title{font-size:1.5rem;margin-bottom:1em;}}.content--container{display:grid;grid-gap:2em;}@media screen and (min-width:768px){.content--container{grid-row-gap:3.5em;grid-template-columns:repeat(2,1fr);}}\"]);\n\nconst tv = ({\n  tv\n}) => {\n  const {\n    paginate\n  } = useContext(MovieContext);\n  useEffect(() => {\n    paginate(tv.page);\n  }, [tv.page]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"movie--section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, tv.title, \" TV Show\"), __jsx(Pagination, {\n    numberOfArticles: tv.total_pages,\n    typeFor: `/tv?query=${tv.title.split(' ').join('_')}&page=`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"content--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, tv.results.map(item => __jsx(CardTwo, {\n    key: item.id,\n    data: item,\n    typeFor: tv.typeFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), __jsx(Pagination, {\n    numberOfArticles: tv.total_pages,\n    typeFor: `/tv?query=${tv.title.split(' ').join('_')}&page=`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n};\n\ntv.getInitialProps = async ({\n  query\n}) => {\n  const queryLeng = Object.keys(query).length;\n\n  try {\n    const tv = await movieDB(`tv/${queryLeng === 0 ? 'popular' : query.query}`);\n    return {\n      tv: _objectSpread({\n        typeFor: 'tv',\n        title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' ')\n      }, tv)\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default tv;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/tv/index.jsx"],"names":["React","useContext","useEffect","Layout","styled","movieDB","CardTwo","MovieContext","Pagination","Styled","section","tv","paginate","page","title","total_pages","split","join","results","map","item","id","typeFor","getInitialProps","query","queryLeng","Object","keys","length","error","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport Layout from '../../components/layout';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport CardTwo from '../../components/ui/Cards/CardTwo';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport Pagination from '../../components/ui/Pagination/Pagination';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  padding: 150px 1em 0 1em;\r\n\r\n  .wrapper {\r\n    max-width: 1500px;\r\n    margin: 0 auto;\r\n\r\n    .title {\r\n      font-size: 1.5rem;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n\r\n  .content--container {\r\n    display: grid;\r\n    grid-gap: 2em;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .content--container {\r\n      grid-row-gap: 3.5em;\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nconst tv = ({ tv }) => {\r\n  const { paginate } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    paginate(tv.page);\r\n  }, [tv.page]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='movie--section'>\r\n        <div className='wrapper'>\r\n          <h2 className='title'>{tv.title} TV Show</h2>\r\n          <Pagination\r\n            numberOfArticles={tv.total_pages}\r\n            typeFor={`/tv?query=${tv.title.split(' ').join('_')}&page=`}\r\n          />\r\n          <div className='content--container'>\r\n            {tv.results.map(item => (\r\n              <CardTwo key={item.id} data={item} typeFor={tv.typeFor} />\r\n            ))}\r\n          </div>\r\n          <Pagination\r\n            numberOfArticles={tv.total_pages}\r\n            typeFor={`/tv?query=${tv.title.split(' ').join('_')}&page=`}\r\n          />\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\ntv.getInitialProps = async ({ query }) => {\r\n  const queryLeng = Object.keys(query).length;\r\n  try {\r\n    const tv = await movieDB(`tv/${queryLeng === 0 ? 'popular' : query.query}`);\r\n    return {\r\n      tv: {\r\n        typeFor: 'tv',\r\n        title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' '),\r\n        ...tv\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default tv;\r\n"]},"metadata":{},"sourceType":"module"}