{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout';\nimport axios from 'axios';\nimport { BASE_URL, API_KEY } from '../components/context/types';\nimport VideoHero from '../components/ui/VideoHero';\nimport Contact from '../components/contact';\nimport PopularSection from '../components/ui/PopularSection';\nimport movieDB from '../components/utility/movieDB';\n\nconst IndexPage = ({\n  movieNowPlay,\n  tvOnAir,\n  action,\n  moviedd\n}) => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(VideoHero, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: movieNowPlay,\n    typeFor: \"movie\",\n    title: __jsx(React.Fragment, null, \"in theaters \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), \" now to enjoy\"),\n    subtitle: \"Most watched movies\",\n    toLink: \"/movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: tvOnAir,\n    typeFor: \"tv\",\n    title: __jsx(React.Fragment, null, \"Popular TV \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), \"Series Right Now\"),\n    subtitle: \"Most watched tv\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(Contact, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nIndexPage.getInitialProps = async () => {\n  try {\n    const tv = await movieDB('tv/on_the_air');\n    const movie = await movieDB('movie/now_playing');\n    const action = await movieDB('movie/discover/movie', '&with_genres=28&sort_by=vote_count.desc'); // const action = await axios.get(\n    //   `${BASE_URL}discover/movie?${API_KEY}&with_genres=28&sort_by=vote_count.desc`\n    // );\n\n    console.log(action.results);\n    return {\n      action: action.results,\n      movieNowPlay: movie.results,\n      tvOnAir: tv.results\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      movieNowPlay: null,\n      tvOnAir: null\n    };\n  }\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/index.js"],"names":["Layout","axios","BASE_URL","API_KEY","VideoHero","Contact","PopularSection","movieDB","IndexPage","movieNowPlay","tvOnAir","action","moviedd","getInitialProps","tv","movie","console","log","results","error"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,6BAAlC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA,MAAzB;AAAiCC,EAAAA;AAAjC,CAAD,KAAgD;AAChE,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,cAAD;AACE,IAAA,IAAI,EAAEH,YADR;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,KAAK,EACH,4CACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd,kBAJJ;AAQE,IAAA,QAAQ,EAAC,qBARX;AASE,IAAA,MAAM,EAAC,QATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAaE,MAAC,cAAD;AACE,IAAA,IAAI,EAAEC,OADR;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,KAAK,EACH,2CACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,qBAJJ;AASE,IAAA,QAAQ,EAAC,iBATX;AAUE,IAAA,MAAM,EAAC,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAyBE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF;AA6BD,CA9BD;;AAgCAF,SAAS,CAACK,eAAV,GAA4B,YAAY;AACtC,MAAI;AACF,UAAMC,EAAE,GAAG,MAAMP,OAAO,CAAC,eAAD,CAAxB;AACA,UAAMQ,KAAK,GAAG,MAAMR,OAAO,CAAC,mBAAD,CAA3B;AACA,UAAMI,MAAM,GAAG,MAAMJ,OAAO,CAC1B,sBAD0B,EAE1B,yCAF0B,CAA5B,CAHE,CAQF;AACA;AACA;;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,OAAnB;AACA,WAAO;AACLP,MAAAA,MAAM,EAAEA,MAAM,CAACO,OADV;AAELT,MAAAA,YAAY,EAAEM,KAAK,CAACG,OAFf;AAGLR,MAAAA,OAAO,EAAEI,EAAE,CAACI;AAHP,KAAP;AAKD,GAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,WAAO;AACLV,MAAAA,YAAY,EAAE,IADT;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;AACF,CA1BD;;AA4BA,eAAeF,SAAf","sourcesContent":["import Layout from '../components/layout';\r\nimport axios from 'axios';\r\nimport { BASE_URL, API_KEY } from '../components/context/types';\r\nimport VideoHero from '../components/ui/VideoHero';\r\nimport Contact from '../components/contact';\r\nimport PopularSection from '../components/ui/PopularSection';\r\nimport movieDB from '../components/utility/movieDB';\r\n\r\nconst IndexPage = ({ movieNowPlay, tvOnAir, action, moviedd }) => {\r\n  return (\r\n    <Layout>\r\n      <VideoHero />\r\n      <PopularSection\r\n        data={movieNowPlay}\r\n        typeFor='movie'\r\n        title={\r\n          <>\r\n            in theaters <br /> now to enjoy\r\n          </>\r\n        }\r\n        subtitle='Most watched movies'\r\n        toLink='/movie'\r\n      />\r\n      <PopularSection\r\n        data={tvOnAir}\r\n        typeFor='tv'\r\n        title={\r\n          <>\r\n            Popular TV <br />\r\n            Series Right Now\r\n          </>\r\n        }\r\n        subtitle='Most watched tv'\r\n        toLink='/tv'\r\n      />\r\n      <Contact />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nIndexPage.getInitialProps = async () => {\r\n  try {\r\n    const tv = await movieDB('tv/on_the_air');\r\n    const movie = await movieDB('movie/now_playing');\r\n    const action = await movieDB(\r\n      'movie/discover/movie',\r\n      '&with_genres=28&sort_by=vote_count.desc'\r\n    );\r\n\r\n    // const action = await axios.get(\r\n    //   `${BASE_URL}discover/movie?${API_KEY}&with_genres=28&sort_by=vote_count.desc`\r\n    // );\r\n\r\n    console.log(action.results);\r\n    return {\r\n      action: action.results,\r\n      movieNowPlay: movie.results,\r\n      tvOnAir: tv.results\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      movieNowPlay: null,\r\n      tvOnAir: null\r\n    };\r\n  }\r\n};\r\n\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}