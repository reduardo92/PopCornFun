{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\CirclePercentage.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nvar Styled = styled.div.withConfig({\n  displayName: \"CirclePercentage__Styled\",\n  componentId: \"sc-1ov29ur-0\"\n})([\"margin:50px auto;width:150px;height:150px;background:#e6e2e7;border-radius:50%;position:relative;.mask,.fill{width:150px;height:150px;position:absolute;border-radius:50%;}.mask{clip:rect(0px,150px,150px,75px);}.fill{clip:rect(0px,75px,150px,0px);background-color:red;}.full,.fill{animation:fill ease-in-out 3s;transform:rotate(180deg);}@keyframes fill{0%{transform:rotate(0deg);}100%{transform:rotate(180deg);}}.inside-circle{width:130px;height:130px;border-radius:50%;background:var(--second-clr);font-weight:bold;font-size:1.5rem;text-align:center;margin-top:10px;margin-left:10px;position:absolute;display:flex;align-items:center;justify-content:center;z-index:100;font-weight:700;}\"]);\n\nvar CirclePercentage = function CirclePercentage() {\n  return __jsx(Styled, {\n    className: \"circle-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"mask full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"fill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"mask half\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"fill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"inside-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"70%\")));\n};\n\nexport default CirclePercentage;\n\nvar CircularProgressBar = function CircularProgressBar(_ref) {\n  var _ref$sqSize = _ref.sqSize,\n      sqSize = _ref$sqSize === void 0 ? 200 : _ref$sqSize,\n      _ref$percentage = _ref.percentage,\n      percentage = _ref$percentage === void 0 ? 25 : _ref$percentage,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 10 : _ref$strokeWidth;\n\n  var _useState = useState(),\n      state = _useState[0],\n      setState = _useState[1]; // Size of the enclosing square\n  //   const sqSize = this.props.sqSize;\n  // SVG centers the stroke width on the radius, subtract out so circle fits in square\n\n\n  var radius = (sqSize - strokeWidth) / 2; // Enclose cicle in a circumscribing square\n\n  var viewBox = \"0 0 \".concat(sqSize, \" \").concat(sqSize); // Arc length at 100% coverage is the circle circumference\n\n  var dashArray = radius * Math.PI * 2; // Scale 100% coverage overlay with the actual percent\n\n  var dashOffset = dashArray - dashArray * percentage / 100;\n  return __jsx(\"svg\", {\n    width: sqSize,\n    height: sqSize,\n    viewBox: viewBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"circle\", {\n    className: \"circle-background\",\n    cx: sqSize / 2,\n    cy: sqSize / 2,\n    r: radius,\n    strokeWidth: \"\".concat(strokeWidth, \"px\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), __jsx(\"circle\", {\n    className: \"circle-progress\",\n    cx: sqSize / 2,\n    cy: sqSize / 2,\n    r: radius,\n    strokeWidth: \"\".concat(strokeWidth, \"px\") // Start progress marker at 12 O'Clock\n    ,\n    transform: \"rotate(-90 \".concat(sqSize / 2, \" \").concat(sqSize / 2, \")\"),\n    style: {\n      strokeDasharray: dashArray,\n      strokeDashoffset: dashOffset\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), __jsx(\"text\", {\n    className: \"circle-text\",\n    x: \"50%\",\n    y: \"50%\",\n    dy: \".3em\",\n    textAnchor: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"\".concat(percentage, \"%\")));\n};","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/CirclePercentage.jsx"],"names":["React","useState","styled","Styled","div","CirclePercentage","CircularProgressBar","sqSize","percentage","strokeWidth","state","setState","radius","viewBox","dashArray","Math","PI","dashOffset","strokeDasharray","strokeDashoffset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Styled = styled.div`\r\n  margin: 50px auto;\r\n  width: 150px;\r\n  height: 150px;\r\n  background: #e6e2e7;\r\n  border-radius: 50%;\r\n  position: relative;\r\n\r\n  .mask,\r\n  .fill {\r\n    width: 150px;\r\n    height: 150px;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .mask {\r\n    clip: rect(0px, 150px, 150px, 75px);\r\n  }\r\n\r\n  .fill {\r\n    clip: rect(0px, 75px, 150px, 0px);\r\n    background-color: red;\r\n  }\r\n\r\n  .full,\r\n  .fill {\r\n    animation: fill ease-in-out 3s;\r\n    transform: rotate(180deg);\r\n  }\r\n\r\n  @keyframes fill {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n\r\n  .inside-circle {\r\n    width: 130px;\r\n    height: 130px;\r\n    border-radius: 50%;\r\n    background: var(--second-clr);\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n    margin-left: 10px;\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 100;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst CirclePercentage = () => {\r\n  return (\r\n    <Styled className='circle-wrap'>\r\n      <div className='circle'>\r\n        <div className='mask full'>\r\n          <div className='fill'></div>\r\n        </div>\r\n        <div className='mask half'>\r\n          <div className='fill'></div>\r\n        </div>\r\n        <div className='inside-circle'>70%</div>\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default CirclePercentage;\r\n\r\nconst CircularProgressBar = ({\r\n  sqSize = 200,\r\n  percentage = 25,\r\n  strokeWidth = 10\r\n}) => {\r\n  const [state, setState] = useState();\r\n\r\n  // Size of the enclosing square\r\n  //   const sqSize = this.props.sqSize;\r\n  // SVG centers the stroke width on the radius, subtract out so circle fits in square\r\n  const radius = (sqSize - strokeWidth) / 2;\r\n  // Enclose cicle in a circumscribing square\r\n  const viewBox = `0 0 ${sqSize} ${sqSize}`;\r\n  // Arc length at 100% coverage is the circle circumference\r\n  const dashArray = radius * Math.PI * 2;\r\n  // Scale 100% coverage overlay with the actual percent\r\n  const dashOffset = dashArray - (dashArray * percentage) / 100;\r\n\r\n  return (\r\n    <svg width={sqSize} height={sqSize} viewBox={viewBox}>\r\n      <circle\r\n        className='circle-background'\r\n        cx={sqSize / 2}\r\n        cy={sqSize / 2}\r\n        r={radius}\r\n        strokeWidth={`${strokeWidth}px`}\r\n      />\r\n      <circle\r\n        className='circle-progress'\r\n        cx={sqSize / 2}\r\n        cy={sqSize / 2}\r\n        r={radius}\r\n        strokeWidth={`${strokeWidth}px`}\r\n        // Start progress marker at 12 O'Clock\r\n        transform={`rotate(-90 ${sqSize / 2} ${sqSize / 2})`}\r\n        style={{\r\n          strokeDasharray: dashArray,\r\n          strokeDashoffset: dashOffset\r\n        }}\r\n      />\r\n      <text\r\n        className='circle-text'\r\n        x='50%'\r\n        y='50%'\r\n        dy='.3em'\r\n        textAnchor='middle'\r\n      >\r\n        {`${percentage}%`}\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}