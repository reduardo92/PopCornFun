{"ast":null,"code":"// import nextConnect from 'next-connect';\n// import middleware from '../../server/middleware/database';\nimport connectDB from '../../server/config/db';\nimport mongoose from 'mongoose';\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  }\n});\nexport default (async (req, res) => {\n  await connectDB();\n\n  try {\n    const User = connection.model('User', UserSchema);\n    const {\n      query: {\n        name\n      },\n      method\n    } = req;\n\n    switch (method) {\n      case 'POST':\n        User.create({\n          name\n        }, (error, user) => {\n          if (error) {\n            connection.close();\n            res.status(500).json({\n              error\n            });\n          } else {\n            res.status(200).json(user);\n            connection.close();\n          }\n        });\n        break;\n\n      default:\n        res.setHeader('Allow', ['POST']);\n        res.status(405).end(`Method ${method} Not Allowed`);\n    }\n  } catch (e) {\n    connection.close();\n    res.status(500).json({\n      error: e.message || 'something went wrong'\n    });\n  }\n}); // const user = nextConnect();\n// user.use(middleware);\n// console.log(user);\n// user.get(async (req, res) => {\n//   let doc = await req.db.collection('theaters').findOne();\n//   console.log(doc);\n//   res.json(doc);\n// });\n// export default user;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/api/user.js"],"names":["connectDB","mongoose","UserSchema","Schema","name","type","String","required","req","res","User","connection","model","query","method","create","error","user","close","status","json","setHeader","end","e","message"],"mappings":"AAAA;AACA;AACA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,UAAU,GAAG,IAAID,QAAQ,CAACE,MAAb,CAAoB;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAD+B,CAApB,CAAnB;AAOA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMT,SAAS,EAAf;;AAEA,MAAI;AACF,UAAMU,IAAI,GAAGC,UAAU,CAACC,KAAX,CAAiB,MAAjB,EAAyBV,UAAzB,CAAb;AACA,UAAM;AACJW,MAAAA,KAAK,EAAE;AAAET,QAAAA;AAAF,OADH;AAEJU,MAAAA;AAFI,QAGFN,GAHJ;;AAIA,YAAQM,MAAR;AACE,WAAK,MAAL;AACEJ,QAAAA,IAAI,CAACK,MAAL,CAAY;AAAEX,UAAAA;AAAF,SAAZ,EAAsB,CAACY,KAAD,EAAQC,IAAR,KAAiB;AACrC,cAAID,KAAJ,EAAW;AACTL,YAAAA,UAAU,CAACO,KAAX;AACAT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,cAAAA;AAAF,aAArB;AACD,WAHD,MAGO;AACLP,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,IAArB;AACAN,YAAAA,UAAU,CAACO,KAAX;AACD;AACF,SARD;AASA;;AACF;AACET,QAAAA,GAAG,CAACY,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACAZ,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBG,GAAhB,CAAqB,UAASR,MAAO,cAArC;AAdJ;AAgBD,GAtBD,CAsBE,OAAOS,CAAP,EAAU;AACVZ,IAAAA,UAAU,CAACO,KAAX;AACAT,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,MAAAA,KAAK,EAAEO,CAAC,CAACC,OAAF,IAAa;AAAtB,KAArB;AACD;AACF,CA7BD,E,CA+BA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import nextConnect from 'next-connect';\r\n// import middleware from '../../server/middleware/database';\r\nimport connectDB from '../../server/config/db';\r\nimport mongoose from 'mongoose';\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  }\r\n});\r\n\r\nexport default async (req, res) => {\r\n  await connectDB();\r\n\r\n  try {\r\n    const User = connection.model('User', UserSchema);\r\n    const {\r\n      query: { name },\r\n      method\r\n    } = req;\r\n    switch (method) {\r\n      case 'POST':\r\n        User.create({ name }, (error, user) => {\r\n          if (error) {\r\n            connection.close();\r\n            res.status(500).json({ error });\r\n          } else {\r\n            res.status(200).json(user);\r\n            connection.close();\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        res.setHeader('Allow', ['POST']);\r\n        res.status(405).end(`Method ${method} Not Allowed`);\r\n    }\r\n  } catch (e) {\r\n    connection.close();\r\n    res.status(500).json({ error: e.message || 'something went wrong' });\r\n  }\r\n};\r\n\r\n// const user = nextConnect();\r\n\r\n// user.use(middleware);\r\n\r\n// console.log(user);\r\n\r\n// user.get(async (req, res) => {\r\n//   let doc = await req.db.collection('theaters').findOne();\r\n//   console.log(doc);\r\n//   res.json(doc);\r\n// });\r\n\r\n// export default user;\r\n"]},"metadata":{},"sourceType":"module"}