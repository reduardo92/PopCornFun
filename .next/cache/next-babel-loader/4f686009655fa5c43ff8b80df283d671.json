{"ast":null,"code":"const createPagination = params => {\n  const {\n    numberOfArticles,\n    articlesPerPage,\n    currentPage,\n    numberOfButtons\n  } = params;\n  const numberOfPages = Math.ceil(numberOfArticles / articlesPerPage);\n  if (currentPage > numberOfPages || currentPage < 1) return {\n    pagination: [],\n    currentPage\n  };\n  const buttons = Array(numberOfPages).fill(1).map((e, i) => e + i);\n  const sideButtons = numberOfButtons % 2 === 0 ? numberOfButtons / 2 : (numberOfButtons - 1) / 2;\n\n  const calculLeft = (rest = 0) => {\n    return {\n      array: buttons.slice(0, currentPage - 1).reverse().slice(0, sideButtons + rest).reverse(),\n      rest: function () {\n        return sideButtons - this.array.length;\n      }\n    };\n  };\n\n  const calculRight = (rest = 0) => {\n    return {\n      array: buttons.slice(currentPage).slice(0, sideButtons + rest),\n      rest: function () {\n        return sideButtons - this.array.length;\n      }\n    };\n  };\n\n  const leftButtons = calculLeft(calculRight().rest()).array;\n  const rightButtons = calculRight(calculLeft().rest()).array;\n  return {\n    pagination: [...leftButtons, currentPage, ...rightButtons],\n    currentPage\n  };\n};\n\nexport default createPagination;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/Pagination/createPagination.js"],"names":["createPagination","params","numberOfArticles","articlesPerPage","currentPage","numberOfButtons","numberOfPages","Math","ceil","pagination","buttons","Array","fill","map","e","i","sideButtons","calculLeft","rest","array","slice","reverse","length","calculRight","leftButtons","rightButtons"],"mappings":"AAAA,MAAMA,gBAAgB,GAAGC,MAAM,IAAI;AACjC,QAAM;AACJC,IAAAA,gBADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA;AAJI,MAKFJ,MALJ;AAOA,QAAMK,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUN,gBAAgB,GAAGC,eAA7B,CAAtB;AAEA,MAAIC,WAAW,GAAGE,aAAd,IAA+BF,WAAW,GAAG,CAAjD,EACE,OAAO;AACLK,IAAAA,UAAU,EAAE,EADP;AAELL,IAAAA;AAFK,GAAP;AAKF,QAAMM,OAAO,GAAGC,KAAK,CAACL,aAAD,CAAL,CACbM,IADa,CACR,CADQ,EAEbC,GAFa,CAET,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAFL,CAAhB;AAIA,QAAMC,WAAW,GACfX,eAAe,GAAG,CAAlB,KAAwB,CAAxB,GAA4BA,eAAe,GAAG,CAA9C,GAAkD,CAACA,eAAe,GAAG,CAAnB,IAAwB,CAD5E;;AAGA,QAAMY,UAAU,GAAG,CAACC,IAAI,GAAG,CAAR,KAAc;AAC/B,WAAO;AACLC,MAAAA,KAAK,EAAET,OAAO,CACXU,KADI,CACE,CADF,EACKhB,WAAW,GAAG,CADnB,EAEJiB,OAFI,GAGJD,KAHI,CAGE,CAHF,EAGKJ,WAAW,GAAGE,IAHnB,EAIJG,OAJI,EADF;AAMLH,MAAAA,IAAI,EAAE,YAAW;AACf,eAAOF,WAAW,GAAG,KAAKG,KAAL,CAAWG,MAAhC;AACD;AARI,KAAP;AAUD,GAXD;;AAaA,QAAMC,WAAW,GAAG,CAACL,IAAI,GAAG,CAAR,KAAc;AAChC,WAAO;AACLC,MAAAA,KAAK,EAAET,OAAO,CAACU,KAAR,CAAchB,WAAd,EAA2BgB,KAA3B,CAAiC,CAAjC,EAAoCJ,WAAW,GAAGE,IAAlD,CADF;AAELA,MAAAA,IAAI,EAAE,YAAW;AACf,eAAOF,WAAW,GAAG,KAAKG,KAAL,CAAWG,MAAhC;AACD;AAJI,KAAP;AAMD,GAPD;;AASA,QAAME,WAAW,GAAGP,UAAU,CAACM,WAAW,GAAGL,IAAd,EAAD,CAAV,CAAiCC,KAArD;AACA,QAAMM,YAAY,GAAGF,WAAW,CAACN,UAAU,GAAGC,IAAb,EAAD,CAAX,CAAiCC,KAAtD;AAEA,SAAO;AACLV,IAAAA,UAAU,EAAE,CAAC,GAAGe,WAAJ,EAAiBpB,WAAjB,EAA8B,GAAGqB,YAAjC,CADP;AAELrB,IAAAA;AAFK,GAAP;AAID,CApDD;;AAsDA,eAAeJ,gBAAf","sourcesContent":["const createPagination = params => {\r\n  const {\r\n    numberOfArticles,\r\n    articlesPerPage,\r\n    currentPage,\r\n    numberOfButtons\r\n  } = params;\r\n\r\n  const numberOfPages = Math.ceil(numberOfArticles / articlesPerPage);\r\n\r\n  if (currentPage > numberOfPages || currentPage < 1)\r\n    return {\r\n      pagination: [],\r\n      currentPage\r\n    };\r\n\r\n  const buttons = Array(numberOfPages)\r\n    .fill(1)\r\n    .map((e, i) => e + i);\r\n\r\n  const sideButtons =\r\n    numberOfButtons % 2 === 0 ? numberOfButtons / 2 : (numberOfButtons - 1) / 2;\r\n\r\n  const calculLeft = (rest = 0) => {\r\n    return {\r\n      array: buttons\r\n        .slice(0, currentPage - 1)\r\n        .reverse()\r\n        .slice(0, sideButtons + rest)\r\n        .reverse(),\r\n      rest: function() {\r\n        return sideButtons - this.array.length;\r\n      }\r\n    };\r\n  };\r\n\r\n  const calculRight = (rest = 0) => {\r\n    return {\r\n      array: buttons.slice(currentPage).slice(0, sideButtons + rest),\r\n      rest: function() {\r\n        return sideButtons - this.array.length;\r\n      }\r\n    };\r\n  };\r\n\r\n  const leftButtons = calculLeft(calculRight().rest()).array;\r\n  const rightButtons = calculRight(calculLeft().rest()).array;\r\n\r\n  return {\r\n    pagination: [...leftButtons, currentPage, ...rightButtons],\r\n    currentPage\r\n  };\r\n};\r\n\r\nexport default createPagination;\r\n"]},"metadata":{},"sourceType":"module"}