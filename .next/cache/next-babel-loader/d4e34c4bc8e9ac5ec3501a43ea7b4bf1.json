{"ast":null,"code":"import Joi from '@hapi/joi';\nexport const registerValidation = data => {\n  const schema = Joi.object({\n    name: Joi.string(),\n    userName: Joi.string().min(3).required(),\n    email: Joi.string().min(6).required().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    }),\n    password: Joi.string().min(6).required()\n  });\n  return schema.validate(data);\n};\nexport const loginValidation = data => {\n  const schema = Joi.object({\n    email: Joi.string().min(3).required().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    }),\n    password: Joi.string().min(6).required()\n  });\n  return schema.validate(data);\n};\nexport const mediaValidation = data => {\n  const schema = Joi.object({\n    media: Joi.object().required()\n  });\n  return schema.validate(data);\n};\nexport const RatingValidation = data => {\n  const schema = Joi.object({\n    media_id: Joi.string().required(),\n    rating: Joi.number().max(2).required()\n  });\n  return schema.validate(data);\n};","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/server/Validation.js"],"names":["Joi","registerValidation","data","schema","object","name","string","userName","min","required","email","minDomainSegments","tlds","allow","password","validate","loginValidation","mediaValidation","media","RatingValidation","media_id","rating","number","max"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AAC1C,QAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAW;AACxBC,IAAAA,IAAI,EAAEL,GAAG,CAACM,MAAJ,EADkB;AAExBC,IAAAA,QAAQ,EAAEP,GAAG,CAACM,MAAJ,GAAaE,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,EAFc;AAGxBC,IAAAA,KAAK,EAAEV,GAAG,CAACM,MAAJ,GACJE,GADI,CACA,CADA,EAEJC,QAFI,GAGJC,KAHI,CAGE;AAAEC,MAAAA,iBAAiB,EAAE,CAArB;AAAwBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR;AAAT;AAA9B,KAHF,CAHiB;AAOxBC,IAAAA,QAAQ,EAAEd,GAAG,CAACM,MAAJ,GAAaE,GAAb,CAAiB,CAAjB,EAAoBC,QAApB;AAPc,GAAX,CAAf;AASA,SAAON,MAAM,CAACY,QAAP,CAAgBb,IAAhB,CAAP;AACD,CAXM;AAaP,OAAO,MAAMc,eAAe,GAAId,IAAD,IAAU;AACvC,QAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAW;AACxBM,IAAAA,KAAK,EAAEV,GAAG,CAACM,MAAJ,GACJE,GADI,CACA,CADA,EAEJC,QAFI,GAGJC,KAHI,CAGE;AAAEC,MAAAA,iBAAiB,EAAE,CAArB;AAAwBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR;AAAT;AAA9B,KAHF,CADiB;AAKxBC,IAAAA,QAAQ,EAAEd,GAAG,CAACM,MAAJ,GAAaE,GAAb,CAAiB,CAAjB,EAAoBC,QAApB;AALc,GAAX,CAAf;AAOA,SAAON,MAAM,CAACY,QAAP,CAAgBb,IAAhB,CAAP;AACD,CATM;AAUP,OAAO,MAAMe,eAAe,GAAIf,IAAD,IAAU;AACvC,QAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAW;AACxBc,IAAAA,KAAK,EAAElB,GAAG,CAACI,MAAJ,GAAaK,QAAb;AADiB,GAAX,CAAf;AAGA,SAAON,MAAM,CAACY,QAAP,CAAgBb,IAAhB,CAAP;AACD,CALM;AAMP,OAAO,MAAMiB,gBAAgB,GAAIjB,IAAD,IAAU;AACxC,QAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAW;AACxBgB,IAAAA,QAAQ,EAAEpB,GAAG,CAACM,MAAJ,GAAaG,QAAb,EADc;AAExBY,IAAAA,MAAM,EAAErB,GAAG,CAACsB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBd,QAApB;AAFgB,GAAX,CAAf;AAIA,SAAON,MAAM,CAACY,QAAP,CAAgBb,IAAhB,CAAP;AACD,CANM","sourcesContent":["import Joi from '@hapi/joi';\r\n\r\nexport const registerValidation = (data) => {\r\n  const schema = Joi.object({\r\n    name: Joi.string(),\r\n    userName: Joi.string().min(3).required(),\r\n    email: Joi.string()\r\n      .min(6)\r\n      .required()\r\n      .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n    password: Joi.string().min(6).required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\n\r\nexport const loginValidation = (data) => {\r\n  const schema = Joi.object({\r\n    email: Joi.string()\r\n      .min(3)\r\n      .required()\r\n      .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n    password: Joi.string().min(6).required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\nexport const mediaValidation = (data) => {\r\n  const schema = Joi.object({\r\n    media: Joi.object().required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\nexport const RatingValidation = (data) => {\r\n  const schema = Joi.object({\r\n    media_id: Joi.string().required(),\r\n    rating: Joi.number().max(2).required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}