{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Layout from '../../components/layout';\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport CardTwo from '../../components/ui/Cards/CardTwo';\nimport { useContext } from 'react';\nimport MovieContext from '../../components/context/MovieContext';\nvar Styled = styled.section.withConfig({\n  displayName: \"movie__Styled\",\n  componentId: \"sc-1781jcz-0\"\n})([\"background:var(--bg-dark-gradient);padding:150px 1em 0 1em;.wrapper{max-width:1500px;margin:0 auto;.title{font-size:1.5rem;margin-bottom:1em;}}.content--container{display:grid;grid-gap:2em;}@media screen and (min-width:768px){.content--container{grid-row-gap:3.5em;grid-template-columns:repeat(2,1fr);}}\"]);\n\nvar movie = function movie(_ref) {\n  var movies = _ref.movies;\n\n  var _useContext = useContext(MovieContext),\n      currentPage = _useContext.currentPage,\n      total_pages = _useContext.total_pages;\n\n  console.log(movies, currentPage, total_pages);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"movie--section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, movies.title, \" Movies\"), __jsx(\"div\", {\n    className: \"content--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, movies.results.map(function (item) {\n    return __jsx(CardTwo, {\n      key: item.id,\n      data: item,\n      typeFor: movies.typeFor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  })))));\n};\n\nmovie.getInitialProps = function _callee(_ref2) {\n  var query, queryLeng, movies;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          queryLeng = Object.keys(query).length;\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(movieDB(\"movie/\".concat(queryLeng === 0 ? 'popular' : query.query), \"page=\".concat(2)));\n\n        case 5:\n          movies = _context.sent;\n          return _context.abrupt(\"return\", {\n            movies: _objectSpread({\n              typeFor: 'movie',\n              title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' ')\n            }, movies)\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 9]], Promise);\n};\n\nexport default movie;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/index.jsx"],"names":["React","Layout","styled","movieDB","CardTwo","useContext","MovieContext","Styled","section","movie","movies","currentPage","total_pages","console","log","title","results","map","item","id","typeFor","getInitialProps","query","queryLeng","Object","keys","length","split","join"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,IAAMC,MAAM,GAAGL,MAAM,CAACM,OAAV;AAAA;AAAA;AAAA,uTAAZ;;AA2BA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,oBACSL,UAAU,CAACC,YAAD,CADnB;AAAA,MACpBK,WADoB,eACpBA,WADoB;AAAA,MACPC,WADO,eACPA,WADO;;AAG5BC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoBC,WAApB,EAAiCC,WAAjC;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,MAAM,CAACK,KAA9B,YADF,EAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,CAACM,OAAP,CAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,WACtB,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAnB;AAAuB,MAAA,IAAI,EAAED,IAA7B;AAAmC,MAAA,OAAO,EAAER,MAAM,CAACU,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB;AAAA,GAAvB,CADH,CAFF,CADF,CADF,CADF;AAcD,CAlBD;;AAoBAX,KAAK,CAACY,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAChBC,UAAAA,SADgB,GACJC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MADf;AAAA;AAAA;AAAA,2CAGCvB,OAAO,iBACjBoB,SAAS,KAAK,CAAd,GAAkB,SAAlB,GAA8BD,KAAK,CAACA,KADnB,kBAElB,CAFkB,EAHR;;AAAA;AAGdZ,UAAAA,MAHc;AAAA,2CAOb;AACLA,YAAAA,MAAM;AACJU,cAAAA,OAAO,EAAE,OADL;AAEJL,cAAAA,KAAK,EAAEQ,SAAS,KAAK,CAAd,GAAkB,SAAlB,GAA8BD,KAAK,CAACA,KAAN,CAAYK,KAAZ,CAAkB,GAAlB,EAAuBC,IAAvB,CAA4B,GAA5B;AAFjC,eAGDlB,MAHC;AADD,WAPa;;AAAA;AAAA;AAAA;AAepBG,UAAAA,OAAO,CAACC,GAAR;;AAfoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAmBA,eAAeL,KAAf","sourcesContent":["import React from 'react';\r\nimport Layout from '../../components/layout';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport CardTwo from '../../components/ui/Cards/CardTwo';\r\nimport { useContext } from 'react';\r\nimport MovieContext from '../../components/context/MovieContext';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  padding: 150px 1em 0 1em;\r\n\r\n  .wrapper {\r\n    max-width: 1500px;\r\n    margin: 0 auto;\r\n\r\n    .title {\r\n      font-size: 1.5rem;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n\r\n  .content--container {\r\n    display: grid;\r\n    grid-gap: 2em;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .content--container {\r\n      grid-row-gap: 3.5em;\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nconst movie = ({ movies }) => {\r\n  const { currentPage, total_pages } = useContext(MovieContext);\r\n\r\n  console.log(movies, currentPage, total_pages);\r\n  return (\r\n    <Layout>\r\n      <Styled className='movie--section'>\r\n        <div className='wrapper'>\r\n          <h2 className='title'>{movies.title} Movies</h2>\r\n          <div className='content--container'>\r\n            {movies.results.map(item => (\r\n              <CardTwo key={item.id} data={item} typeFor={movies.typeFor} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nmovie.getInitialProps = async ({ query }) => {\r\n  const queryLeng = Object.keys(query).length;\r\n  try {\r\n    const movies = await movieDB(\r\n      `movie/${queryLeng === 0 ? 'popular' : query.query}`,\r\n      `page=${2}`\r\n    );\r\n    return {\r\n      movies: {\r\n        typeFor: 'movie',\r\n        title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' '),\r\n        ...movies\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default movie;\r\n"]},"metadata":{},"sourceType":"module"}