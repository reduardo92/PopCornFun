{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar useMovieReducer = function useMovieReducer(state, action) {\n  switch (action.type) {\n    case 'SET_DATA':\n      return _objectSpread({}, state, {\n        movieDBData: action.payload\n      });\n\n    case 'SET_PAGE_DATA':\n      return _objectSpread({}, state, {\n        pageData: action.payload\n      });\n\n    case 'SET_PAGE_DATA_UNMOUNT':\n      return _objectSpread({}, state, {\n        pageData: {}\n      });\n\n    case 'SET_TOTAL_PAGES':\n      return _objectSpread({}, state, {\n        total_pages: action.totalPages,\n        query: action.newQuery\n      });\n\n    case 'SET_CURRENT_PAGE':\n      return _objectSpread({}, state, {\n        current_page: action.newCurrentPage\n      });\n\n    case 'SET_QUERY':\n      return _objectSpread({}, state, {\n        query: action.newQuery\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default useMovieReducer;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/context/useMovieReducer.js"],"names":["useMovieReducer","state","action","type","movieDBData","payload","pageData","total_pages","totalPages","query","newQuery","current_page","newCurrentPage"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,WAAW,EAAEF,MAAM,CAACG;AAFtB;;AAIF,SAAK,eAAL;AACE,+BACKJ,KADL;AAEEK,QAAAA,QAAQ,EAAEJ,MAAM,CAACG;AAFnB;;AAIF,SAAK,uBAAL;AACE,+BACKJ,KADL;AAEEK,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAK,iBAAL;AACE,+BACKL,KADL;AAEEM,QAAAA,WAAW,EAAEL,MAAM,CAACM,UAFtB;AAGEC,QAAAA,KAAK,EAAEP,MAAM,CAACQ;AAHhB;;AAKF,SAAK,kBAAL;AACE,+BACKT,KADL;AAEEU,QAAAA,YAAY,EAAET,MAAM,CAACU;AAFvB;;AAIF,SAAK,WAAL;AACE,+BACKX,KADL;AAEEQ,QAAAA,KAAK,EAAEP,MAAM,CAACQ;AAFhB;;AAIF;AACE,aAAOT,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,eAAf","sourcesContent":["const useMovieReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_DATA':\r\n      return {\r\n        ...state,\r\n        movieDBData: action.payload\r\n      };\r\n    case 'SET_PAGE_DATA':\r\n      return {\r\n        ...state,\r\n        pageData: action.payload\r\n      };\r\n    case 'SET_PAGE_DATA_UNMOUNT':\r\n      return {\r\n        ...state,\r\n        pageData: {}\r\n      };\r\n    case 'SET_TOTAL_PAGES':\r\n      return {\r\n        ...state,\r\n        total_pages: action.totalPages,\r\n        query: action.newQuery\r\n      };\r\n    case 'SET_CURRENT_PAGE':\r\n      return {\r\n        ...state,\r\n        current_page: action.newCurrentPage\r\n      };\r\n    case 'SET_QUERY':\r\n      return {\r\n        ...state,\r\n        query: action.newQuery\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default useMovieReducer;\r\n"]},"metadata":{},"sourceType":"module"}