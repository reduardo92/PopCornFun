{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\SearchFrom.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport MovieContext from '../context/MovieContext';\nimport styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport { FaSearch } from 'react-icons/fa';\nimport { MdPerson, MdLocalMovies, MdTv } from 'react-icons/md';\nimport { CLEAR_SEARCH_DATA } from '../context/types';\nvar Styled = styled.div.withConfig({\n  displayName: \"SearchFrom__Styled\",\n  componentId: \"fc5opr-0\"\n})([\"background-color:var(--white-clr);padding:0;.form{max-width:920px;margin:0 auto;padding:0 1em;position:relative;}.form-group{display:flex;margin:0;}.form-label{margin-right:0.5em;display:flex;align-items:center;justify-content:center;svg{color:var(--grey-clr);}}.form--clear{position:absolute;top:50%;right:2%;transform:translate(-2%,-50%);color:var(--primary-clr);font-weight:bold;font-size:1.5rem;cursor:pointer;transition:var(--ease--in--out--02s);&:hover{opacity:0.7;}}.form-control{border:0;color:var(--grey-clr);&::placeholder{font-size:0.9rem;}&:hover .form--clear{background-color:red;}}.search--content{height:auto;}.search--content--item{border-top:1px solid rgba(0,0,0,0.1);padding:0.1em 1em;transition:var(--ease--in--out--02s);cursor:pointer;&:hover{background-color:rgba(196,196,196,0.4);}&__name{color:var(--second-clr);margin-bottom:0;margin-left:1em;.media--in{color:rgb(151,151,151);margin-left:0.3em;}}&:hover .search--content--item__name,&:hover .search--content--item__icon{color:var(--primary-clr);}}.wrapper{margin:0 auto;max-width:920px;display:flex;align-items:center;font-size:0.9em;color:var(--second-clr);text-transform:capitalize;}\"]);\n\nvar SearchFrom = function SearchFrom() {\n  var _useContext = useContext(MovieContext),\n      getSearchData = _useContext.getSearchData,\n      clearData = _useContext.clearData,\n      searchData = _useContext.searchData;\n\n  var _useState = useState(''),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  var inputRef = useRef();\n  var router = useRouter();\n\n  var handleChange = function handleChange(e) {\n    return setSearch(e.target.value);\n  };\n\n  useEffect(function () {\n    if (search === '') {\n      console.log('emty', search);\n      clearData(CLEAR_SEARCH_DATA);\n      return;\n    } else {\n      getSearchData(search);\n      console.log('sea', search);\n    }\n  }, [search]);\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n\n            if (search === '') {\n              console.log('enter something');\n            } else {\n              console.log('loged', search);\n              router.push('/search/[query]', \"/search/\".concat(search));\n            }\n\n            setSearch('');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(inputRef);\n  return __jsx(Styled, {\n    classname: \"search form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Form, {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, __jsx(FaSearch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), __jsx(Form.Control, {\n    ref: inputRef,\n    type: \"text\",\n    name: \"search\",\n    value: search,\n    onChange: handleChange,\n    placeholder: \"Search for a movie, tv show, person...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    onClick: function onClick() {\n      return setSearch('');\n    },\n    className: \"form--clear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"x\"))), __jsx(\"div\", {\n    className: \"search--content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, searchData && searchData.map(function (item) {\n    return __jsx(\"div\", {\n      className: \"search--content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, item.media_type === 'movie' ? __jsx(MdLocalMovies, {\n      className: \"search--content--item__icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }) : item.media_type === 'tv' ? __jsx(MdTv, {\n      className: \"search--content--item__icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }) : __jsx(MdPerson, {\n      className: \"search--content--item__icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      className: \"search--content--item__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, item.name || item.title, __jsx(\"span\", {\n      className: \"media--in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"in\", ' ', item.media_type === 'person' ? 'People' : item.media_type))));\n  })));\n};\n\nexport default SearchFrom;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/SearchFrom.jsx"],"names":["useContext","useEffect","useState","useRef","useRouter","MovieContext","styled","Form","FaSearch","MdPerson","MdLocalMovies","MdTv","CLEAR_SEARCH_DATA","Styled","div","SearchFrom","getSearchData","clearData","searchData","search","setSearch","inputRef","router","handleChange","e","target","value","console","log","handleSubmit","preventDefault","push","map","item","media_type","name","title"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport MovieContext from '../context/MovieContext';\r\nimport styled from 'styled-components';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { MdPerson, MdLocalMovies, MdTv } from 'react-icons/md';\r\nimport { CLEAR_SEARCH_DATA } from '../context/types';\r\n\r\nconst Styled = styled.div`\r\n  background-color: var(--white-clr);\r\n  padding: 0;\r\n\r\n  .form {\r\n    max-width: 920px;\r\n    margin: 0 auto;\r\n    padding: 0 1em;\r\n    position: relative;\r\n  }\r\n\r\n  .form-group {\r\n    display: flex;\r\n    margin: 0;\r\n  }\r\n  .form-label {\r\n    margin-right: 0.5em;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    svg {\r\n      color: var(--grey-clr);\r\n    }\r\n  }\r\n\r\n  .form--clear {\r\n    position: absolute;\r\n    /* display: none; */\r\n    top: 50%;\r\n    right: 2%;\r\n    transform: translate(-2%, -50%);\r\n    color: var(--primary-clr);\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n    transition: var(--ease--in--out--02s);\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n\r\n  .form-control {\r\n    border: 0;\r\n    color: var(--grey-clr);\r\n\r\n    &::placeholder {\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    &:hover .form--clear {\r\n      background-color: red;\r\n    }\r\n  }\r\n\r\n  .search--content {\r\n    height: auto;\r\n  }\r\n\r\n  .search--content--item {\r\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n    padding: 0.1em 1em;\r\n    transition: var(--ease--in--out--02s);\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: rgba(196, 196, 196, 0.4);\r\n    }\r\n\r\n    &__name {\r\n      color: var(--second-clr);\r\n      margin-bottom: 0;\r\n      margin-left: 1em;\r\n\r\n      .media--in {\r\n        color: rgb(151, 151, 151);\r\n        margin-left: 0.3em;\r\n      }\r\n    }\r\n\r\n    &:hover .search--content--item__name,\r\n    &:hover .search--content--item__icon {\r\n      color: var(--primary-clr);\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    margin: 0 auto;\r\n    max-width: 920px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 0.9em;\r\n    color: var(--second-clr);\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nconst SearchFrom = () => {\r\n  const { getSearchData, clearData, searchData } = useContext(MovieContext);\r\n  const [search, setSearch] = useState('');\r\n  const inputRef = useRef();\r\n\r\n  const router = useRouter();\r\n\r\n  const handleChange = e => setSearch(e.target.value);\r\n\r\n  useEffect(() => {\r\n    if (search === '') {\r\n      console.log('emty', search);\r\n      clearData(CLEAR_SEARCH_DATA);\r\n      return;\r\n    } else {\r\n      getSearchData(search);\r\n      console.log('sea', search);\r\n    }\r\n  }, [search]);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (search === '') {\r\n      console.log('enter something');\r\n    } else {\r\n      console.log('loged', search);\r\n      router.push('/search/[query]', `/search/${search}`);\r\n    }\r\n    setSearch('');\r\n  };\r\n\r\n  console.log(inputRef);\r\n\r\n  return (\r\n    <Styled classname='search form'>\r\n      <Form className='form' onSubmit={handleSubmit}>\r\n        <Form.Group controlId='search'>\r\n          <Form.Label>\r\n            <FaSearch />\r\n          </Form.Label>\r\n          <Form.Control\r\n            ref={inputRef}\r\n            type='text'\r\n            name='search'\r\n            value={search}\r\n            onChange={handleChange}\r\n            placeholder='Search for a movie, tv show, person...'\r\n          />\r\n          <span onClick={() => setSearch('')} className='form--clear'>\r\n            x\r\n          </span>\r\n        </Form.Group>\r\n      </Form>\r\n      <div className='search--content'>\r\n        {searchData &&\r\n          searchData.map(item => (\r\n            <div className='search--content--item'>\r\n              <div className='wrapper'>\r\n                {item.media_type === 'movie' ? (\r\n                  <MdLocalMovies className='search--content--item__icon' />\r\n                ) : item.media_type === 'tv' ? (\r\n                  <MdTv className='search--content--item__icon' />\r\n                ) : (\r\n                  <MdPerson className='search--content--item__icon' />\r\n                )}\r\n                <p className='search--content--item__name'>\r\n                  {item.name || item.title}\r\n                  <span className='media--in'>\r\n                    in{' '}\r\n                    {item.media_type === 'person' ? 'People' : item.media_type}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default SearchFrom;\r\n"]},"metadata":{},"sourceType":"module"}