{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\mediaProfile\\\\ProfileStats\\\\ReleaseContent.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst ReleaseContent = ({\n  data,\n  typeFor\n}) => {\n  const networks = typeFor === 'tv' && data.networks.map(netWork => __jsx(Link, {\n    key: netWork.id,\n    href: \"/network/[id]\",\n    as: `/network/${netWork.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"network--logo\",\n    src: `${IMG_URL}${netWork.logo_path}`,\n    alt: netWork.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  })));\n  const releaseData = data[data.typeFor === 'tv' ? 'content_ratings' : 'release_dates'].results.filter(item => item.iso_3166_1 === 'US')[0];\n  return __jsx(\"ul\", {\n    className: \"release--content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, networks, data.typeFor === 'tv' && __jsx(\"p\", {\n    className: \"stat--title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Certification\"));\n};\n\nexport default ReleaseContent;\n{\n  /* <li key={i}>\r\n  <div className='release--date'>\r\n  <TiWorld className='world' />\r\n  <span className='stat--subtext'>\r\n    {setDateFormat(item.release_date.slice(0, 10))}\r\n  </span>\r\n  </div>\r\n  <div className='certification'>\r\n  <span className='rate'>{item.certification}</span>\r\n  <span className='stat--subtext'>{getReleaseType[item.type]}</span>\r\n  </div>\r\n  </li> */\n}","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/mediaProfile/ProfileStats/ReleaseContent.jsx"],"names":["React","ReleaseContent","data","typeFor","networks","map","netWork","id","IMG_URL","logo_path","name","releaseData","results","filter","item","iso_3166_1"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAC5C,QAAMC,QAAQ,GACZD,OAAO,KAAK,IAAZ,IACAD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACvB,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAnB;AAAuB,IAAA,IAAI,EAAC,eAA5B;AAA4C,IAAA,EAAE,EAAG,YAAWD,OAAO,CAACC,EAAG,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,GAAG,EAAG,GAAEC,OAAQ,GAAEF,OAAO,CAACG,SAAU,EAFtC;AAGE,IAAA,GAAG,EAAEH,OAAO,CAACI,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF;AAYA,QAAMC,WAAW,GAAGT,IAAI,CACtBA,IAAI,CAACC,OAAL,KAAiB,IAAjB,GAAwB,iBAAxB,GAA4C,eADtB,CAAJ,CAElBS,OAFkB,CAEVC,MAFU,CAEHC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAoB,IAFzB,EAE+B,CAF/B,CAApB;AAIA,SACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QADH,EAEGF,IAAI,CAACC,OAAL,KAAiB,IAAjB,IAAyB;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAF5B,CADF;AAMD,CAvBD;;AAyBA,eAAeF,cAAf;AAEA;AACE;;;;;;;;;;;;AAYD","sourcesContent":["import React from 'react';\r\n\r\nconst ReleaseContent = ({ data, typeFor }) => {\r\n  const networks =\r\n    typeFor === 'tv' &&\r\n    data.networks.map(netWork => (\r\n      <Link key={netWork.id} href='/network/[id]' as={`/network/${netWork.id}`}>\r\n        <img\r\n          className='network--logo'\r\n          src={`${IMG_URL}${netWork.logo_path}`}\r\n          alt={netWork.name}\r\n        />\r\n      </Link>\r\n    ));\r\n\r\n  const releaseData = data[\r\n    data.typeFor === 'tv' ? 'content_ratings' : 'release_dates'\r\n  ].results.filter(item => item.iso_3166_1 === 'US')[0];\r\n\r\n  return (\r\n    <ul className='release--content'>\r\n      {networks}\r\n      {data.typeFor === 'tv' && <p className='stat--title'>Certification</p>}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ReleaseContent;\r\n\r\n{\r\n  /* <li key={i}>\r\n<div className='release--date'>\r\n  <TiWorld className='world' />\r\n  <span className='stat--subtext'>\r\n    {setDateFormat(item.release_date.slice(0, 10))}\r\n  </span>\r\n</div>\r\n<div className='certification'>\r\n  <span className='rate'>{item.certification}</span>\r\n  <span className='stat--subtext'>{getReleaseType[item.type]}</span>\r\n</div>\r\n</li> */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}