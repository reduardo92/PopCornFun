{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\Forms\\\\DiscoverFrom.jsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport MovieContext from '../../context/MovieContext';\nimport Form from 'react-bootstrap/Form';\nimport getYears from '../../utility/getYears';\nimport uuid from 'uuid';\nconst Styled = styled.div.withConfig({\n  displayName: \"DiscoverFrom__Styled\",\n  componentId: \"sc-1qw32to-0\"\n})([\".clear--fields{display:flex;}@media screen and (min-width:768px){flex:100%;margin-bottom:1em;.discover--from{display:flex;justify-content:space-between;& > div{flex:1;margin-right:1em;}& >:last-child{margin-right:0;}}}.genre--control .tv{display:\", \";}@media screen and (min-width:1000px){flex:1;margin-left:2em;.discover--from{display:flex;justify-content:space-between;& > div{flex:1;margin-right:1em;}& >:last-child{margin-right:0;}}}\"], ({\n  genre\n}) => genre && 'none');\n\nconst DiscoverForm = ({\n  typeFor\n}) => {\n  const {\n    discoverForm: {\n      handleChange,\n      handleSubmit,\n      form,\n      setForm\n    }\n  } = useContext(MovieContext);\n  const {\n    query,\n    push\n  } = useRouter();\n  const {\n    year,\n    sort_by,\n    genre\n  } = form;\n  const sortBy = [{\n    id: uuid.v4(),\n    value: 'popularity.desc',\n    name: 'popularity descending'\n  }, {\n    id: uuid.v4(),\n    value: 'popularity.asc',\n    name: 'popularity ascending'\n  }, {\n    id: uuid.v4(),\n    value: 'vote_average.desc',\n    name: 'rating descending'\n  }, {\n    id: uuid.v4(),\n    value: 'vote_average.asc',\n    name: 'rating ascending'\n  }, {\n    id: uuid.v4(),\n    value: 'primary_release_date.desc',\n    name: 'release date descending'\n  }, {\n    id: uuid.v4(),\n    value: '\"primary_release_date.asc',\n    name: 'release date ascending'\n  }, {\n    id: uuid.v4(),\n    value: 'title.asc',\n    name: 'title (A-Z)'\n  }, {\n    id: uuid.v4(),\n    value: 'title.desc',\n    name: 'title (Z-A)'\n  }];\n  const genres = [{\n    id: 28,\n    name: 'Action'\n  }, {\n    id: 12,\n    name: 'Adventure'\n  }, {\n    id: 10759,\n    name: 'Action & Adventure',\n    for: 'tv'\n  }, {\n    id: 16,\n    name: 'Animation'\n  }, {\n    id: 35,\n    name: 'Comedy'\n  }, {\n    id: 80,\n    name: 'Crime'\n  }, {\n    id: 99,\n    name: 'Documentary'\n  }, {\n    id: 18,\n    name: 'Drama'\n  }, {\n    id: 10751,\n    name: 'Family'\n  }, {\n    id: 14,\n    name: 'Fantasy'\n  }, {\n    id: 36,\n    name: 'History'\n  }, {\n    id: 27,\n    name: 'Horror'\n  }, {\n    id: 10762,\n    name: 'Kids',\n    for: 'tv'\n  }, {\n    id: 10402,\n    name: 'Music'\n  }, {\n    id: 9648,\n    name: 'Mystery'\n  }, {\n    id: 10749,\n    name: 'Romance'\n  }, {\n    id: 10763,\n    name: 'News',\n    for: 'tv'\n  }, {\n    id: 10764,\n    name: 'Reality',\n    for: 'tv'\n  }, {\n    id: 10770,\n    name: 'Tv Movie'\n  }, {\n    id: 53,\n    name: 'Thriller'\n  }, {\n    id: 878,\n    name: 'Sci-Fi & Fantasy'\n  }, {\n    id: 10766,\n    name: 'Soap',\n    for: 'tv'\n  }, {\n    id: 10767,\n    name: 'Talk',\n    for: 'tv'\n  }, {\n    id: 10768,\n    name: 'War & Politics',\n    for: 'tv'\n  }, {\n    id: 10752,\n    name: 'War'\n  }, {\n    id: 37,\n    name: 'Western'\n  }];\n\n  const handleReset = () => {\n    setForm({\n      year: '',\n      sort_by: 'popularity.desc',\n      genre: ''\n    });\n    push(`/discover?query=${query.query}${sortQuery}${yearQuery}${genreQuery}&page=1`);\n  };\n\n  const sortQuery = sort_by === 'popularity.desc' ? '' : `&sort_by=${sort_by}`;\n  const yearQuery = year === '' ? '' : `&year=${year}`;\n  const genreQuery = genre === '' ? '' : `&genres=${genre}`;\n  useEffect(() => {\n    if (genre === '') {\n      push(`/discover?query=${query.query}${sortQuery}${yearQuery}&page=${query.page}`);\n    }\n\n    if (year === '') {\n      push(`/discover?query=${query.query}${sortQuery}${genreQuery}&page=${query.page}`);\n    }\n\n    push(`/discover?query=${query.query}${sortQuery}${yearQuery}${genreQuery}&page=${query.page}`);\n  }, [year, sort_by, genre]);\n  return __jsx(Styled, {\n    className: \"discover--form--section\",\n    genre: query.query === 'movie' && true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(Form, {\n    className: \"discover--from\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Year\"), __jsx(Form.Control, {\n    as: \"select\",\n    name: \"year\",\n    value: year,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), getYears().reverse().map(year => __jsx(\"option\", {\n    key: year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, year)))), __jsx(Form.Group, {\n    controlId: \"sort_by\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Sort By\"), __jsx(Form.Control, {\n    as: \"select\",\n    name: \"sort_by\",\n    value: sort_by,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, sortBy.map(({\n    id,\n    value,\n    name\n  }) => __jsx(\"option\", {\n    key: id,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, name)))), __jsx(Form.Group, {\n    controlId: \"genres\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Genres\"), __jsx(Form.Control, {\n    className: \"genre--control\",\n    as: \"select\",\n    name: \"genre\",\n    value: genre,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), genres.map(genre => __jsx(\"option\", {\n    key: genre.id,\n    value: genre.id,\n    className: !genre.for ? 'both' : 'tv',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, genre.name)))), __jsx(\"div\", {\n    className: \"clear--fields\",\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"clear--fields__x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"x\"))));\n};\n\nexport default DiscoverForm;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/Forms/DiscoverFrom.jsx"],"names":["React","useContext","useEffect","useRouter","styled","MovieContext","Form","getYears","uuid","Styled","div","genre","DiscoverForm","typeFor","discoverForm","handleChange","handleSubmit","form","setForm","query","push","year","sort_by","sortBy","id","v4","value","name","genres","for","handleReset","sortQuery","yearQuery","genreQuery","page","reverse","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport styled from 'styled-components';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport Form from 'react-bootstrap/Form';\r\nimport getYears from '../../utility/getYears';\r\nimport uuid from 'uuid';\r\n\r\nconst Styled = styled.div`\r\n  .clear--fields {\r\n    display: flex;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex: 100%;\r\n    margin-bottom: 1em;\r\n\r\n    .discover--from {\r\n      display: flex;\r\n      justify-content: space-between;\r\n\r\n      & > div {\r\n        flex: 1;\r\n        margin-right: 1em;\r\n      }\r\n\r\n      & > :last-child {\r\n        margin-right: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .genre--control .tv {\r\n    display: ${({ genre }) => genre && 'none'};\r\n  }\r\n  @media screen and (min-width: 1000px) {\r\n    flex: 1;\r\n    margin-left: 2em;\r\n\r\n    .discover--from {\r\n      display: flex;\r\n      justify-content: space-between;\r\n\r\n      & > div {\r\n        flex: 1;\r\n        margin-right: 1em;\r\n      }\r\n\r\n      & > :last-child {\r\n        margin-right: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DiscoverForm = ({ typeFor }) => {\r\n  const {\r\n    discoverForm: { handleChange, handleSubmit, form, setForm }\r\n  } = useContext(MovieContext);\r\n\r\n  const { query, push } = useRouter();\r\n\r\n  const { year, sort_by, genre } = form;\r\n\r\n  const sortBy = [\r\n    { id: uuid.v4(), value: 'popularity.desc', name: 'popularity descending' },\r\n    { id: uuid.v4(), value: 'popularity.asc', name: 'popularity ascending' },\r\n    { id: uuid.v4(), value: 'vote_average.desc', name: 'rating descending' },\r\n    { id: uuid.v4(), value: 'vote_average.asc', name: 'rating ascending' },\r\n    {\r\n      id: uuid.v4(),\r\n      value: 'primary_release_date.desc',\r\n      name: 'release date descending'\r\n    },\r\n    {\r\n      id: uuid.v4(),\r\n      value: '\"primary_release_date.asc',\r\n      name: 'release date ascending'\r\n    },\r\n    { id: uuid.v4(), value: 'title.asc', name: 'title (A-Z)' },\r\n    { id: uuid.v4(), value: 'title.desc', name: 'title (Z-A)' }\r\n  ];\r\n\r\n  const genres = [\r\n    { id: 28, name: 'Action' },\r\n    { id: 12, name: 'Adventure' },\r\n    { id: 10759, name: 'Action & Adventure', for: 'tv' },\r\n    { id: 16, name: 'Animation' },\r\n    { id: 35, name: 'Comedy' },\r\n    { id: 80, name: 'Crime' },\r\n    { id: 99, name: 'Documentary' },\r\n    { id: 18, name: 'Drama' },\r\n    { id: 10751, name: 'Family' },\r\n    { id: 14, name: 'Fantasy' },\r\n    { id: 36, name: 'History' },\r\n    { id: 27, name: 'Horror' },\r\n    { id: 10762, name: 'Kids', for: 'tv' },\r\n    { id: 10402, name: 'Music' },\r\n    { id: 9648, name: 'Mystery' },\r\n    { id: 10749, name: 'Romance' },\r\n    { id: 10763, name: 'News', for: 'tv' },\r\n    { id: 10764, name: 'Reality', for: 'tv' },\r\n    { id: 10770, name: 'Tv Movie' },\r\n    { id: 53, name: 'Thriller' },\r\n    { id: 878, name: 'Sci-Fi & Fantasy' },\r\n    { id: 10766, name: 'Soap', for: 'tv' },\r\n    { id: 10767, name: 'Talk', for: 'tv' },\r\n    { id: 10768, name: 'War & Politics', for: 'tv' },\r\n    { id: 10752, name: 'War' },\r\n    { id: 37, name: 'Western' }\r\n  ];\r\n\r\n  const handleReset = () => {\r\n    setForm({\r\n      year: '',\r\n      sort_by: 'popularity.desc',\r\n      genre: ''\r\n    });\r\n    push(\r\n      `/discover?query=${query.query}${sortQuery}${yearQuery}${genreQuery}&page=1`\r\n    );\r\n  };\r\n\r\n  const sortQuery = sort_by === 'popularity.desc' ? '' : `&sort_by=${sort_by}`;\r\n  const yearQuery = year === '' ? '' : `&year=${year}`;\r\n  const genreQuery = genre === '' ? '' : `&genres=${genre}`;\r\n\r\n  useEffect(() => {\r\n    if (genre === '') {\r\n      push(\r\n        `/discover?query=${query.query}${sortQuery}${yearQuery}&page=${query.page}`\r\n      );\r\n    }\r\n    if (year === '') {\r\n      push(\r\n        `/discover?query=${query.query}${sortQuery}${genreQuery}&page=${query.page}`\r\n      );\r\n    }\r\n    push(\r\n      `/discover?query=${query.query}${sortQuery}${yearQuery}${genreQuery}&page=${query.page}`\r\n    );\r\n  }, [year, sort_by, genre]);\r\n\r\n  return (\r\n    <Styled\r\n      className='discover--form--section'\r\n      genre={query.query === 'movie' && true}\r\n    >\r\n      <Form className='discover--from' onSubmit={handleSubmit}>\r\n        <Form.Group controlId='year'>\r\n          <Form.Label>Year</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            name='year'\r\n            value={year}\r\n            onChange={handleChange}\r\n          >\r\n            <option></option>\r\n            {getYears()\r\n              .reverse()\r\n              .map(year => (\r\n                <option key={year}>{year}</option>\r\n              ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='sort_by'>\r\n          <Form.Label>Sort By</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            name='sort_by'\r\n            value={sort_by}\r\n            onChange={handleChange}\r\n          >\r\n            {sortBy.map(({ id, value, name }) => (\r\n              <option key={id} value={value}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='genres'>\r\n          <Form.Label>Genres</Form.Label>\r\n          <Form.Control\r\n            className='genre--control'\r\n            as='select'\r\n            name='genre'\r\n            value={genre}\r\n            onChange={handleChange}\r\n          >\r\n            <option></option>\r\n            {genres.map(genre => (\r\n              <option\r\n                key={genre.id}\r\n                value={genre.id}\r\n                className={!genre.for ? 'both' : 'tv'}\r\n              >\r\n                {genre.name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <div className='clear--fields' onClick={handleReset}>\r\n          <div className='clear--fields__x'>x</div>\r\n        </div>\r\n      </Form>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default DiscoverForm;\r\n"]},"metadata":{},"sourceType":"module"}