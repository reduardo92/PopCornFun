{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\context\\\\auth\\\\AuthState.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react';\nimport useAuthReducer from './useAuthReducer';\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport setAuthToken from '../../utility/setAuthToken';\nimport configHeader from '../../utility/configHeader';\nconst authInitialState = {\n  // token: localStorage.getItem('token'),\n  isAuthentucated: null,\n  loading: true,\n  user: null,\n  error: null\n};\n\nconst AuthState = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(useAuthReducer, authInitialState); // Load User\n\n  const loadUser = async () => {// //   check if token is in localStrorage to load user\n    // if (localStorage.token) {\n    //   setAuthToken(localStorage.token);\n    // }\n    // try {\n    //   const res = await axios.get('/api/auth');\n    //   dispatch({ type: USER_LOADED, payload: res.data });\n    // } catch (error) {\n    //   dispatch({ type: AUTH_ERROR });\n    // }\n  }; // Register User\n\n\n  const registerUser = async formData => {// try {\n    //   const res = await axios.post('/api/users', formData, configHeader);\n    //   dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n    //   // Load User\n    //   loadUser();\n    // } catch (error) {\n    //   dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\n    // }\n  }; // Login User\n\n\n  const loginUser = async formData => {// try {\n    //   const res = await axios.post('/api/auth', formData, configHeader);\n    //   dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n    //   // Load User\n    //   loadUser();\n    // } catch (error) {\n    //   dispatch({ type: LOGIN_FAIL, payload: error.response.data.msg });\n    // }\n  }; // Logout\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; // Clear Erros\n\n\n  const clearErros = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return __jsx(AuthContext.Provider, {\n    value: _objectSpread({}, state, {\n      loadUser,\n      registerUser,\n      loginUser,\n      logout,\n      clearErros\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/context/auth/AuthState.js"],"names":["React","useReducer","useAuthReducer","AuthContext","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","setAuthToken","configHeader","authInitialState","isAuthentucated","loading","user","error","AuthState","children","state","dispatch","loadUser","registerUser","formData","loginUser","logout","type","clearErros"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;AAUA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,MAAMC,gBAAgB,GAAG;AACvB;AACAC,EAAAA,eAAe,EAAE,IAFM;AAGvBC,EAAAA,OAAO,EAAE,IAHc;AAIvBC,EAAAA,IAAI,EAAE,IAJiB;AAKvBC,EAAAA,KAAK,EAAE;AALgB,CAAzB;;AAQA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBtB,UAAU,CAACC,cAAD,EAAiBa,gBAAjB,CAApC,CADkC,CAGlC;;AACA,QAAMS,QAAQ,GAAG,YAAY,CAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAXD,CAJkC,CAgBlC;;;AACA,QAAMC,YAAY,GAAG,MAAMC,QAAN,IAAkB,CACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATD,CAjBkC,CA2BlC;;;AACA,QAAMC,SAAS,GAAG,MAAMD,QAAN,IAAkB,CAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATD,CA5BkC,CAuClC;;;AACA,QAAME,MAAM,GAAG,MAAM;AACnBL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACD,GAFD,CAxCkC,CA2ClC;;;AACA,QAAMmB,UAAU,GAAG,MAAMP,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEjB;AAAR,GAAD,CAAjC;;AAEA,SACE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,oBACAU,KADA;AAEHE,MAAAA,QAFG;AAGHC,MAAAA,YAHG;AAIHE,MAAAA,SAJG;AAKHC,MAAAA,MALG;AAMHE,MAAAA;AANG,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGT,QAVH,CADF;AAcD,CA5DD;;AA8DA,eAAeD,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport useAuthReducer from './useAuthReducer';\r\nimport AuthContext from './AuthContext';\r\nimport axios from 'axios';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS\r\n} from '../types';\r\nimport setAuthToken from '../../utility/setAuthToken';\r\nimport configHeader from '../../utility/configHeader';\r\n\r\nconst authInitialState = {\r\n  // token: localStorage.getItem('token'),\r\n  isAuthentucated: null,\r\n  loading: true,\r\n  user: null,\r\n  error: null\r\n};\r\n\r\nconst AuthState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(useAuthReducer, authInitialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    // //   check if token is in localStrorage to load user\r\n    // if (localStorage.token) {\r\n    //   setAuthToken(localStorage.token);\r\n    // }\r\n    // try {\r\n    //   const res = await axios.get('/api/auth');\r\n    //   dispatch({ type: USER_LOADED, payload: res.data });\r\n    // } catch (error) {\r\n    //   dispatch({ type: AUTH_ERROR });\r\n    // }\r\n  };\r\n  // Register User\r\n  const registerUser = async formData => {\r\n    // try {\r\n    //   const res = await axios.post('/api/users', formData, configHeader);\r\n    //   dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n    //   // Load User\r\n    //   loadUser();\r\n    // } catch (error) {\r\n    //   dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\r\n    // }\r\n  };\r\n  // Login User\r\n  const loginUser = async formData => {\r\n    // try {\r\n    //   const res = await axios.post('/api/auth', formData, configHeader);\r\n    //   dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n    //   // Load User\r\n    //   loadUser();\r\n    // } catch (error) {\r\n    //   dispatch({ type: LOGIN_FAIL, payload: error.response.data.msg });\r\n    // }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n  // Clear Erros\r\n  const clearErros = () => dispatch({ type: CLEAR_ERRORS });\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadUser,\r\n        registerUser,\r\n        loginUser,\r\n        logout,\r\n        clearErros\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}