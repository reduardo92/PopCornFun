{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\person\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useState } from 'react';\nimport { IMG_URL } from '../../components/context/types';\nimport movieDB from '../../components/utility/movieDB';\nimport styled from 'styled-components';\nimport Layout from '../../components/layout';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport MovieContext from '../../components/context/MovieContext';\nimport SimpleFlex from '../../components/ui/SimpleFlex';\nimport RecommenCard from '../../components/ui/Cards/RecommenCard';\nimport groupCrew from '../../components/utility/groupCrew';\nconst Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"sc-1s2kqjg-0\"\n})([\"background:var(--bg-gradient);margin-top:110px;padding:2em 1em;.profile--person{max-width:300px;margin:0 auto;}.profile--biography{margin:2em 0;display:grid;&__name{font-weight:bold;margin-bottom:1em;text-align:center;}.read--more{display:flex;align-items:center;margin:0 auto;background-color:var(--primary-clr);border-radius:50%;padding:0.25em;font-size:1.7rem;transition:var(--ease--in--out--02s);color:var(--white-clr);&:hover{opacity:0.8;transform:scale(0.9);}}}.profile--media__credits{display:grid;grid-template-columns:repeat(2,1fr);align-items:center;justify-content:center;&--content{grid-column:1 / 3;}}@media screen and (min-width:768px){}\"]);\n\nconst PersonProfile = ({\n  person\n}) => {\n  console.log(person);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('movies');\n  const {\n    setModal\n  } = useContext(MovieContext);\n  const knonwFor = person.combined_credits.cast.sort((a, b) => b.vote_count - a.vote_count).slice(0, 8); // console.log(groupCrew(person.movie_credits.crew, 'department'));\n\n  console.log(groupCrew(person.tv_credits.cast, 'first_air_date'));\n\n  const creditsDiv = arry => Object.entries(arry).map(([key, value], index) => __jsx(\"div\", {\n    key: index,\n    className: \"grouped border border-black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, value.map(i => __jsx(\"div\", {\n    key: i.id + Math.random() * 10,\n    className: \"d-flex shadow-sm border border-light bg-light p-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"text-dark mr-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, i.date === '' ? '-' : i.date)), __jsx(\"span\", {\n    className: \"text-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    className: \"d-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, i.title || i.name), i.job ? `...${i.job}` : `as ${i.character}`)))));\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--person\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: `${IMG_URL}${person.profile_path}`,\n    alt: person.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"profile--biography\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"profile--biography__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, person.name), __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Biography\"), __jsx(\"p\", {\n    className: \"profile--biography__bio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, `${person.biography.slice(0, 500)}...`), __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => setModal(person.biography, 'person'),\n    className: \"read--more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(IoIosArrowDown, {\n    className: \"read--more__arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"profile--media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--media__knownFor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Known For\"), __jsx(SimpleFlex, {\n    className: \"knonwFor--content\",\n    setWidth: \"160px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, knonwFor.map(item => __jsx(RecommenCard, {\n    key: item.id,\n    data: item,\n    typeFor: item.media_type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    className: \"profile--media__credits\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Acting\"), __jsx(\"div\", {\n    className: \"tabs--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: `tab ${tab === 'movies' && 'activeTab'}`,\n    onClick: () => setTab('movies'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Movies\"), __jsx(\"button\", {\n    className: `tab ${tab === 'tv' && 'activeTab'}`,\n    onClick: () => setTab('tv'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Tv Shows\")), __jsx(\"div\", {\n    className: \"profile--media__credits--content table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, tab === 'movies' ? creditsDiv(groupCrew(person.movie_credits.cast, 'release_date')) : creditsDiv(groupCrew(person.tv_credits.cast, 'first_air_date'))))), __jsx(\"div\", {\n    className: \"profile--facts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Facts\"))));\n};\n\nPersonProfile.getInitialProps = async ctx => {\n  console.log(ctx.query, 'ID');\n  console.log(ctx);\n\n  try {\n    const person = await movieDB(`person/${ctx.query.id || '85'}`, 'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null');\n    return {\n      person: _objectSpread({\n        typeFor: 'person'\n      }, person)\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default PersonProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/person/[id].jsx"],"names":["useContext","useState","IMG_URL","movieDB","styled","Layout","IoIosArrowDown","MovieContext","SimpleFlex","RecommenCard","groupCrew","Styled","section","PersonProfile","person","console","log","tab","setTab","setModal","knonwFor","combined_credits","cast","sort","a","b","vote_count","slice","tv_credits","creditsDiv","arry","Object","entries","map","key","value","index","i","id","Math","random","date","title","name","job","character","profile_path","biography","item","media_type","movie_credits","getInitialProps","ctx","query","typeFor","error"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\nimport { IMG_URL } from '../../components/context/types';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../components/layout';\r\nimport { IoIosArrowDown } from 'react-icons/io';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport SimpleFlex from '../../components/ui/SimpleFlex';\r\nimport RecommenCard from '../../components/ui/Cards/RecommenCard';\r\nimport groupCrew from '../../components/utility/groupCrew';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 110px;\r\n  padding: 2em 1em;\r\n\r\n  .profile--person {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .profile--biography {\r\n    margin: 2em 0;\r\n    display: grid;\r\n    &__name {\r\n      font-weight: bold;\r\n      margin-bottom: 1em;\r\n      text-align: center;\r\n    }\r\n\r\n    .read--more {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 0 auto;\r\n      background-color: var(--primary-clr);\r\n      border-radius: 50%;\r\n      padding: 0.25em;\r\n      font-size: 1.7rem;\r\n      transition: var(--ease--in--out--02s);\r\n      color: var(--white-clr);\r\n\r\n      &:hover {\r\n        opacity: 0.8;\r\n        transform: scale(0.9);\r\n      }\r\n    }\r\n  }\r\n\r\n  .profile--media__credits {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &--content {\r\n      grid-column: 1 / 3;\r\n    }\r\n  }\r\n  /* .knonwFor--content {\r\n    .card--one {\r\n      width: 100%;\r\n      margin: 0 1em;\r\n    }\r\n  } */\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n`;\r\n\r\nconst PersonProfile = ({ person }) => {\r\n  console.log(person);\r\n  const [tab, setTab] = useState('movies');\r\n  const { setModal } = useContext(MovieContext);\r\n  const knonwFor = person.combined_credits.cast\r\n    .sort((a, b) => b.vote_count - a.vote_count)\r\n    .slice(0, 8);\r\n\r\n  // console.log(groupCrew(person.movie_credits.crew, 'department'));\r\n  console.log(groupCrew(person.tv_credits.cast, 'first_air_date'));\r\n\r\n  const creditsDiv = arry =>\r\n    Object.entries(arry).map(([key, value], index) => (\r\n      <div key={index} className='grouped border border-black'>\r\n        {value.map(i => (\r\n          <div\r\n            key={i.id + Math.random() * 10}\r\n            className='d-flex shadow-sm border border-light bg-light p-1'\r\n          >\r\n            <span className='text-dark mr-4'>\r\n              <strong>{i.date === '' ? '-' : i.date}</strong>\r\n            </span>\r\n            <span className='text-dark'>\r\n              <strong className='d-block'>{i.title || i.name}</strong>\r\n              {i.job ? `...${i.job}` : `as ${i.character}`}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile'>\r\n        <div className='profile--person'>\r\n          <img src={`${IMG_URL}${person.profile_path}`} alt={person.name} />\r\n        </div>\r\n        <div className='profile--biography'>\r\n          <h2 className='profile--biography__name'>{person.name}</h2>\r\n          <h3 className='subTitle'>Biography</h3>\r\n          <p className='profile--biography__bio'>{`${person.biography.slice(\r\n            0,\r\n            500\r\n          )}...`}</p>\r\n          <a\r\n            href='#'\r\n            onClick={() => setModal(person.biography, 'person')}\r\n            className='read--more'\r\n          >\r\n            <IoIosArrowDown className='read--more__arrow' />\r\n          </a>\r\n        </div>\r\n        <div className='profile--media'>\r\n          <div className='profile--media__knownFor'>\r\n            <h3 className='subTitle'>Known For</h3>\r\n            <SimpleFlex className='knonwFor--content' setWidth='160px'>\r\n              {knonwFor.map(item => (\r\n                <RecommenCard\r\n                  key={item.id}\r\n                  data={item}\r\n                  typeFor={item.media_type}\r\n                />\r\n              ))}\r\n            </SimpleFlex>\r\n          </div>\r\n          <div className='profile--media__credits'>\r\n            <h3 className='subTitle'>Acting</h3>\r\n            <div className='tabs--container'>\r\n              <button\r\n                className={`tab ${tab === 'movies' && 'activeTab'}`}\r\n                onClick={() => setTab('movies')}\r\n              >\r\n                Movies\r\n              </button>\r\n              <button\r\n                className={`tab ${tab === 'tv' && 'activeTab'}`}\r\n                onClick={() => setTab('tv')}\r\n              >\r\n                Tv Shows\r\n              </button>\r\n            </div>\r\n            <div className='profile--media__credits--content table'>\r\n              {tab === 'movies'\r\n                ? creditsDiv(\r\n                    groupCrew(person.movie_credits.cast, 'release_date')\r\n                  )\r\n                : creditsDiv(\r\n                    groupCrew(person.tv_credits.cast, 'first_air_date')\r\n                  )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='profile--facts'>\r\n          <h3 className='subTitle'>Facts</h3>\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPersonProfile.getInitialProps = async ctx => {\r\n  console.log(ctx.query, 'ID');\r\n  console.log(ctx);\r\n\r\n  try {\r\n    const person = await movieDB(\r\n      `person/${ctx.query.id || '85'}`,\r\n      'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      person: { typeFor: 'person', ...person }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default PersonProfile;\r\n"]},"metadata":{},"sourceType":"module"}