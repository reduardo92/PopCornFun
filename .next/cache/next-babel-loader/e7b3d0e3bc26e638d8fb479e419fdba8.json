{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\tv\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport { IMG_URL_OR } from '../../components/context/types';\nimport TopBilledCast from '../../components/ui/TopBilledCast';\nimport ReviewSection from '../../components/ui/ReviewSection';\nimport MediaSection from '../../components/ui/MediaSection';\nimport Layout from '../../components/layout';\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\nimport RecommenSection from '../../components/ui/RecommenSection';\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\nvar Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"sc-1qdj2gq-0\"\n})([\"background:var(--bg-gradient);margin-top:110px;.profile--backdrop{background:linear-gradient(rgba(0,0,0,0.2),rgba(0,0,0,0.2)),url(\", \") no-repeat center;background-color:black;min-height:400px;background-size:cover;background-position:top;object-fit:cover;position:relative;&__img{position:absolute;bottom:-20vw;left:20px;width:120px;}}.profile--header{position:relative;padding:2em 0.5em;max-width:750px;margin:0 auto;}@media screen and (min-width:768px){.profile--header{max-width:1100px;padding:2em 1em;}}\"], function (_ref) {\n  var bgImg = _ref.bgImg;\n  return \"\".concat(IMG_URL_OR).concat(bgImg);\n});\n\nvar TvProfile = function TvProfile(_ref2) {\n  var tv = _ref2.tv;\n  console.log(tv);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"profile\",\n    bgImg: tv.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(ProfileHeader, {\n    data: tv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(TopBilledCast, {\n    data: tv.credits.cast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(ReviewSection, {\n    data: tv.reviews.results,\n    movieId: tv.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(MediaSection, {\n    videos: tv.videos.results,\n    posters: tv.images.posters,\n    backdrops: tv.images.backdrops,\n    typeId: tv.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(RecommenSection, {\n    data: tv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(ProfileStats, {\n    data: tv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n};\n\nTvProfile.getInitialProps = function _callee(ctx) {\n  var tv;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(ctx.query, 'ID');\n          console.log(ctx);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(movieDB(\"tv/\".concat(ctx.query.id || '62688'), 'append_to_response=account_states,external_ids,keywords,content_ratings,videos,recommendations,reviews,credits,images&include_image_language=en,null'));\n\n        case 5:\n          tv = _context.sent;\n          return _context.abrupt(\"return\", {\n            tv: _objectSpread({\n              typeFor: 'tv'\n            }, tv)\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 9]]);\n};\n\nexport default TvProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/tv/[id].jsx"],"names":["styled","movieDB","IMG_URL_OR","TopBilledCast","ReviewSection","MediaSection","Layout","ProfileHeader","RecommenSection","ProfileStats","Styled","section","bgImg","TvProfile","tv","console","log","backdrop_path","credits","cast","reviews","results","id","videos","images","posters","backdrops","getInitialProps","ctx","query","typeFor"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport { IMG_URL_OR } from '../../components/context/types';\r\nimport TopBilledCast from '../../components/ui/TopBilledCast';\r\nimport ReviewSection from '../../components/ui/ReviewSection';\r\nimport MediaSection from '../../components/ui/MediaSection';\r\nimport Layout from '../../components/layout';\r\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\r\nimport RecommenSection from '../../components/ui/RecommenSection';\r\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 110px;\r\n\r\n  .profile--backdrop {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\r\n      url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`}) no-repeat center;\r\n    background-color: black;\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: top;\r\n    object-fit: cover;\r\n    position: relative;\r\n\r\n    &__img {\r\n      position: absolute;\r\n      bottom: -20vw;\r\n      left: 20px;\r\n      width: 120px;\r\n    }\r\n  }\r\n\r\n  .profile--header {\r\n    position: relative;\r\n    padding: 2em 0.5em;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--header {\r\n      max-width: 1100px;\r\n      padding: 2em 1em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TvProfile = ({ tv }) => {\r\n  console.log(tv);\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile' bgImg={tv.backdrop_path}>\r\n        <div className='profile--backdrop' />\r\n        <div className='profile--header'>\r\n          <ProfileHeader data={tv} />\r\n          <TopBilledCast data={tv.credits.cast} />\r\n          <ReviewSection data={tv.reviews.results} movieId={tv.id} />\r\n          <MediaSection\r\n            videos={tv.videos.results}\r\n            posters={tv.images.posters}\r\n            backdrops={tv.images.backdrops}\r\n            typeId={tv.id}\r\n          />\r\n          <RecommenSection data={tv} />\r\n        </div>\r\n        <ProfileStats data={tv} />\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nTvProfile.getInitialProps = async ctx => {\r\n  console.log(ctx.query, 'ID');\r\n  console.log(ctx);\r\n\r\n  try {\r\n    const tv = await movieDB(\r\n      `tv/${ctx.query.id || '62688'}`,\r\n      'append_to_response=account_states,external_ids,keywords,content_ratings,videos,recommendations,reviews,credits,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      tv: { typeFor: 'tv', ...tv }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default TvProfile;\r\n"]},"metadata":{},"sourceType":"module"}