{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\discover\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport movieDB from '../../components/utility/movieDB';\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\nimport { useContext } from 'react';\nimport MovieContext from '../../components/context/MovieContext';\n\nvar discover = function discover(_ref) {\n  var discover = _ref.discover;\n  console.log(discover);\n  return __jsx(MediaSection, {\n    mediaFor: discover,\n    forPage: \"disc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n};\n\ndiscover.getInitialProps = function _callee(_ref2) {\n  var query, _useContext, currentPage, page, sort_by, year, genres, keywords, _discover;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          _useContext = useContext(MovieContext), currentPage = _useContext.currentPage;\n          console.log('from contex', currentPage);\n          page = \"&page=\".concat(query.page ? query.page : 1);\n          sort_by = \"sort_by=\".concat(query.sort_by ? query.sort_by : 'popularity.desc');\n          year = \"&year=\".concat(query.year ? query.year : '');\n          genres = \"&with_genres=\".concat(query.genres ? query.genres : '');\n          keywords = \"&with_keywords=\".concat(query.keywords ? query.keywords : '');\n          _context.prev = 8;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(movieDB(\"discover/\".concat(query.query), \"\".concat(sort_by).concat(year).concat(genres).concat(keywords).concat(page)));\n\n        case 11:\n          _discover = _context.sent;\n          return _context.abrupt(\"return\", {\n            discover: _objectSpread({\n              typeFor: query.query,\n              title: query.query\n            }, _discover)\n          });\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](8);\n          console.log(_context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[8, 15]], Promise);\n};\n\nexport default discover;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/discover/index.jsx"],"names":["React","movieDB","MediaSection","useContext","MovieContext","discover","console","log","getInitialProps","query","currentPage","page","sort_by","year","genres","keywords","typeFor","title"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,QAAQ,GAAG,wBAAkB;AAAA,MAAfA,QAAe,QAAfA,QAAe;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAO,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,QAAxB;AAAkC,IAAA,OAAO,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAJD;;AAMAA,QAAQ,CAACG,eAAT,GAA2B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAAA,wBACDN,UAAU,CAACC,YAAD,CADT,EACjBM,WADiB,eACjBA,WADiB;AAGzBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,WAA3B;AACMC,UAAAA,IAJmB,mBAIHF,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACE,IAAnB,GAA0B,CAJvB;AAKnBC,UAAAA,OALmB,qBAMvBH,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAtB,GAAgC,iBANT;AAQnBC,UAAAA,IARmB,mBAQHJ,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACI,IAAnB,GAA0B,EARvB;AASnBC,UAAAA,MATmB,0BASML,KAAK,CAACK,MAAN,GAAeL,KAAK,CAACK,MAArB,GAA8B,EATpC;AAUnBC,UAAAA,QAVmB,4BAUUN,KAAK,CAACM,QAAN,GAAiBN,KAAK,CAACM,QAAvB,GAAkC,EAV5C;AAAA;AAAA;AAAA,2CAYAd,OAAO,oBAChBQ,KAAK,CAACA,KADU,aAEzBG,OAFyB,SAEfC,IAFe,SAERC,MAFQ,SAECC,QAFD,SAEYJ,IAFZ,EAZP;;AAAA;AAYjBN,UAAAA,SAZiB;AAAA,2CAgBhB;AACLA,YAAAA,QAAQ;AACNW,cAAAA,OAAO,EAAEP,KAAK,CAACA,KADT;AAENQ,cAAAA,KAAK,EAAER,KAAK,CAACA;AAFP,eAGHJ,SAHG;AADH,WAhBgB;;AAAA;AAAA;AAAA;AAwBvBC,UAAAA,OAAO,CAACC,GAAR;;AAxBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AA4BA,eAAeF,QAAf","sourcesContent":["import React from 'react';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\r\nimport { useContext } from 'react';\r\nimport MovieContext from '../../components/context/MovieContext';\r\n\r\nconst discover = ({ discover }) => {\r\n  console.log(discover);\r\n\r\n  return <MediaSection mediaFor={discover} forPage='disc' />;\r\n};\r\n\r\ndiscover.getInitialProps = async ({ query }) => {\r\n  const { currentPage } = useContext(MovieContext);\r\n\r\n  console.log('from contex', currentPage);\r\n  const page = `&page=${query.page ? query.page : 1}`;\r\n  const sort_by = `sort_by=${\r\n    query.sort_by ? query.sort_by : 'popularity.desc'\r\n  }`;\r\n  const year = `&year=${query.year ? query.year : ''}`;\r\n  const genres = `&with_genres=${query.genres ? query.genres : ''}`;\r\n  const keywords = `&with_keywords=${query.keywords ? query.keywords : ''}`;\r\n  try {\r\n    const discover = await movieDB(\r\n      `discover/${query.query}`,\r\n      `${sort_by}${year}${genres}${keywords}${page}`\r\n    );\r\n    return {\r\n      discover: {\r\n        typeFor: query.query,\r\n        title: query.query,\r\n        ...discover\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default discover;\r\n"]},"metadata":{},"sourceType":"module"}