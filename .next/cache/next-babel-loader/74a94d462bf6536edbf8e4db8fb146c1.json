{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default ((arry, sortBy, sortDate) => {\n  const sortDepart = arry.reduce((acc, obj) => {\n    let key = obj[sortBy];\n\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n\n    acc[key].push(obj);\n    return acc;\n  }, []);\n  const arr = Object.entries(sortDepart).map(([key, value]) => ({\n    [key]: groupByDate(value, sortDate)\n  }));\n  const arrLength = arr.length - 1;\n  let newData = {};\n\n  for (let i = 0; i < arrLength; i++) {\n    newData = _objectSpread({}, newData, {}, arr[i]);\n  }\n\n  return newData;\n});","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/utility/groupeCrew.js"],"names":["arry","sortBy","sortDate","sortDepart","reduce","acc","obj","key","push","arr","Object","entries","map","value","groupByDate","arrLength","length","newData","i"],"mappings":";;;;;;AAAA,gBAAe,CAACA,IAAD,EAAOC,MAAP,EAAeC,QAAf,KAA4B;AACzC,QAAMC,UAAU,GAAGH,IAAI,CAACI,MAAL,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3C,QAAIC,GAAG,GAAGD,GAAG,CAACL,MAAD,CAAb;;AACA,QAAI,CAACI,GAAG,CAACE,GAAD,CAAR,EAAe;AACbF,MAAAA,GAAG,CAACE,GAAD,CAAH,GAAW,EAAX;AACD;;AACDF,IAAAA,GAAG,CAACE,GAAD,CAAH,CAASC,IAAT,CAAcF,GAAd;AACA,WAAOD,GAAP;AACD,GAPkB,EAOhB,EAPgB,CAAnB;AASA,QAAMI,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAeR,UAAf,EAA2BS,GAA3B,CAA+B,CAAC,CAACL,GAAD,EAAMM,KAAN,CAAD,MAAmB;AAC5D,KAACN,GAAD,GAAOO,WAAW,CAACD,KAAD,EAAQX,QAAR;AAD0C,GAAnB,CAA/B,CAAZ;AAIA,QAAMa,SAAS,GAAGN,GAAG,CAACO,MAAJ,GAAa,CAA/B;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCD,IAAAA,OAAO,qBAAQA,OAAR,MAAoBR,GAAG,CAACS,CAAD,CAAvB,CAAP;AACD;;AAED,SAAOD,OAAP;AACD,CAtBD","sourcesContent":["export default (arry, sortBy, sortDate) => {\r\n  const sortDepart = arry.reduce((acc, obj) => {\r\n    let key = obj[sortBy];\r\n    if (!acc[key]) {\r\n      acc[key] = [];\r\n    }\r\n    acc[key].push(obj);\r\n    return acc;\r\n  }, []);\r\n\r\n  const arr = Object.entries(sortDepart).map(([key, value]) => ({\r\n    [key]: groupByDate(value, sortDate)\r\n  }));\r\n\r\n  const arrLength = arr.length - 1;\r\n  let newData = {};\r\n\r\n  for (let i = 0; i < arrLength; i++) {\r\n    newData = { ...newData, ...arr[i] };\r\n  }\r\n\r\n  return newData;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}