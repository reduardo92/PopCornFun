{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout';\nimport VideoHero from '../components/ui/VideoHero';\nimport PopularSection from '../components/ui/PopularSection';\nimport movieDB from '../components/utility/movieDB';\nimport SectionCarousel from '../components/ui/sectionCarousel/SectionCarousel';\nimport FeturedSection from '../components/ui/FeturedSection/FeturedSection';\nimport getFeturedMedia from '../components/utility/getFeturedMedia';\nimport { SET_HOME_DATA } from '../components/context/types';\nimport { useEffect } from 'react';\nimport MovieContext from '../components/context/MovieContext';\n\nvar IndexPage = function IndexPage(_ref) {\n  var movieNowPlay = _ref.movieNowPlay,\n      tvOnAir = _ref.tvOnAir,\n      movieAction = _ref.movieAction,\n      tvAnima = _ref.tvAnima,\n      feturedMovie = _ref.feturedMovie,\n      feturedTv = _ref.feturedTv,\n      people = _ref.people;\n\n  var _useContext = useContext(MovieContext),\n      setData = _useContext.setData,\n      homeData = _useContext.homeData;\n\n  useEffect(function () {\n    setData(SET_HOME_DATA, {\n      movieNowPlay: movieNowPlay,\n      tvOnAir: tvOnAir,\n      movieAction: movieAction,\n      tvAnima: tvAnima,\n      feturedMovie: feturedMovie,\n      feturedTv: feturedTv,\n      people: people\n    });\n  }, [movieNowPlay, tvOnAir, movieAction, tvAnima, feturedMovie, feturedTv, people]);\n  console.log(homeData);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(VideoHero, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: movieNowPlay,\n    typeFor: \"movie\",\n    title: __jsx(React.Fragment, null, \"in theaters \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \" now to enjoy\"),\n    subtitle: \"Most watched movies\",\n    toLink: \"/movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: people,\n    typeFor: \"person\",\n    title: \"Popular persons in film\",\n    toLink: \"/person\",\n    order: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(FeturedSection, {\n    data: feturedMovie,\n    typeFor: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: tvOnAir,\n    typeFor: \"tv\",\n    title: __jsx(React.Fragment, null, \"Popular TV \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"Series Right Now\"),\n    subtitle: \"Most watched tv\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: movieAction,\n    typeFor: \"movie\",\n    title: \"popular action movies\",\n    toLink: \"/movie\",\n    order: 'true',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(FeturedSection, {\n    data: feturedTv,\n    typeFor: \"tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: tvAnima,\n    typeFor: \"tv\",\n    title: \"animation to Enjoy\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nIndexPage.getInitialProps = function _callee() {\n  var tv, movie, movieAction, tvAnima, feturedMovie, feturedTv, people;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(movieDB('tv/on_the_air'));\n\n        case 3:\n          tv = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(movieDB('movie/now_playing'));\n\n        case 6:\n          movie = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(movieDB('discover/movie', 'with_genres=28&sort_by=vote_count.desc'));\n\n        case 9:\n          movieAction = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(movieDB('discover/tv', 'with_genres=16'));\n\n        case 12:\n          tvAnima = _context.sent;\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(getFeturedMedia('movie'));\n\n        case 15:\n          feturedMovie = _context.sent;\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(getFeturedMedia('tv'));\n\n        case 18:\n          feturedTv = _context.sent;\n          _context.next = 21;\n          return _regeneratorRuntime.awrap(movieDB('person/popular'));\n\n        case 21:\n          people = _context.sent;\n          return _context.abrupt(\"return\", {\n            movieNowPlay: movie.results.slice(0, 12),\n            tvOnAir: tv.results.slice(0, 12),\n            movieAction: movieAction.results.slice(0, 10),\n            tvAnima: tvAnima.results.slice(0, 10),\n            feturedMovie: feturedMovie,\n            feturedTv: feturedTv,\n            people: people.results.slice(0, 12)\n          });\n\n        case 25:\n          _context.prev = 25;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", {\n            movieNowPlay: null,\n            tvOnAir: null\n          });\n\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 25]]);\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/index.js"],"names":["Layout","VideoHero","PopularSection","movieDB","SectionCarousel","FeturedSection","getFeturedMedia","SET_HOME_DATA","useEffect","MovieContext","IndexPage","movieNowPlay","tvOnAir","movieAction","tvAnima","feturedMovie","feturedTv","people","useContext","setData","homeData","console","log","getInitialProps","tv","movie","results","slice"],"mappings":"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","sourcesContent":["import Layout from '../components/layout';\r\nimport VideoHero from '../components/ui/VideoHero';\r\nimport PopularSection from '../components/ui/PopularSection';\r\nimport movieDB from '../components/utility/movieDB';\r\nimport SectionCarousel from '../components/ui/sectionCarousel/SectionCarousel';\r\nimport FeturedSection from '../components/ui/FeturedSection/FeturedSection';\r\nimport getFeturedMedia from '../components/utility/getFeturedMedia';\r\nimport { SET_HOME_DATA } from '../components/context/types';\r\nimport { useEffect } from 'react';\r\nimport MovieContext from '../components/context/MovieContext';\r\n\r\nconst IndexPage = ({\r\n  movieNowPlay,\r\n  tvOnAir,\r\n  movieAction,\r\n  tvAnima,\r\n  feturedMovie,\r\n  feturedTv,\r\n  people\r\n}) => {\r\n  const { setData, homeData } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    setData(SET_HOME_DATA, {\r\n      movieNowPlay,\r\n      tvOnAir,\r\n      movieAction,\r\n      tvAnima,\r\n      feturedMovie,\r\n      feturedTv,\r\n      people\r\n    });\r\n  }, [\r\n    movieNowPlay,\r\n    tvOnAir,\r\n    movieAction,\r\n    tvAnima,\r\n    feturedMovie,\r\n    feturedTv,\r\n    people\r\n  ]);\r\n\r\n  console.log(homeData);\r\n\r\n  return (\r\n    <Layout>\r\n      <VideoHero />\r\n      <PopularSection\r\n        data={movieNowPlay}\r\n        typeFor='movie'\r\n        title={\r\n          <>\r\n            in theaters <br /> now to enjoy\r\n          </>\r\n        }\r\n        subtitle='Most watched movies'\r\n        toLink='/movie'\r\n      />\r\n      <SectionCarousel\r\n        data={people}\r\n        typeFor='person'\r\n        title='Popular persons in film'\r\n        toLink='/person'\r\n        order='true'\r\n      />\r\n      <FeturedSection data={feturedMovie} typeFor='movie' />\r\n      <PopularSection\r\n        data={tvOnAir}\r\n        typeFor='tv'\r\n        title={\r\n          <>\r\n            Popular TV <br />\r\n            Series Right Now\r\n          </>\r\n        }\r\n        subtitle='Most watched tv'\r\n        toLink='/tv'\r\n      />\r\n      <SectionCarousel\r\n        data={movieAction}\r\n        typeFor='movie'\r\n        title='popular action movies'\r\n        toLink='/movie'\r\n        order={'true'}\r\n      />\r\n      <FeturedSection data={feturedTv} typeFor='tv' />\r\n      <SectionCarousel\r\n        data={tvAnima}\r\n        typeFor='tv'\r\n        title='animation to Enjoy'\r\n        toLink='/tv'\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nIndexPage.getInitialProps = async () => {\r\n  try {\r\n    const tv = await movieDB('tv/on_the_air');\r\n    const movie = await movieDB('movie/now_playing');\r\n    const movieAction = await movieDB(\r\n      'discover/movie',\r\n      'with_genres=28&sort_by=vote_count.desc'\r\n    );\r\n    const tvAnima = await movieDB('discover/tv', 'with_genres=16');\r\n    const feturedMovie = await getFeturedMedia('movie');\r\n    const feturedTv = await getFeturedMedia('tv');\r\n    const people = await movieDB('person/popular');\r\n\r\n    return {\r\n      movieNowPlay: movie.results.slice(0, 12),\r\n      tvOnAir: tv.results.slice(0, 12),\r\n      movieAction: movieAction.results.slice(0, 10),\r\n      tvAnima: tvAnima.results.slice(0, 10),\r\n      feturedMovie,\r\n      feturedTv,\r\n      people: people.results.slice(0, 12)\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      movieNowPlay: null,\r\n      tvOnAir: null\r\n    };\r\n  }\r\n};\r\n\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}