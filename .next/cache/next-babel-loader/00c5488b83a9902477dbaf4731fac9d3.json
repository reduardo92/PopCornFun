{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\Cards\\\\PersonCard.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { IMG_URL } from '../../context/types';\nconst Styled = styled.div.withConfig({\n  displayName: \"PersonCard__Styled\",\n  componentId: \"sc-10zmgx9-0\"\n})([\"width:160px;display:grid;grid-template-rows:240px auto;.person--profile{.person--profile__link--img{transition:var(--ease--in--out--02s);}&:hover .person--profile__link--img{opacity:0.5;}}.name{font-weight:bold;transition:var(--ease--in--out--02s);&:hover,&:focus{color:var(--primary-clr);}}.job{display:block;}.know--for{font-size:0.7rem;margin-top:0.1em;&__item{margin-right:0.3em;transition:var(--ease--in--out--02s);&:hover,&:focus{color:var(--primary-clr);}}}@media screen and (min-width:768px){width:100%;max-width:300px;.person--body__title{display:flex;align-items:baseline;}.name{font-size:1.1rem;}.job{display:inline-block;margin-left:auto;font-size:0.9rem;}.know--for{font-size:0.8rem;}}@media screen and (min-width:1000px){.name{font-size:1.3rem;}.job{font-size:1rem;}.know--for{font-size:0.9rem;}}\"]);\n\nconst PersonCard = ({\n  data\n}) => __jsx(Styled, {\n  className: \"person--card\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"person--profile\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, __jsx(Link, {\n  href: `/person/[id]`,\n  as: `/person/${data.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"person--profile__link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, __jsx(\"img\", {\n  className: \"person--profile__link--img\",\n  src: data.profile_path ? `${IMG_URL}${data.profile_path}` : 'no_img.jpg',\n  alt: data.title || data.name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n})))), __jsx(\"div\", {\n  className: \"person--body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"person--body__title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, __jsx(Link, {\n  href: `/person/[id]`,\n  as: `/person/${data.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, data.name)), __jsx(\"small\", {\n  className: \"job\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, \"(\", data.known_for_department, \")\")), __jsx(\"div\", {\n  className: \"know--for\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, !data.known_for ? 'N/A' : data.known_for.map((item, i) => __jsx(Link, {\n  key: item.id,\n  href: `/${item.media_type}/[id]`,\n  as: `/${item.media_type}/${item.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"know--for__item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, item.name || item.title, data.known_for.length - 1 === i ? '' : ', '))))));\n\nexport default PersonCard;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/Cards/PersonCard.jsx"],"names":["React","styled","Link","IMG_URL","Styled","div","PersonCard","data","id","profile_path","title","name","known_for_department","known_for","map","item","i","media_type","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAEA,MAAMC,MAAM,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,kzBAAZ;;AAiFA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACjB,MAAC,MAAD;AAAQ,EAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAG,cAAb;AAA4B,EAAA,EAAE,EAAG,WAAUA,IAAI,CAACC,EAAG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,SAAS,EAAC,4BADZ;AAEE,EAAA,GAAG,EACDD,IAAI,CAACE,YAAL,GACK,GAAEN,OAAQ,GAAEI,IAAI,CAACE,YAAa,EADnC,GAEI,YALR;AAOE,EAAA,GAAG,EAAEF,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACI,IAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAgBE;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAG,cAAb;AAA4B,EAAA,EAAE,EAAG,WAAUJ,IAAI,CAACC,EAAG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBD,IAAI,CAACI,IAA1B,CADF,CADF,EAIE;AAAO,EAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAyBJ,IAAI,CAACK,oBAA9B,MAJF,CADF,EAOE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAACL,IAAI,CAACM,SAAN,GACG,KADH,GAEGN,IAAI,CAACM,SAAL,CAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KACjB,MAAC,IAAD;AACE,EAAA,GAAG,EAAED,IAAI,CAACP,EADZ;AAEE,EAAA,IAAI,EAAG,IAAGO,IAAI,CAACE,UAAW,OAF5B;AAGE,EAAA,EAAE,EAAG,IAAGF,IAAI,CAACE,UAAW,IAAGF,IAAI,CAACP,EAAG,EAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE;AAAG,EAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGO,IAAI,CAACJ,IAAL,IAAaI,IAAI,CAACL,KADrB,EAEGH,IAAI,CAACM,SAAL,CAAeK,MAAf,GAAwB,CAAxB,KAA8BF,CAA9B,GAAkC,EAAlC,GAAuC,IAF1C,CALF,CADF,CAHN,CAPF,CAhBF,CADF;;AA4CA,eAAeV,UAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport { IMG_URL } from '../../context/types';\r\n\r\nconst Styled = styled.div`\r\n  width: 160px;\r\n  display: grid;\r\n  grid-template-rows: 240px auto;\r\n\r\n  .person--profile {\r\n    .person--profile__link--img {\r\n      transition: var(--ease--in--out--02s);\r\n    }\r\n\r\n    &:hover .person--profile__link--img {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n\r\n  .name {\r\n    font-weight: bold;\r\n    transition: var(--ease--in--out--02s);\r\n\r\n    &:hover,\r\n    &:focus {\r\n      color: var(--primary-clr);\r\n    }\r\n  }\r\n\r\n  .job {\r\n    display: block;\r\n  }\r\n\r\n  .know--for {\r\n    font-size: 0.7rem;\r\n    margin-top: 0.1em;\r\n\r\n    &__item {\r\n      margin-right: 0.3em;\r\n      transition: var(--ease--in--out--02s);\r\n\r\n      &:hover,\r\n      &:focus {\r\n        color: var(--primary-clr);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 100%;\r\n    max-width: 300px;\r\n\r\n    .person--body__title {\r\n      display: flex;\r\n      align-items: baseline;\r\n    }\r\n\r\n    .name {\r\n      font-size: 1.1rem;\r\n    }\r\n    .job {\r\n      display: inline-block;\r\n      margin-left: auto;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .know--for {\r\n      font-size: 0.8rem;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    .name {\r\n      font-size: 1.3rem;\r\n    }\r\n    .job {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    .know--for {\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PersonCard = ({ data }) => (\r\n  <Styled className='person--card'>\r\n    <div className='person--profile'>\r\n      <Link href={`/person/[id]`} as={`/person/${data.id}`}>\r\n        <a className='person--profile__link'>\r\n          <img\r\n            className='person--profile__link--img'\r\n            src={\r\n              data.profile_path\r\n                ? `${IMG_URL}${data.profile_path}`\r\n                : 'no_img.jpg'\r\n            }\r\n            alt={data.title || data.name}\r\n          />\r\n        </a>\r\n      </Link>\r\n    </div>\r\n    <div className='person--body'>\r\n      <div className='person--body__title'>\r\n        <Link href={`/person/[id]`} as={`/person/${data.id}`}>\r\n          <a className='name'>{data.name}</a>\r\n        </Link>\r\n        <small className='job'>({data.known_for_department})</small>\r\n      </div>\r\n      <div className='know--for'>\r\n        {!data.known_for\r\n          ? 'N/A'\r\n          : data.known_for.map((item, i) => (\r\n              <Link\r\n                key={item.id}\r\n                href={`/${item.media_type}/[id]`}\r\n                as={`/${item.media_type}/${item.id}`}\r\n              >\r\n                <a className='know--for__item'>\r\n                  {item.name || item.title}\r\n                  {data.known_for.length - 1 === i ? '' : ', '}\r\n                </a>\r\n              </Link>\r\n            ))}\r\n      </div>\r\n    </div>\r\n  </Styled>\r\n);\r\n\r\nexport default PersonCard;\r\n"]},"metadata":{},"sourceType":"module"}