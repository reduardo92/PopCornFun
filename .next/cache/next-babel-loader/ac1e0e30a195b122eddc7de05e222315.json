{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport groupByDate from './groupByDate';\nexport default (function (arry, sortBy, sortDate) {\n  var sortDepart = arry.reduce(function (acc, obj) {\n    var key = obj[sortBy];\n\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n\n    acc[key].push(obj);\n    return acc;\n  }, []);\n\n  var arr = _Object$entries(sortDepart).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return _defineProperty({}, key, groupByDate(value, sortDate));\n  });\n\n  var arrLength = arr.length - 1;\n  var newData = {};\n\n  for (var i = 0; i < arrLength; i++) {\n    newData = _objectSpread({}, newData, {}, arr[i]);\n  }\n\n  return newData;\n});","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/utility/groupeCrew.js"],"names":["groupByDate","arry","sortBy","sortDate","sortDepart","reduce","acc","obj","key","push","arr","map","value","arrLength","length","newData","i"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,gBAAe,UAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAA4B;AACzC,MAAMC,UAAU,GAAGH,IAAI,CAACI,MAAL,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3C,QAAIC,GAAG,GAAGD,GAAG,CAACL,MAAD,CAAb;;AACA,QAAI,CAACI,GAAG,CAACE,GAAD,CAAR,EAAe;AACbF,MAAAA,GAAG,CAACE,GAAD,CAAH,GAAW,EAAX;AACD;;AACDF,IAAAA,GAAG,CAACE,GAAD,CAAH,CAASC,IAAT,CAAcF,GAAd;AACA,WAAOD,GAAP;AACD,GAPkB,EAOhB,EAPgB,CAAnB;;AASA,MAAMI,GAAG,GAAG,gBAAeN,UAAf,EAA2BO,GAA3B,CAA+B;AAAA;AAAA,QAAEH,GAAF;AAAA,QAAOI,KAAP;;AAAA,+BACxCJ,GADwC,EAClCR,WAAW,CAACY,KAAD,EAAQT,QAAR,CADuB;AAAA,GAA/B,CAAZ;;AAIA,MAAMU,SAAS,GAAGH,GAAG,CAACI,MAAJ,GAAa,CAA/B;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCD,IAAAA,OAAO,qBAAQA,OAAR,MAAoBL,GAAG,CAACM,CAAD,CAAvB,CAAP;AACD;;AAED,SAAOD,OAAP;AACD,CAtBD","sourcesContent":["import groupByDate from './groupByDate';\r\n\r\nexport default (arry, sortBy, sortDate) => {\r\n  const sortDepart = arry.reduce((acc, obj) => {\r\n    let key = obj[sortBy];\r\n    if (!acc[key]) {\r\n      acc[key] = [];\r\n    }\r\n    acc[key].push(obj);\r\n    return acc;\r\n  }, []);\r\n\r\n  const arr = Object.entries(sortDepart).map(([key, value]) => ({\r\n    [key]: groupByDate(value, sortDate)\r\n  }));\r\n\r\n  const arrLength = arr.length - 1;\r\n  let newData = {};\r\n\r\n  for (let i = 0; i < arrLength; i++) {\r\n    newData = { ...newData, ...arr[i] };\r\n  }\r\n\r\n  return newData;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}