{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport { IMG_URL_OR, SET_MEDIADATA, CLEAR_MEDIADATA } from '../../components/context/types';\nimport TopBilledCast from '../../components/ui/TopBilledCast';\nimport ReviewSection from '../../components/ui/ReviewSection';\nimport MediaSection from '../../components/ui/MediaSection';\nimport Layout from '../../components/layout';\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\nimport RecommenSection from '../../components/ui/RecommenSection';\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\nimport MovieContext from '../../components/context/MovieContext';\nvar Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"zlmctg-0\"\n})([\"background:var(--bg-gradient);margin-top:110px;.profile--backdrop{background:linear-gradient(rgba(0,0,0,0.2),rgba(0,0,0,0.2)),url(\", \") no-repeat center;background-color:black;min-height:400px;background-size:cover;background-position:top;object-fit:cover;position:relative;&__img{position:absolute;bottom:-20vw;left:20px;width:120px;}}.profile--header{position:relative;padding:2em 0.5em;max-width:750px;margin:0 auto;}@media screen and (min-width:768px){.profile--header{max-width:1100px;padding:2em 1em;}}\"], function (_ref) {\n  var bgImg = _ref.bgImg;\n  return \"\".concat(IMG_URL_OR).concat(bgImg);\n});\n\nvar MovieProfile = function MovieProfile(_ref2) {\n  var movie = _ref2.movie;\n\n  var _useContext = useContext(MovieContext),\n      setData = _useContext.setData,\n      clearData = _useContext.clearData,\n      mediaProfile = _useContext.mediaProfile;\n\n  useEffect(function () {\n    setData(SET_MEDIADATA, movie);\n    return function () {\n      clearData(CLEAR_MEDIADATA);\n    };\n  }, [movie]); // console.log('from mediaProfile', mediaProfile);\n\n  return mediaProfile && __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"profile\",\n    bgImg: mediaProfile.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(ProfileHeader, {\n    data: mediaProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(TopBilledCast, {\n    data: mediaProfile.credits.cast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(ReviewSection, {\n    data: mediaProfile.reviews.results,\n    movieId: mediaProfile.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(MediaSection, {\n    videos: mediaProfile.videos.results,\n    posters: mediaProfile.images.posters,\n    backdrops: mediaProfile.images.backdrops,\n    typeId: mediaProfile.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(RecommenSection, {\n    data: mediaProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), __jsx(ProfileStats, {\n    data: mediaProfile,\n    keywords: _Object$values(mediaProfile.keywords)[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n};\n\nMovieProfile.getInitialProps = function _callee(ctx) {\n  var movie;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(ctx.query, 'ID');\n          console.log(ctx);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(movieDB(\"movie/\".concat(ctx.query.id || '454626'), 'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null'));\n\n        case 5:\n          movie = _context.sent;\n          return _context.abrupt(\"return\", {\n            movie: _objectSpread({\n              typeFor: 'movie'\n            }, movie)\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 9]]);\n};\n\nexport default MovieProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/[id].jsx"],"names":["useEffect","useContext","styled","movieDB","IMG_URL_OR","SET_MEDIADATA","CLEAR_MEDIADATA","TopBilledCast","ReviewSection","MediaSection","Layout","ProfileHeader","RecommenSection","ProfileStats","MovieContext","Styled","section","bgImg","MovieProfile","movie","setData","clearData","mediaProfile","backdrop_path","credits","cast","reviews","results","id","videos","images","posters","backdrops","keywords","getInitialProps","ctx","console","log","query","typeFor"],"mappings":"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","sourcesContent":["import { useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport {\r\n  IMG_URL_OR,\r\n  SET_MEDIADATA,\r\n  CLEAR_MEDIADATA\r\n} from '../../components/context/types';\r\nimport TopBilledCast from '../../components/ui/TopBilledCast';\r\nimport ReviewSection from '../../components/ui/ReviewSection';\r\nimport MediaSection from '../../components/ui/MediaSection';\r\nimport Layout from '../../components/layout';\r\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\r\nimport RecommenSection from '../../components/ui/RecommenSection';\r\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\r\nimport MovieContext from '../../components/context/MovieContext';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 110px;\r\n\r\n  .profile--backdrop {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\r\n      url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`}) no-repeat center;\r\n    background-color: black;\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: top;\r\n    object-fit: cover;\r\n    position: relative;\r\n\r\n    &__img {\r\n      position: absolute;\r\n      bottom: -20vw;\r\n      left: 20px;\r\n      width: 120px;\r\n    }\r\n  }\r\n\r\n  .profile--header {\r\n    position: relative;\r\n    padding: 2em 0.5em;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--header {\r\n      max-width: 1100px;\r\n      padding: 2em 1em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MovieProfile = ({ movie }) => {\r\n  const { setData, clearData, mediaProfile } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    setData(SET_MEDIADATA, movie);\r\n    return () => {\r\n      clearData(CLEAR_MEDIADATA);\r\n    };\r\n  }, [movie]);\r\n\r\n  // console.log('from mediaProfile', mediaProfile);\r\n\r\n  return (\r\n    mediaProfile && (\r\n      <Layout>\r\n        <Styled className='profile' bgImg={mediaProfile.backdrop_path}>\r\n          <div className='profile--backdrop' />\r\n          <div className='profile--header'>\r\n            <ProfileHeader data={mediaProfile} />\r\n            <TopBilledCast data={mediaProfile.credits.cast} />\r\n            <ReviewSection\r\n              data={mediaProfile.reviews.results}\r\n              movieId={mediaProfile.id}\r\n            />\r\n            <MediaSection\r\n              videos={mediaProfile.videos.results}\r\n              posters={mediaProfile.images.posters}\r\n              backdrops={mediaProfile.images.backdrops}\r\n              typeId={mediaProfile.id}\r\n            />\r\n            <RecommenSection data={mediaProfile} />\r\n          </div>\r\n          <ProfileStats\r\n            data={mediaProfile}\r\n            keywords={Object.values(mediaProfile.keywords)[0]}\r\n          />\r\n        </Styled>\r\n      </Layout>\r\n    )\r\n  );\r\n};\r\n\r\nMovieProfile.getInitialProps = async ctx => {\r\n  console.log(ctx.query, 'ID');\r\n  console.log(ctx);\r\n\r\n  try {\r\n    const movie = await movieDB(\r\n      `movie/${ctx.query.id || '454626'}`,\r\n      'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      movie: { typeFor: 'movie', ...movie }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"]},"metadata":{},"sourceType":"module"}