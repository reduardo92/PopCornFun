{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\Cards\\\\CardOne.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { IMG_URL } from '../../context/types';\nimport { GoStar } from 'react-icons/go';\nimport setDateFormat from '../../utility/setDateFormat';\nconst Styled = styled.figure.withConfig({\n  displayName: \"CardOne__Styled\",\n  componentId: \"e0m3r6-0\"\n})([\"width:160px;border-radius:20px;.card--poster{position:relative;transition:var(--ease--in--out--02s);cursor:pointer;background-color:var(--grey-clr);height:240px;img{height:100%;object-fit:contain;}&::after{content:'View More';transition:var(--ease--in--out--02s);display:flex;justify-content:center;align-items:center;position:absolute;font-size:0.8rem;font-weight:bold;background-color:var(--primary-clr-rgba);height:0;width:100%;opacity:0;top:0;left:0;right:0;}&:hover::after,&:focus::after{opacity:1;height:100%;}}.card--body{&__info{color:\", \";display:flex;align-items:baseline;margin-top:0.5em;.info--top{font-size:0.9rem;}}&__title a{font-weight:bold;color:\", \";transition:var(--ease--in--out--02s);&:hover,&:focus{color:var(--primary-clr);}}}@media screen and (min-width:1280px){width:180px;.card--poster{height:270px;}}\"], ({\n  invert\n}) => invert ? 'var(--second-clr)' : 'var(--grey-clr)', ({\n  invert\n}) => invert && 'var(--second-clr)');\n\nconst CardOne = ({\n  data,\n  typeFor,\n  invert\n}) => __jsx(Styled, {\n  className: \"card--one\",\n  invert: invert,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, __jsx(Link, {\n  href: `/${typeFor}/[id]`,\n  as: `/${typeFor}/${data.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card--poster\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, __jsx(\"img\", {\n  className: \"poster__img\",\n  src: data.poster_path || data.profile_path ? `${IMG_URL}${data.poster_path || data.profile_path}` : 'no_img.jpg',\n  alt: data.title || data.name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}))), __jsx(\"div\", {\n  className: \"card--body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card--body__info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, __jsx(\"span\", {\n  className: \"info--top\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, data.release_date ? setDateFormat(data.release_date) : data.first_air_date ? setDateFormat(data.first_air_date) : data.known_for_department), (data.release_date || data.first_air_date) && __jsx(\"span\", {\n  className: \"rating--star\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, data.vote_average, __jsx(GoStar, {\n  className: \"star\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}))), __jsx(\"div\", {\n  className: \"card--body__title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, __jsx(Link, {\n  href: `/${typeFor}/[id]`,\n  as: `/${typeFor}/${data.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, data.title || data.name)))));\n\nexport default CardOne;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/Cards/CardOne.jsx"],"names":["React","styled","Link","IMG_URL","GoStar","setDateFormat","Styled","figure","invert","CardOne","data","typeFor","id","poster_path","profile_path","title","name","release_date","first_air_date","known_for_department","vote_average"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAV;AAAA;AAAA;AAAA,o0BA4CG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACPA,MAAM,GAAG,mBAAH,GAAyB,iBA7C3B,EAyDG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAgBA,MAAM,IAAI,mBAzD7B,CAAZ;;AA4EA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBH,EAAAA;AAAjB,CAAD,KACd,MAAC,MAAD;AAAQ,EAAA,SAAS,EAAC,WAAlB;AAA8B,EAAA,MAAM,EAAEA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAG,IAAGG,OAAQ,OAAxB;AAAgC,EAAA,EAAE,EAAG,IAAGA,OAAQ,IAAGD,IAAI,CAACE,EAAG,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,SAAS,EAAC,aADZ;AAEE,EAAA,GAAG,EACDF,IAAI,CAACG,WAAL,IAAoBH,IAAI,CAACI,YAAzB,GACK,GAAEX,OAAQ,GAAEO,IAAI,CAACG,WAAL,IAAoBH,IAAI,CAACI,YAAa,EADvD,GAEI,YALR;AAOE,EAAA,GAAG,EAAEJ,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACM,IAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAcE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGN,IAAI,CAACO,YAAL,GACGZ,aAAa,CAACK,IAAI,CAACO,YAAN,CADhB,GAEGP,IAAI,CAACQ,cAAL,GACAb,aAAa,CAACK,IAAI,CAACQ,cAAN,CADb,GAEAR,IAAI,CAACS,oBALX,CADF,EAQG,CAACT,IAAI,CAACO,YAAL,IAAqBP,IAAI,CAACQ,cAA3B,KACC;AAAM,EAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGR,IAAI,CAACU,YADR,EAEE,MAAC,MAAD;AAAQ,EAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CATJ,CADF,EAgBE;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAG,IAAGT,OAAQ,OAAxB;AAAgC,EAAA,EAAE,EAAG,IAAGA,OAAQ,IAAGD,IAAI,CAACE,EAAG,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACM,IAAvB,CADF,CADF,CAhBF,CAdF,CADF;;AAwCA,eAAeP,OAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport { IMG_URL } from '../../context/types';\r\nimport { GoStar } from 'react-icons/go';\r\nimport setDateFormat from '../../utility/setDateFormat';\r\n\r\nconst Styled = styled.figure`\r\n  width: 160px;\r\n  border-radius: 20px;\r\n\r\n  .card--poster {\r\n    position: relative;\r\n    transition: var(--ease--in--out--02s);\r\n    cursor: pointer;\r\n    background-color: var(--grey-clr);\r\n    height: 240px;\r\n\r\n    img {\r\n      height: 100%;\r\n      object-fit: contain;\r\n    }\r\n\r\n    &::after {\r\n      content: 'View More';\r\n      transition: var(--ease--in--out--02s);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      position: absolute;\r\n      font-size: 0.8rem;\r\n      font-weight: bold;\r\n      /* background-color: rgba(188, 49, 49, 0.85); */\r\n      background-color: var(--primary-clr-rgba);\r\n      height: 0;\r\n      width: 100%;\r\n      opacity: 0;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n\r\n    &:hover::after,\r\n    &:focus::after {\r\n      opacity: 1;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .card--body {\r\n    &__info {\r\n      color: ${({ invert }) =>\r\n        invert ? 'var(--second-clr)' : 'var(--grey-clr)'};\r\n      display: flex;\r\n      align-items: baseline;\r\n      margin-top: 0.5em;\r\n\r\n      .info--top {\r\n        font-size: 0.9rem;\r\n      }\r\n    }\r\n\r\n    &__title a {\r\n      font-weight: bold;\r\n      color: ${({ invert }) => invert && 'var(--second-clr)'};\r\n      transition: var(--ease--in--out--02s);\r\n\r\n      &:hover,\r\n      &:focus {\r\n        color: var(--primary-clr);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: 180px;\r\n\r\n    .card--poster {\r\n      height: 270px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardOne = ({ data, typeFor, invert }) => (\r\n  <Styled className='card--one' invert={invert}>\r\n    <Link href={`/${typeFor}/[id]`} as={`/${typeFor}/${data.id}`}>\r\n      <div className='card--poster'>\r\n        <img\r\n          className='poster__img'\r\n          src={\r\n            data.poster_path || data.profile_path\r\n              ? `${IMG_URL}${data.poster_path || data.profile_path}`\r\n              : 'no_img.jpg'\r\n          }\r\n          alt={data.title || data.name}\r\n        />\r\n      </div>\r\n    </Link>\r\n    <div className='card--body'>\r\n      <div className='card--body__info'>\r\n        <span className='info--top'>\r\n          {data.release_date\r\n            ? setDateFormat(data.release_date)\r\n            : data.first_air_date\r\n            ? setDateFormat(data.first_air_date)\r\n            : data.known_for_department}\r\n        </span>\r\n        {(data.release_date || data.first_air_date) && (\r\n          <span className='rating--star'>\r\n            {data.vote_average}\r\n            <GoStar className='star' />\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className='card--body__title'>\r\n        <Link href={`/${typeFor}/[id]`} as={`/${typeFor}/${data.id}`}>\r\n          <a>{data.title || data.name}</a>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  </Styled>\r\n);\r\n\r\nexport default CardOne;\r\n"]},"metadata":{},"sourceType":"module"}