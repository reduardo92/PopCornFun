{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default (async (typeFor, time = 'week') => {\n  const {\n    results\n  } = await movieDB(`trending/${typeFor}/${time}`);\n  const item = results[randomNum(results.length)].id;\n  const getvideos = await movieDB(`${typeFor}/${item.id}/videos`);\n  return _objectSpread({}, item, {\n    videos: getvideos.results[0]\n  });\n});","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/utility/getFeturedMedia.js"],"names":["typeFor","time","results","movieDB","item","randomNum","length","id","getvideos","videos"],"mappings":";;;;;;AAAA,gBAAe,OAAOA,OAAP,EAAgBC,IAAI,GAAG,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAc,MAAMC,OAAO,CAAE,YAAWH,OAAQ,IAAGC,IAAK,EAA7B,CAAjC;AACA,QAAMG,IAAI,GAAGF,OAAO,CAACG,SAAS,CAACH,OAAO,CAACI,MAAT,CAAV,CAAP,CAAmCC,EAAhD;AACA,QAAMC,SAAS,GAAG,MAAML,OAAO,CAAE,GAAEH,OAAQ,IAAGI,IAAI,CAACG,EAAG,SAAvB,CAA/B;AAEA,2BAAYH,IAAZ;AAAkBK,IAAAA,MAAM,EAAED,SAAS,CAACN,OAAV,CAAkB,CAAlB;AAA1B;AACD,CAND","sourcesContent":["export default async (typeFor, time = 'week') => {\r\n  const { results } = await movieDB(`trending/${typeFor}/${time}`);\r\n  const item = results[randomNum(results.length)].id;\r\n  const getvideos = await movieDB(`${typeFor}/${item.id}/videos`);\r\n\r\n  return { ...item, videos: getvideos.results[0] };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}