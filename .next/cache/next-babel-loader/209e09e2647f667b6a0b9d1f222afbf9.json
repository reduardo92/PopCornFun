{"ast":null,"code":"// import nextConnect from 'next-connect';\n// import middleware from '../../server/middleware/database';\nimport connectDB from '../../server/config/db'; // import Movies from '../../server/models/Movies';\n\nimport Meal from '../../server/models/Meal';\nexport default (async (req, res) => {\n  await connectDB();\n\n  if (req.method === 'POST') {\n    try {\n      const newMeal = new Meal({\n        calories: '1000',\n        fat: '80'\n      });\n      const meal = await newMeal.save();\n      res.json(meal);\n    } catch (err) {\n      console.error(err.message);\n      res.status(500).send('Server Error');\n    }\n  } // try {\n  //   const movies = await Meal.findById({ _id: '5e8776961c9d4400007e0128' });\n  //   res.json(movies);\n  // } catch (err) {\n  //   console.log(err.message);\n  //   res.status(500).send('Server Error');\n  // }\n\n}); // const user = nextConnect();\n// user.use(middleware);\n// console.log(user);\n// user.get(async (req, res) => {\n//   let doc = await req.db.collection('theaters').findOne();\n//   console.log(doc);\n//   res.json(doc);\n// });\n// export default user;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/api/user.js"],"names":["connectDB","Meal","req","res","method","newMeal","calories","fat","meal","save","json","err","console","error","message","status","send"],"mappings":"AAAA;AACA;AACA,OAAOA,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMH,SAAS,EAAf;;AACA,MAAIE,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACF,YAAMC,OAAO,GAAG,IAAIJ,IAAJ,CAAS;AACvBK,QAAAA,QAAQ,EAAE,MADa;AAEvBC,QAAAA,GAAG,EAAE;AAFkB,OAAT,CAAhB;AAKA,YAAMC,IAAI,GAAG,MAAMH,OAAO,CAACI,IAAR,EAAnB;AAEAN,MAAAA,GAAG,CAACO,IAAJ,CAASF,IAAT;AACD,KATD,CASE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACAX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,cAArB;AACD;AACF,GAhBgC,CAkBjC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAzBD,E,CA2BA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import nextConnect from 'next-connect';\r\n// import middleware from '../../server/middleware/database';\r\nimport connectDB from '../../server/config/db';\r\n// import Movies from '../../server/models/Movies';\r\nimport Meal from '../../server/models/Meal';\r\n\r\nexport default async (req, res) => {\r\n  await connectDB();\r\n  if (req.method === 'POST') {\r\n    try {\r\n      const newMeal = new Meal({\r\n        calories: '1000',\r\n        fat: '80'\r\n      });\r\n\r\n      const meal = await newMeal.save();\r\n\r\n      res.json(meal);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      res.status(500).send('Server Error');\r\n    }\r\n  }\r\n\r\n  // try {\r\n  //   const movies = await Meal.findById({ _id: '5e8776961c9d4400007e0128' });\r\n  //   res.json(movies);\r\n  // } catch (err) {\r\n  //   console.log(err.message);\r\n  //   res.status(500).send('Server Error');\r\n  // }\r\n};\r\n\r\n// const user = nextConnect();\r\n\r\n// user.use(middleware);\r\n\r\n// console.log(user);\r\n\r\n// user.get(async (req, res) => {\r\n//   let doc = await req.db.collection('theaters').findOne();\r\n//   console.log(doc);\r\n//   res.json(doc);\r\n// });\r\n\r\n// export default user;\r\n"]},"metadata":{},"sourceType":"module"}