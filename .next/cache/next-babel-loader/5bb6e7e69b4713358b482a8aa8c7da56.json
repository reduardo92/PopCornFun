{"ast":null,"code":"import axios from 'axios';\nimport Router from 'next/router';\nexport async function myGet(url, ctx) {\n  var _ctx$req;\n\n  const cookie = (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie;\n  const data = await axios(url, {\n    headers: {\n      cookie\n    }\n  });\n\n  if (data.status === 401 && !ctx.req) {\n    Router.replace('/login');\n    return {};\n  }\n\n  if (data.status === 401 && ctx.req) {\n    ctx.res.writeHead(302, {\n      Location: 'http://localhost:3000/login'\n    });\n    ctx.res.end();\n    return;\n  }\n\n  return data;\n} // export default token => {\n//   if (token) {\n//     axios.defaults.headers.common['x-auth-token'] = token;\n//   } else {\n//     delete axios.defaults.headers.common['x-auth-token'];\n//   }\n// };","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/utility/setAuthToken.js"],"names":["axios","Router","myGet","url","ctx","cookie","req","headers","data","status","replace","res","writeHead","Location","end"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AAAA;;AACpC,QAAMC,MAAM,eAAGD,GAAG,CAACE,GAAP,6CAAG,SAASC,OAAT,CAAiBF,MAAhC;AAEA,QAAMG,IAAI,GAAG,MAAMR,KAAK,CAACG,GAAD,EAAM;AAC5BI,IAAAA,OAAO,EAAE;AAAEF,MAAAA;AAAF;AADmB,GAAN,CAAxB;;AAIA,MAAIG,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuB,CAACL,GAAG,CAACE,GAAhC,EAAqC;AACnCL,IAAAA,MAAM,CAACS,OAAP,CAAe,QAAf;AACA,WAAO,EAAP;AACD;;AAED,MAAIF,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuBL,GAAG,CAACE,GAA/B,EAAoC;AAClCF,IAAAA,GAAG,CAACO,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AACrBC,MAAAA,QAAQ,EAAE;AADW,KAAvB;AAGAT,IAAAA,GAAG,CAACO,GAAJ,CAAQG,GAAR;AACA;AACD;;AAED,SAAON,IAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\nimport Router from 'next/router';\r\n\r\nexport async function myGet(url, ctx) {\r\n  const cookie = ctx.req?.headers.cookie;\r\n\r\n  const data = await axios(url, {\r\n    headers: { cookie },\r\n  });\r\n\r\n  if (data.status === 401 && !ctx.req) {\r\n    Router.replace('/login');\r\n    return {};\r\n  }\r\n\r\n  if (data.status === 401 && ctx.req) {\r\n    ctx.res.writeHead(302, {\r\n      Location: 'http://localhost:3000/login',\r\n    });\r\n    ctx.res.end();\r\n    return;\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// export default token => {\r\n//   if (token) {\r\n//     axios.defaults.headers.common['x-auth-token'] = token;\r\n//   } else {\r\n//     delete axios.defaults.headers.common['x-auth-token'];\r\n//   }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}