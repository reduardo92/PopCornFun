{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\person\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport movieDB from '../../components/utility/movieDB';\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\n\nconst person = ({\n  person\n}) => __jsx(MediaSection, {\n  mediaFor: person,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n});\n\nperson.getInitialProps = async ({\n  query\n}) => {\n  try {\n    const person = await movieDB(`person/popular`, `page=${query.page ? query.page : 1}`);\n    return {\n      person: _objectSpread({\n        typeFor: 'person',\n        title: 'popular'\n      }, person)\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default person;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/person/index.jsx"],"names":["React","movieDB","MediaSection","person","getInitialProps","query","page","typeFor","title","error","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAgB,MAAC,YAAD;AAAc,EAAA,QAAQ,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA/B;;AAEAA,MAAM,CAACC,eAAP,GAAyB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC5C,MAAI;AACF,UAAMF,MAAM,GAAG,MAAMF,OAAO,CACzB,gBADyB,EAEzB,QAAOI,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,CAAE,EAFV,CAA5B;AAIA,WAAO;AACLH,MAAAA,MAAM;AACJI,QAAAA,OAAO,EAAE,QADL;AAEJC,QAAAA,KAAK,EAAE;AAFH,SAGDL,MAHC;AADD,KAAP;AAOD,GAZD,CAYE,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAhBD;;AAkBA,eAAeN,MAAf","sourcesContent":["import React from 'react';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\r\n\r\nconst person = ({ person }) => <MediaSection mediaFor={person} />;\r\n\r\nperson.getInitialProps = async ({ query }) => {\r\n  try {\r\n    const person = await movieDB(\r\n      `person/popular`,\r\n      `page=${query.page ? query.page : 1}`\r\n    );\r\n    return {\r\n      person: {\r\n        typeFor: 'person',\r\n        title: 'popular',\r\n        ...person\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default person;\r\n"]},"metadata":{},"sourceType":"module"}