{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\Pagination.jsx\";\nvar __jsx = React.createElement;\n// import React, { useContext } from 'react';\n// import styled from 'styled-components';\n// import MovieContext from '../context/MovieContext';\n// import Link from 'next/link';\n// const Styled = styled.nav`\n//   .pagination {\n//     justify-content: center;\n//     flex-wrap: wrap;\n//   }\n//   .page-link {\n//     color: var(--primary-clr);\n//     font-weight: bold;\n//     /* font-family: var(--primary--fn); */\n//     border: 1px solid var(--primary--clr);\n//     cursor: pointer;\n//     &:hover,\n//     &:focus,\n//     &.active {\n//       background-color: var(--primary--clr);\n//     }\n//   }\n//   /* .pagination  */\n//   .page-item + .page-item {\n//     margin-left: 0.8em;\n//   }\n//   .page-item {\n//     padding: 0.5em 0;\n//   }\n// `;\n// const Pagination = ({ total_pages, typeFor }) => {\n//   const { itemPerPage, paginate, currentPage } = useContext(MovieContext);\n//   const pageNumbers = [];\n//     let prev = '';\n//     let next = '';\n//   for (let i = 1; i <= total_pages; i++) {\n//     pageNumbers.push(i);\n//     }\n//   return (\n//     <Styled className='pagination-nav'>\n//       <ul className='pagination'>\n//         {pageNumbers.length === 1\n//           ? ''\n//           : pageNumbers.map(number => (\n//               <li key={number} className='page-item'>\n//                 <Link href={typeFor + number}>\n//                   <div\n//                     onClick={() => paginate(number)}\n//                     className={`page-link ${\n//                       number === currentPage ? 'active' : ''\n//                     }`}\n//                   >\n//                     {number}\n//                   </div>\n//                 </Link>\n//               </li>\n//             ))}\n//       </ul>\n//     </Styled>\n//   );\n// };\n// export default Pagination;\n\n/* Pagination Component \r\n-------------------------------------------------*/\nimport React from 'react';\nvar propTypes = {\n  //   items: React.PropTypes.array.isRequired,\n  onChangePage: React.PropTypes.func.isRequired,\n  initialPage: React.PropTypes.number\n};\nvar defaultProps = {\n  initialPage: 1\n};\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n    _this.state = {\n      pager: {}\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // set page if items array isn't empty\n      if (this.props.items && this.props.items.length) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // reset page if items array has changed\n      if (this.props.items !== prevProps.items) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      var items = this.props.items;\n      var pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n        return;\n      } // get new pager object for specified page\n\n\n      pager = this.getPager(items.length, page); // get new page of items from items array\n\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n      this.setState({\n        pager: pager\n      }); // call change page function in parent component\n\n      this.props.onChangePage(pageOfItems);\n    }\n  }, {\n    key: \"getPager\",\n    value: function getPager(totalItems, currentPage, pageSize) {\n      // default to first page\n      currentPage = currentPage || 1; // default page size is 10\n\n      pageSize = pageSize || 10; // calculate total pages\n\n      var totalPages = Math.ceil(totalItems / pageSize);\n      var startPage, endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // more than 10 total pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      } // calculate start and end item indexes\n\n\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      var pages = _toConsumableArray(Array(endPage + 1 - startPage).keys()).map(function (i) {\n        return startPage + i;\n      }); // return object with all pager properties required by the view\n\n\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n        // don't display pager if there is only 1 page\n        return null;\n      }\n\n      return __jsx(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"First\")), __jsx(\"li\", {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.currentPage - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Previous\")), pager.pages.map(function (page, index) {\n        return __jsx(\"li\", {\n          key: index,\n          className: pager.currentPage === page ? 'active' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          onClick: function onClick() {\n            return _this2.setPage(page);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, page));\n      }), __jsx(\"li\", {\n        className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.currentPage + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Next\")), __jsx(\"li\", {\n        className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.totalPages);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Last\")));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nexport { Pagination as default };\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/Pagination.jsx"],"names":["React","propTypes","onChangePage","PropTypes","func","isRequired","initialPage","number","defaultProps","Pagination","props","state","pager","items","length","setPage","prevProps","prevState","page","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","pageSize","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","index","Component"],"mappings":"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","sourcesContent":["// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import MovieContext from '../context/MovieContext';\r\n// import Link from 'next/link';\r\n\r\n// const Styled = styled.nav`\r\n//   .pagination {\r\n//     justify-content: center;\r\n//     flex-wrap: wrap;\r\n//   }\r\n\r\n//   .page-link {\r\n//     color: var(--primary-clr);\r\n//     font-weight: bold;\r\n//     /* font-family: var(--primary--fn); */\r\n//     border: 1px solid var(--primary--clr);\r\n//     cursor: pointer;\r\n//     &:hover,\r\n//     &:focus,\r\n//     &.active {\r\n//       background-color: var(--primary--clr);\r\n//     }\r\n//   }\r\n\r\n//   /* .pagination  */\r\n\r\n//   .page-item + .page-item {\r\n//     margin-left: 0.8em;\r\n//   }\r\n\r\n//   .page-item {\r\n//     padding: 0.5em 0;\r\n//   }\r\n// `;\r\n\r\n// const Pagination = ({ total_pages, typeFor }) => {\r\n//   const { itemPerPage, paginate, currentPage } = useContext(MovieContext);\r\n\r\n//   const pageNumbers = [];\r\n\r\n//     let prev = '';\r\n\r\n//     let next = '';\r\n\r\n//   for (let i = 1; i <= total_pages; i++) {\r\n//     pageNumbers.push(i);\r\n//     }\r\n\r\n//   return (\r\n//     <Styled className='pagination-nav'>\r\n//       <ul className='pagination'>\r\n//         {pageNumbers.length === 1\r\n//           ? ''\r\n//           : pageNumbers.map(number => (\r\n//               <li key={number} className='page-item'>\r\n//                 <Link href={typeFor + number}>\r\n//                   <div\r\n//                     onClick={() => paginate(number)}\r\n//                     className={`page-link ${\r\n//                       number === currentPage ? 'active' : ''\r\n//                     }`}\r\n//                   >\r\n//                     {number}\r\n//                   </div>\r\n//                 </Link>\r\n//               </li>\r\n//             ))}\r\n//       </ul>\r\n//     </Styled>\r\n//   );\r\n// };\r\n\r\n// export default Pagination;\r\n\r\n/* Pagination Component \r\n-------------------------------------------------*/\r\nimport React from 'react';\r\n\r\nconst propTypes = {\r\n  //   items: React.PropTypes.array.isRequired,\r\n  onChangePage: React.PropTypes.func.isRequired,\r\n  initialPage: React.PropTypes.number\r\n};\r\n\r\nconst defaultProps = {\r\n  initialPage: 1\r\n};\r\n\r\nexport default class Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { pager: {} };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // set page if items array isn't empty\r\n    if (this.props.items && this.props.items.length) {\r\n      this.setPage(this.props.initialPage);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // reset page if items array has changed\r\n    if (this.props.items !== prevProps.items) {\r\n      this.setPage(this.props.initialPage);\r\n    }\r\n  }\r\n\r\n  setPage(page) {\r\n    var items = this.props.items;\r\n    var pager = this.state.pager;\r\n\r\n    if (page < 1 || page > pager.totalPages) {\r\n      return;\r\n    }\r\n\r\n    // get new pager object for specified page\r\n    pager = this.getPager(items.length, page);\r\n\r\n    // get new page of items from items array\r\n    var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n    // update state\r\n    this.setState({ pager: pager });\r\n\r\n    // call change page function in parent component\r\n    this.props.onChangePage(pageOfItems);\r\n  }\r\n\r\n  getPager(totalItems, currentPage, pageSize) {\r\n    // default to first page\r\n    currentPage = currentPage || 1;\r\n\r\n    // default page size is 10\r\n    pageSize = pageSize || 10;\r\n\r\n    // calculate total pages\r\n    var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n    var startPage, endPage;\r\n    if (totalPages <= 10) {\r\n      // less than 10 total pages so show all\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // more than 10 total pages so calculate start and end pages\r\n      if (currentPage <= 6) {\r\n        startPage = 1;\r\n        endPage = 10;\r\n      } else if (currentPage + 4 >= totalPages) {\r\n        startPage = totalPages - 9;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - 5;\r\n        endPage = currentPage + 4;\r\n      }\r\n    }\r\n\r\n    // calculate start and end item indexes\r\n    var startIndex = (currentPage - 1) * pageSize;\r\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages to ng-repeat in the pager control\r\n    var pages = [...Array(endPage + 1 - startPage).keys()].map(\r\n      i => startPage + i\r\n    );\r\n\r\n    // return object with all pager properties required by the view\r\n    return {\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      startIndex: startIndex,\r\n      endIndex: endIndex,\r\n      pages: pages\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var pager = this.state.pager;\r\n\r\n    if (!pager.pages || pager.pages.length <= 1) {\r\n      // don't display pager if there is only 1 page\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ul className='pagination'>\r\n        <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n          <a onClick={() => this.setPage(1)}>First</a>\r\n        </li>\r\n        <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n          <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\r\n        </li>\r\n        {pager.pages.map((page, index) => (\r\n          <li\r\n            key={index}\r\n            className={pager.currentPage === page ? 'active' : ''}\r\n          >\r\n            <a onClick={() => this.setPage(page)}>{page}</a>\r\n          </li>\r\n        ))}\r\n        <li\r\n          className={pager.currentPage === pager.totalPages ? 'disabled' : ''}\r\n        >\r\n          <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\r\n        </li>\r\n        <li\r\n          className={pager.currentPage === pager.totalPages ? 'disabled' : ''}\r\n        >\r\n          <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\n"]},"metadata":{},"sourceType":"module"}