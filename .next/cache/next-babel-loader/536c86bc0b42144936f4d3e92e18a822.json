{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB'; // import { IMG_URL_OR } from '../../components/context/types';\n\nimport TopBilledCast from '../../components/ui/TopBilledCast';\nimport ReviewSection from '../../components/ui/ReviewSection';\nimport MediaSection from '../../components/ui/MediaSection';\nimport Layout from '../../components/layout';\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\nimport RecommenSection from '../../components/ui/RecommenSection';\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\nimport MediaMainStyle from '../../components/ui/mediaProfile/mediaMainStyle';\n\nvar MovieProfile = function MovieProfile(_ref) {\n  var movie = _ref.movie;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(MediaMainStyle, {\n    className: \"profile\",\n    bgImg: movie.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(ProfileHeader, {\n    data: movie,\n    bgImg: movie.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"main-con px-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(TopBilledCast, {\n    data: movie.credits.cast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(ReviewSection, {\n    data: movie.reviews.results,\n    movieId: movie.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(MediaSection, {\n    videos: movie.videos.results,\n    posters: movie.images.posters,\n    backdrops: movie.images.backdrops,\n    typeId: movie.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), __jsx(RecommenSection, {\n    data: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), __jsx(ProfileStats, {\n    data: movie,\n    keywords: Object.values(movie.keywords)[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))));\n};\n\nMovieProfile.getInitialProps = function _callee(ctx) {\n  var movie;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(movieDB(\"movie/\".concat(ctx.query.id || '454626'), 'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null'));\n\n        case 3:\n          movie = _context.sent;\n          return _context.abrupt(\"return\", {\n            movie: _objectSpread({\n              typeFor: 'movie'\n            }, movie)\n          });\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nexport default MovieProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/[id].jsx"],"names":["movieDB","TopBilledCast","ReviewSection","MediaSection","Layout","ProfileHeader","RecommenSection","ProfileStats","MediaMainStyle","MovieProfile","movie","backdrop_path","credits","cast","reviews","results","id","videos","images","posters","backdrops","Object","values","keywords","getInitialProps","ctx","query","typeFor","console","log"],"mappings":";;;;;;;;;;AAAA;AACA,OAAOA,OAAP,MAAoB,kCAApB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,YAAP,MAAyB,4DAAzB;AACA,OAAOC,cAAP,MAA2B,iDAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAClC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,SAA1B;AAAoC,IAAA,KAAK,EAAEA,KAAK,CAACC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAED,KAArB;AAA4B,IAAA,KAAK,EAAEA,KAAK,CAACC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAED,KAAK,CAACE,OAAN,CAAcC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAEH,KAAK,CAACI,OAAN,CAAcC,OAAnC;AAA4C,IAAA,OAAO,EAAEL,KAAK,CAACM,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEN,KAAK,CAACO,MAAN,CAAaF,OADvB;AAEE,IAAA,OAAO,EAAEL,KAAK,CAACQ,MAAN,CAAaC,OAFxB;AAGE,IAAA,SAAS,EAAET,KAAK,CAACQ,MAAN,CAAaE,SAH1B;AAIE,IAAA,MAAM,EAAEV,KAAK,CAACM,EAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEN,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAFF,EAaE,MAAC,YAAD;AACE,IAAA,IAAI,EAAEA,KADR;AAEE,IAAA,QAAQ,EAAEW,MAAM,CAACC,MAAP,CAAcZ,KAAK,CAACa,QAApB,EAA8B,CAA9B,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAFF,CADF,CADF;AAyBD,CA1BD;;AA4BAd,YAAY,CAACe,eAAb,GAA+B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEPzB,OAAO,iBAChByB,GAAG,CAACC,KAAJ,CAAUV,EAAV,IAAgB,QADA,GAEzB,oJAFyB,CAFA;;AAAA;AAErBN,UAAAA,KAFqB;AAAA,2CAMpB;AACLA,YAAAA,KAAK;AAAIiB,cAAAA,OAAO,EAAE;AAAb,eAAyBjB,KAAzB;AADA,WANoB;;AAAA;AAAA;AAAA;AAU3BkB,UAAAA,OAAO,CAACC,GAAR;;AAV2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;;AAcA,eAAepB,YAAf","sourcesContent":["// import styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\n// import { IMG_URL_OR } from '../../components/context/types';\r\nimport TopBilledCast from '../../components/ui/TopBilledCast';\r\nimport ReviewSection from '../../components/ui/ReviewSection';\r\nimport MediaSection from '../../components/ui/MediaSection';\r\nimport Layout from '../../components/layout';\r\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\r\nimport RecommenSection from '../../components/ui/RecommenSection';\r\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\r\nimport MediaMainStyle from '../../components/ui/mediaProfile/mediaMainStyle';\r\n\r\nconst MovieProfile = ({ movie }) => {\r\n  return (\r\n    <Layout>\r\n      <MediaMainStyle className='profile' bgImg={movie.backdrop_path}>\r\n        <div className='profile--backdrop' />\r\n        <div className='profile--main'>\r\n          <ProfileHeader data={movie} bgImg={movie.backdrop_path} />\r\n          <div className='main-con px-2'>\r\n            <TopBilledCast data={movie.credits.cast} />\r\n            <ReviewSection data={movie.reviews.results} movieId={movie.id} />\r\n            <MediaSection\r\n              videos={movie.videos.results}\r\n              posters={movie.images.posters}\r\n              backdrops={movie.images.backdrops}\r\n              typeId={movie.id}\r\n            />\r\n            <RecommenSection data={movie} />\r\n          </div>\r\n          <ProfileStats\r\n            data={movie}\r\n            keywords={Object.values(movie.keywords)[0]}\r\n          />\r\n        </div>\r\n      </MediaMainStyle>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nMovieProfile.getInitialProps = async ctx => {\r\n  try {\r\n    const movie = await movieDB(\r\n      `movie/${ctx.query.id || '454626'}`,\r\n      'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      movie: { typeFor: 'movie', ...movie }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"]},"metadata":{},"sourceType":"module"}