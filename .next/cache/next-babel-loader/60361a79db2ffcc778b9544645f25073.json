{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport { IMG_URL_OR } from '../../components/context/types';\nimport CirclePercentage from '../../components/ui/CirclePercentage';\nimport TagGroup from '../../components/ui/TagGroup';\nimport Link from 'next/link';\nconst Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"zlmctg-0\"\n})([\"background-color:red;.profile--backdrop{background-image:url(\", \");min-height:400px;background-size:cover;background-position:center;}\"], ({\n  bgImg\n}) => `${IMG_URL_OR}${bgImg}`);\n\nconst MovieProfile = ({\n  movie,\n  typeFor\n}) => {\n  console.log('profile', movie);\n  let countedNames = movie.credits.crew.reduce(function (acc, obj, index) {\n    let key = obj.name;\n\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n\n    console.log('gsdgsaga', acc[key]);\n    acc[key].push(obj);\n    return acc;\n  }, {});\n  console.log(countedNames);\n  return __jsx(Styled, {\n    className: \"profile\",\n    bgImg: movie.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--header__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"\",\n    alt: \"\",\n    className: \"poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"profile--header__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, movie.title || movie.name), __jsx(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(CirclePercentage, {\n    value: movie.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(TagGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"release meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"2017\"), __jsx(\"span\", {\n    className: \"runtime meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"1h 02 mins\"), __jsx(\"span\", {\n    className: \"rating meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"R\"), __jsx(\"span\", {\n    className: \"genre meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Action,Drama,Sci-fi\")), __jsx(\"div\", {\n    className: \"overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, movie.overview), __jsx(\"div\", {\n    className: \"crew\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, movie.credits.crew.filter(item => item.department === 'Directing' || item.department === 'Writing' || item.department === 'Producer').map(c => __jsx(\"div\", {\n    key: c.id,\n    className: \"crew--person\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/person/[id]\",\n    as: `/person/${c.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, c.name), __jsx(\"small\", {\n    className: \"d-block mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, c.job)))))));\n};\n\nMovieProfile.getInitialProps = async ({\n  asPath\n}) => {\n  try {\n    const movie = await movieDB(asPath.slice(1), 'append_to_response=account_states,external_ids,images,keywords,release_dates,videos,recommendations,reviews,credits');\n    return {\n      movie\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default MovieProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/[id].jsx"],"names":["styled","movieDB","IMG_URL_OR","CirclePercentage","TagGroup","Link","Styled","section","bgImg","MovieProfile","movie","typeFor","console","log","countedNames","credits","crew","reduce","acc","obj","index","key","name","push","backdrop_path","title","vote_average","overview","filter","item","department","map","c","id","job","getInitialProps","asPath","slice","error"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport { IMG_URL_OR } from '../../components/context/types';\r\nimport CirclePercentage from '../../components/ui/CirclePercentage';\r\nimport TagGroup from '../../components/ui/TagGroup';\r\nimport Link from 'next/link';\r\n\r\nconst Styled = styled.section`\r\n  background-color: red;\r\n  .profile--backdrop {\r\n    background-image: url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`});\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: center;\r\n  }\r\n`;\r\n\r\nconst MovieProfile = ({ movie, typeFor }) => {\r\n  console.log('profile', movie);\r\n\r\n  let countedNames = movie.credits.crew.reduce(function(acc, obj, index) {\r\n    let key = obj.name;\r\n    if (!acc[key]) {\r\n      acc[key] = [];\r\n    }\r\n    console.log('gsdgsaga', acc[key]);\r\n    acc[key].push(obj);\r\n    return acc;\r\n  }, {});\r\n\r\n  console.log(countedNames);\r\n\r\n  return (\r\n    <Styled className='profile' bgImg={movie.backdrop_path}>\r\n      <div className='profile--backdrop' />\r\n      <div className='profile--header'>\r\n        <div className='profile--header__img'>\r\n          <img src='' alt='' className='poster' />\r\n        </div>\r\n        <div className='profile--header__content'>\r\n          <h2 className='title'>{movie.title || movie.name}</h2>\r\n          <div className='rating'>\r\n            <CirclePercentage value={movie.vote_average * 10} />\r\n            <TagGroup />\r\n          </div>\r\n          <div className='meta'>\r\n            <span className='release meta--tab'>2017</span>\r\n            <span className='runtime meta--tab'>1h 02 mins</span>\r\n            <span className='rating meta--tab'>R</span>\r\n            <span className='genre meta--tab'>Action,Drama,Sci-fi</span>\r\n          </div>\r\n          <div className='overview'>{movie.overview}</div>\r\n          <div className='crew'>\r\n            {movie.credits.crew\r\n              .filter(\r\n                item =>\r\n                  item.department === 'Directing' ||\r\n                  item.department === 'Writing' ||\r\n                  item.department === 'Producer'\r\n              )\r\n              .map(c => (\r\n                <div key={c.id} className='crew--person'>\r\n                  <Link href='/person/[id]' as={`/person/${c.id}`}>\r\n                    {c.name}\r\n                  </Link>\r\n                  <small className='d-block mt-1'>{c.job}</small>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nMovieProfile.getInitialProps = async ({ asPath }) => {\r\n  try {\r\n    const movie = await movieDB(\r\n      asPath.slice(1),\r\n      'append_to_response=account_states,external_ids,images,keywords,release_dates,videos,recommendations,reviews,credits'\r\n    );\r\n    return {\r\n      movie\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"]},"metadata":{},"sourceType":"module"}