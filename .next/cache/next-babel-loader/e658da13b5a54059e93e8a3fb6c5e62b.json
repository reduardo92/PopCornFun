{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\mediaProfile\\\\ProfileHeader.jsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport MovieContext from '../../context/MovieContext';\nimport { IMG_URL, IMG_URL_OR } from '../../context/types';\nimport groupCredits from '../../utility/groupCredits';\nimport timeConvert from '../../utility/timeConvert';\nimport CirclePercentage from '../CirclePercentage';\nimport TagGroup from '../TagGroup';\nimport PlayButton from '../PlayButton';\nimport Link from 'next/link';\nimport getRating from '../../utility/getRating';\nimport CrewTab from './CrewTab';\nconst Styled = styled.div.withConfig({\n  displayName: \"ProfileHeader__Styled\",\n  componentId: \"sc-1pa4id6-0\"\n})([\".inner--content{display:grid;grid-gap:1.7em;grid-auto-columns:auto;}.rating,.meta,.overview,.crew,.play--button{grid-column:1/ 3;}.rating{svg{margin-right:1em;}}.title{align-self:center;font-size:calc(0.5em + 3vw);}.profile--content__img{width:120px;margin-top:-8em;align-self:flex-end;}.year{opacity:0.6;font-weight:400;}.rating,.meta{display:flex;align-items:center;padding:0 0.5em;}.tag--group{border-left:1px solid #7b7b7b;padding-left:1.5em;}.meta{justify-content:space-between;font-size:0.85rem;align-items:stretch;&--tab{border-right:1px solid #7b7b7b;padding:0 2em;text-align:center;display:flex;align-items:center;justify-content:center;}&--tab:last-child{border:none;padding:0;padding-left:1em;flex-wrap:wrap;justify-content:space-evenly;}}.crew{display:grid;grid-template-columns:repeat(2,1fr);grid-gap:1em;font-weight:bold;.subTitle{grid-column:1 / 3;margin-bottom:-0.1em;}}.play--button{width:fit-content;}@media screen and (min-width:768px){.profile--header{max-width:1100px;padding:2em 1em;}.profile--content__img{width:160px;justify-self:center;}.rating{grid-column:1 /2;}.meta{grid-column:2 /3;}.overview,.crew{grid-column:1/ 3;}.play--button{flex-direction:row;font-size:1.1rem;&::before{width:auto;margin:auto;transform-origin:left;}svg{font-size:2rem;order:1;margin-left:5px;}&:hover svg,&:focus svg{margin-left:15px;margin-bottom:0;transform:scale(0.98);}}.CircularProgressbar{width:66px;}}@media screen and (min-width:1000px){background:linear-gradient(rgba(0,0,0,0.65),rgba(0,0,0,0.65)),url(\", \") no-repeat center;background-color:black;background-size:cover;background-position:top;object-fit:cover;position:relative;padding:8em 1em;.inner--content{max-width:1500px;margin:0 auto;grid-template-areas:'prImg title title' 'prImg rating play' 'prImg meta meta' 'prImg overV overV' 'prImg crew crew';grid-template-columns:500px 1fr 1.7fr;grid-gap:2em;}.profile--content__img{grid-area:prImg;width:100%;align-self:end;height:100%;justify-self:center;img{height:100%;object-fit:contain;}}.title{grid-area:title;font-size:3.5rem;margin-bottom:-0.3em;.year{font-size:smaller;}}.rating{grid-area:rating;}.meta{grid-area:meta;justify-self:start;align-self:center;&--tab{padding:1em 2em;}.genre--tab{margin:0 0.45em;}}.overview{grid-area:overV;&--para{max-width:90%;}}.crew{grid-area:crew;grid-template-columns:repeat(3,1fr);align-self:baseline;.subTitle{grid-column:1 / 4;}}.play--button{grid-area:play;align-self:center;}}\"], ({\n  bgImg\n}) => `${IMG_URL_OR}${bgImg}`);\n\nconst ProfileHeader = ({\n  data,\n  bgImg\n}) => {\n  const {\n    setModal\n  } = useContext(MovieContext);\n\n  const getGenres = () => data.genres.map((item, i) => __jsx(\"span\", {\n    className: \"genre--tab\",\n    key: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, item.name, data.genres.length - 1 === i ? '' : ', '));\n\n  const crew = __jsx(React.Fragment, null, data.created_by && data.created_by.map(item => __jsx(CrewTab, {\n    key: item.id,\n    crew: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  })), groupCredits(data.credits.crew).slice(0, 6).map(item => __jsx(CrewTab, {\n    key: item[0].id,\n    crew: item[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  })));\n\n  return __jsx(Styled, {\n    className: \"profile--content px-2\",\n    bgImg: bgImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"inner--content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--content__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"poster\",\n    src: `${IMG_URL}${data.poster_path || data.profile_path}`,\n    alt: data.title || data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, data.title || data.name, ' ', __jsx(\"span\", {\n    className: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"(\", data.release_date ? data.release_date.slice(0, 4) : data.first_air_date.slice(0, 4), \")\")), __jsx(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, __jsx(CirclePercentage, {\n    value: data.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }), __jsx(TagGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"release meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, data.release_date ? data.release_date.slice(0, 4) : data.first_air_date.slice(0, 4)), __jsx(\"span\", {\n    className: \"runtime meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, timeConvert(data.typeFor === 'movie' ? data.runtime : data.episode_run_time[0])), __jsx(\"span\", {\n    className: \"rating meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, data.release_date ? getRating(data.release_dates.results) : getRating(data.content_ratings.results)), __jsx(\"span\", {\n    className: \"genre meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, getGenres())), __jsx(\"div\", {\n    className: \"overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, \"OVERVIEW\"), __jsx(\"p\", {\n    className: \"overview--para\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, data.overview)), __jsx(\"div\", {\n    className: \"crew\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, \"Featured Crew\"), crew), __jsx(PlayButton, {\n    onclick: () => setModal(data.videos.results[0].key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  })));\n};\n\nexport default ProfileHeader;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/mediaProfile/ProfileHeader.jsx"],"names":["React","useContext","styled","MovieContext","IMG_URL","IMG_URL_OR","groupCredits","timeConvert","CirclePercentage","TagGroup","PlayButton","Link","getRating","CrewTab","Styled","div","bgImg","ProfileHeader","data","setModal","getGenres","genres","map","item","i","name","length","crew","created_by","id","credits","slice","poster_path","profile_path","title","release_date","first_air_date","vote_average","typeFor","runtime","episode_run_time","release_dates","results","content_ratings","overview","videos","key"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport { IMG_URL, IMG_URL_OR } from '../../context/types';\r\nimport groupCredits from '../../utility/groupCredits';\r\nimport timeConvert from '../../utility/timeConvert';\r\nimport CirclePercentage from '../CirclePercentage';\r\nimport TagGroup from '../TagGroup';\r\nimport PlayButton from '../PlayButton';\r\nimport Link from 'next/link';\r\nimport getRating from '../../utility/getRating';\r\nimport CrewTab from './CrewTab';\r\n\r\nconst Styled = styled.div`\r\n  .inner--content {\r\n    display: grid;\r\n    grid-gap: 1.7em;\r\n    grid-auto-columns: auto;\r\n  }\r\n\r\n  .rating,\r\n  .meta,\r\n  .overview,\r\n  .crew,\r\n  .play--button {\r\n    grid-column: 1/ 3;\r\n  }\r\n\r\n  .rating {\r\n    svg {\r\n      margin-right: 1em;\r\n    }\r\n  }\r\n\r\n  .title {\r\n    align-self: center;\r\n    font-size: calc(0.5em + 3vw);\r\n  }\r\n\r\n  /* profile--content__img */\r\n  .profile--content__img {\r\n    width: 120px;\r\n    margin-top: -8em;\r\n    align-self: flex-end;\r\n  }\r\n\r\n  .year {\r\n    opacity: 0.6;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .rating,\r\n  .meta {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 0.5em;\r\n  }\r\n\r\n  .tag--group {\r\n    border-left: 1px solid #7b7b7b;\r\n    padding-left: 1.5em;\r\n  }\r\n\r\n  /* /// */\r\n  .meta {\r\n    justify-content: space-between;\r\n    font-size: 0.85rem;\r\n    align-items: stretch;\r\n\r\n    &--tab {\r\n      border-right: 1px solid #7b7b7b;\r\n      padding: 0 2em;\r\n      text-align: center;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    &--tab:last-child {\r\n      border: none;\r\n      padding: 0;\r\n      padding-left: 1em;\r\n      flex-wrap: wrap;\r\n      justify-content: space-evenly;\r\n    }\r\n  }\r\n\r\n  .crew {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 1em;\r\n    font-weight: bold;\r\n\r\n    .subTitle {\r\n      grid-column: 1 / 3;\r\n      margin-bottom: -0.1em;\r\n    }\r\n  }\r\n\r\n  .play--button {\r\n    width: fit-content;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--header {\r\n      max-width: 1100px;\r\n      padding: 2em 1em;\r\n    }\r\n\r\n    .profile--content__img {\r\n      width: 160px;\r\n      justify-self: center;\r\n    }\r\n\r\n    .rating {\r\n      grid-column: 1 /2;\r\n    }\r\n\r\n    .meta {\r\n      grid-column: 2 /3;\r\n    }\r\n\r\n    .overview,\r\n    .crew {\r\n      grid-column: 1/ 3;\r\n    }\r\n\r\n    .play--button {\r\n      flex-direction: row;\r\n      font-size: 1.1rem;\r\n\r\n      &::before {\r\n        width: auto;\r\n        margin: auto;\r\n        transform-origin: left;\r\n      }\r\n\r\n      svg {\r\n        font-size: 2rem;\r\n        order: 1;\r\n        margin-left: 5px;\r\n      }\r\n\r\n      &:hover svg,\r\n      &:focus svg {\r\n        margin-left: 15px;\r\n        margin-bottom: 0;\r\n        transform: scale(0.98);\r\n      }\r\n    }\r\n\r\n    .CircularProgressbar {\r\n      width: 66px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.65), rgba(0, 0, 0, 0.65)),\r\n      url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`}) no-repeat center;\r\n    background-color: black;\r\n    /* min-height: 500px; */\r\n    background-size: cover;\r\n    background-position: top;\r\n    object-fit: cover;\r\n    position: relative;\r\n    padding: 8em 1em;\r\n\r\n    .inner--content {\r\n      max-width: 1500px;\r\n      margin: 0 auto;\r\n      grid-template-areas:\r\n        'prImg title title'\r\n        'prImg rating play'\r\n        'prImg meta meta'\r\n        'prImg overV overV'\r\n        'prImg crew crew';\r\n      grid-template-columns: 500px 1fr 1.7fr;\r\n      grid-gap: 2em;\r\n    }\r\n\r\n    .profile--content__img {\r\n      grid-area: prImg;\r\n      width: 100%;\r\n      align-self: end;\r\n      /* max-width: 450px; */\r\n      height: 100%;\r\n      justify-self: center;\r\n\r\n      img {\r\n        height: 100%;\r\n        object-fit: contain;\r\n      }\r\n    }\r\n    .title {\r\n      grid-area: title;\r\n      font-size: 3.5rem;\r\n      margin-bottom: -0.3em;\r\n      .year {\r\n        font-size: smaller;\r\n      }\r\n    }\r\n    .rating {\r\n      grid-area: rating;\r\n    }\r\n    .meta {\r\n      grid-area: meta;\r\n      justify-self: start;\r\n      align-self: center;\r\n\r\n      &--tab {\r\n        padding: 1em 2em;\r\n      }\r\n\r\n      .genre--tab {\r\n        margin: 0 0.45em;\r\n      }\r\n    }\r\n    .overview {\r\n      grid-area: overV;\r\n      &--para {\r\n        max-width: 90%;\r\n      }\r\n    }\r\n    .crew {\r\n      grid-area: crew;\r\n      grid-template-columns: repeat(3, 1fr);\r\n      align-self: baseline;\r\n\r\n      .subTitle {\r\n        grid-column: 1 / 4;\r\n      }\r\n    }\r\n    .play--button {\r\n      grid-area: play;\r\n      align-self: center;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProfileHeader = ({ data, bgImg }) => {\r\n  const { setModal } = useContext(MovieContext);\r\n\r\n  const getGenres = () =>\r\n    data.genres.map((item, i) => (\r\n      <span className='genre--tab' key={item.name}>\r\n        {item.name}\r\n        {data.genres.length - 1 === i ? '' : ', '}\r\n      </span>\r\n    ));\r\n\r\n  const crew = (\r\n    <>\r\n      {data.created_by &&\r\n        data.created_by.map(item => <CrewTab key={item.id} crew={item} />)}\r\n      {groupCredits(data.credits.crew)\r\n        .slice(0, 6)\r\n        .map(item => (\r\n          <CrewTab key={item[0].id} crew={item[0]} />\r\n        ))}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Styled className='profile--content px-2' bgImg={bgImg}>\r\n      <div className='inner--content'>\r\n        <div className='profile--content__img'>\r\n          <img\r\n            className='poster'\r\n            src={`${IMG_URL}${data.poster_path || data.profile_path}`}\r\n            alt={data.title || data.name}\r\n          />\r\n        </div>\r\n        <h2 className='title'>\r\n          {data.title || data.name}{' '}\r\n          <span className='year'>\r\n            (\r\n            {data.release_date\r\n              ? data.release_date.slice(0, 4)\r\n              : data.first_air_date.slice(0, 4)}\r\n            )\r\n          </span>\r\n        </h2>\r\n        <div className='rating'>\r\n          <CirclePercentage value={data.vote_average * 10} />\r\n          <TagGroup />\r\n        </div>\r\n        <div className='meta'>\r\n          <span className='release meta--tab'>\r\n            {data.release_date\r\n              ? data.release_date.slice(0, 4)\r\n              : data.first_air_date.slice(0, 4)}\r\n          </span>\r\n          <span className='runtime meta--tab'>\r\n            {timeConvert(\r\n              data.typeFor === 'movie' ? data.runtime : data.episode_run_time[0]\r\n            )}\r\n          </span>\r\n          <span className='rating meta--tab'>\r\n            {data.release_date\r\n              ? getRating(data.release_dates.results)\r\n              : getRating(data.content_ratings.results)}\r\n          </span>\r\n          <span className='genre meta--tab'>{getGenres()}</span>\r\n        </div>\r\n        <div className='overview'>\r\n          <h3 className='subTitle'>OVERVIEW</h3>\r\n          <p className='overview--para'>{data.overview}</p>\r\n        </div>\r\n        <div className='crew'>\r\n          <h3 className='subTitle'>Featured Crew</h3>\r\n          {crew}\r\n        </div>\r\n        <PlayButton onclick={() => setModal(data.videos.results[0].key)} />\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n"]},"metadata":{},"sourceType":"module"}