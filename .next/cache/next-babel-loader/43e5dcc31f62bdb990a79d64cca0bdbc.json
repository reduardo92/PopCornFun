{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\MediaSection.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport SimpleFlex from './SimpleFlex';\nimport MediaCard from './Cards/MediaCard';\nimport Link from 'next/link';\nimport MovieContext from '../context/MovieContext';\nconst Styled = styled.section.withConfig({\n  displayName: \"MediaSection__Styled\",\n  componentId: \"ubdtc5-0\"\n})([\"padding:2em 0.5em;.head--container{display:flex;justify-content:space-between;align-items:center;}.tabs--container{display:flex;flex-wrap:wrap;align-items:center;}.tab{color:var(--white-clr);border-bottom:3px solid transparent;text-transform:capitalize;font-weight:600;padding-bottom:5px;margin-right:1em;&:focus{outline:none;}}.activeTab{color:#ffffffc4;border-bottom:3px solid var(--primary-clr);}\"]);\n\nconst MediaSection = ({\n  videos,\n  posters,\n  backdrops,\n  typeId,\n  typeFor\n}) => {\n  const {\n    0: tab,\n    1: setTab\n  } = useState('videos');\n  const {\n    setData\n  } = useContext(MovieContext);\n  const media = {\n    videos,\n    posters,\n    backdrops\n  };\n  return __jsx(Styled, {\n    className: \"media--section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"head--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Media\"), __jsx(\"div\", {\n    className: \"tabs--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: `tab ${tab === 'videos' && 'activeTab'}`,\n    onClick: () => setTab('videos'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"videos\"), __jsx(\"button\", {\n    className: `tab ${tab === 'posters' && 'activeTab'}`,\n    onClick: () => setTab('posters'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"posters\"), __jsx(\"button\", {\n    className: `tab ${tab === 'backdrops' && 'activeTab'}`,\n    onClick: () => setTab('backdrops'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"backdrops\"))), __jsx(SimpleFlex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, media[tab].map(item => __jsx(MediaCard, {\n    key: item.id,\n    data: item,\n    typeFor: tab === 'videos' ? 'movie' : '',\n    SetMedia: () => setData(item.key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), __jsx(Link, {\n    href: \"/movie/[id]/media\",\n    as: `/movie/${typeId}/media`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"title redHover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"See All Media\")));\n};\n\nexport default MediaSection;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/MediaSection.jsx"],"names":["React","useState","useContext","styled","SimpleFlex","MediaCard","Link","MovieContext","Styled","section","MediaSection","videos","posters","backdrops","typeId","typeFor","tab","setTab","setData","media","map","item","id","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,MAAMC,MAAM,GAAGL,MAAM,CAACM,OAAV;AAAA;AAAA;AAAA,uZAAZ;;AAkCA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA;AAAtC,CAAD,KAAqD;AACxE,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBhB,QAAQ,CAAC,QAAD,CAA9B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAchB,UAAU,CAACK,YAAD,CAA9B;AAEA,QAAMY,KAAK,GAAG;AACZR,IAAAA,MADY;AAEZC,IAAAA,OAFY;AAGZC,IAAAA;AAHY,GAAd;AAKA,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,OAAMG,GAAG,KAAK,QAAR,IAAoB,WAAY,EADpD;AAEE,IAAA,OAAO,EAAE,MAAMC,MAAM,CAAC,QAAD,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOE;AACE,IAAA,SAAS,EAAG,OAAMD,GAAG,KAAK,SAAR,IAAqB,WAAY,EADrD;AAEE,IAAA,OAAO,EAAE,MAAMC,MAAM,CAAC,SAAD,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,EAaE;AACE,IAAA,SAAS,EAAG,OAAMD,GAAG,KAAK,WAAR,IAAuB,WAAY,EADvD;AAEE,IAAA,OAAO,EAAE,MAAMC,MAAM,CAAC,WAAD,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,CAFF,CADF,EAwBE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACH,GAAD,CAAL,CAAWI,GAAX,CAAeC,IAAI,IAClB,MAAC,SAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,OAAO,EAAEL,GAAG,KAAK,QAAR,GAAmB,OAAnB,GAA6B,EAHxC;AAIE,IAAA,QAAQ,EAAE,MAAME,OAAO,CAACG,IAAI,CAACE,GAAN,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAxBF,EAkCE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,mBAAX;AAA+B,IAAA,EAAE,EAAG,UAAST,MAAO,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAlCF,CADF;AAwCD,CAjDD;;AAmDA,eAAeJ,YAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport SimpleFlex from './SimpleFlex';\r\nimport MediaCard from './Cards/MediaCard';\r\nimport Link from 'next/link';\r\nimport MovieContext from '../context/MovieContext';\r\n\r\nconst Styled = styled.section`\r\n  padding: 2em 0.5em;\r\n\r\n  .head--container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .tabs--container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n  }\r\n\r\n  .tab {\r\n    color: var(--white-clr);\r\n    border-bottom: 3px solid transparent;\r\n    text-transform: capitalize;\r\n    font-weight: 600;\r\n    padding-bottom: 5px;\r\n    margin-right: 1em;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  .activeTab {\r\n    color: #ffffffc4;\r\n    border-bottom: 3px solid var(--primary-clr);\r\n  }\r\n`;\r\n\r\nconst MediaSection = ({ videos, posters, backdrops, typeId, typeFor }) => {\r\n  const [tab, setTab] = useState('videos');\r\n  const { setData } = useContext(MovieContext);\r\n\r\n  const media = {\r\n    videos,\r\n    posters,\r\n    backdrops\r\n  };\r\n  return (\r\n    <Styled className='media--section'>\r\n      <div className='head--container'>\r\n        <h3 className='subTitle'>Media</h3>\r\n        <div className='tabs--container'>\r\n          <button\r\n            className={`tab ${tab === 'videos' && 'activeTab'}`}\r\n            onClick={() => setTab('videos')}\r\n          >\r\n            videos\r\n          </button>\r\n          <button\r\n            className={`tab ${tab === 'posters' && 'activeTab'}`}\r\n            onClick={() => setTab('posters')}\r\n          >\r\n            posters\r\n          </button>\r\n          <button\r\n            className={`tab ${tab === 'backdrops' && 'activeTab'}`}\r\n            onClick={() => setTab('backdrops')}\r\n          >\r\n            backdrops\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <SimpleFlex>\r\n        {media[tab].map(item => (\r\n          <MediaCard\r\n            key={item.id}\r\n            data={item}\r\n            typeFor={tab === 'videos' ? 'movie' : ''}\r\n            SetMedia={() => setData(item.key)}\r\n          />\r\n        ))}\r\n      </SimpleFlex>\r\n      <Link href='/movie/[id]/media' as={`/movie/${typeId}/media`}>\r\n        <a className='title redHover'>See All Media</a>\r\n      </Link>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default MediaSection;\r\n"]},"metadata":{},"sourceType":"module"}