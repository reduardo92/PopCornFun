{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Layout from '../../components/layout';\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport CardTwo from '../../components/ui/Cards/CardTwo';\nimport { useContext } from 'react';\nimport MovieContext from '../../components/context/MovieContext';\nimport createPagination from '../../components/ui/Pagination/createPagination';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nconst Styled = styled.section.withConfig({\n  displayName: \"movie__Styled\",\n  componentId: \"sc-1781jcz-0\"\n})([\"background:var(--bg-dark-gradient);padding:150px 1em 5em 1em;.wrapper{max-width:1500px;margin:0 auto;.title{font-size:1.5rem;margin-bottom:1em;}}.content--container{display:grid;grid-gap:2em;margin-bottom:2em;}@media screen and (min-width:768px){.content--container{grid-row-gap:3.5em;grid-template-columns:repeat(2,1fr);}}\"]);\n\nconst movie = ({\n  movies\n}) => {\n  const {\n    paginate,\n    currentPage\n  } = useContext(MovieContext);\n  const {\n    0: pageOfItems,\n    1: setPageOfItems\n  } = useState([]);\n  useEffect(() => {\n    paginate(movies.page);\n  }, [movies.page]);\n  const pageNumber = [];\n\n  for (let i = 1; i <= movies.total_pages; i++) {\n    pageNumber.push(i);\n  }\n\n  const pp = createPagination();\n  console.log(pp);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"movie--section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, movies.title, \" Movies\"), __jsx(\"div\", {\n    className: \"content--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, movies.results.map(item => __jsx(CardTwo, {\n    key: item.id,\n    data: item,\n    typeFor: movies.typeFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))))));\n};\n\nmovie.getInitialProps = async ({\n  query\n}) => {\n  const queryLeng = Object.keys(query).length;\n\n  try {\n    const movies = await movieDB(`movie/${queryLeng === 0 ? 'popular' : query.query}`, `page=${query.page ? query.page : 1}`);\n    return {\n      movies: _objectSpread({\n        typeFor: 'movie',\n        title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' ')\n      }, movies)\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default movie;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/index.jsx"],"names":["React","Layout","styled","movieDB","CardTwo","useContext","MovieContext","createPagination","useEffect","useState","Styled","section","movie","movies","paginate","currentPage","pageOfItems","setPageOfItems","page","pageNumber","i","total_pages","push","pp","console","log","title","results","map","item","id","typeFor","getInitialProps","query","queryLeng","Object","keys","length","split","join","error"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Layout from '../../components/layout';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport CardTwo from '../../components/ui/Cards/CardTwo';\r\nimport { useContext } from 'react';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport createPagination from '../../components/ui/Pagination/createPagination';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  padding: 150px 1em 5em 1em;\r\n\r\n  .wrapper {\r\n    max-width: 1500px;\r\n    margin: 0 auto;\r\n\r\n    .title {\r\n      font-size: 1.5rem;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n\r\n  .content--container {\r\n    display: grid;\r\n    grid-gap: 2em;\r\n    margin-bottom: 2em;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .content--container {\r\n      grid-row-gap: 3.5em;\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nconst movie = ({ movies }) => {\r\n  const { paginate, currentPage } = useContext(MovieContext);\r\n  const [pageOfItems, setPageOfItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    paginate(movies.page);\r\n  }, [movies.page]);\r\n\r\n  const pageNumber = [];\r\n\r\n  for (let i = 1; i <= movies.total_pages; i++) {\r\n    pageNumber.push(i);\r\n  }\r\n\r\n  const pp = createPagination();\r\n\r\n  console.log(pp);\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='movie--section'>\r\n        <div className='wrapper'>\r\n          <h2 className='title'>{movies.title} Movies</h2>\r\n          <div className='content--container'>\r\n            {movies.results.map(item => (\r\n              <CardTwo key={item.id} data={item} typeFor={movies.typeFor} />\r\n            ))}\r\n          </div>\r\n          {/* <Pagination\r\n            total_pages={movies.total_pages}\r\n            typeFor={`/movie?query=${movies.title.split(' ').join('_')}&page=`}\r\n          /> */}\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nmovie.getInitialProps = async ({ query }) => {\r\n  const queryLeng = Object.keys(query).length;\r\n  try {\r\n    const movies = await movieDB(\r\n      `movie/${queryLeng === 0 ? 'popular' : query.query}`,\r\n      `page=${query.page ? query.page : 1}`\r\n    );\r\n    return {\r\n      movies: {\r\n        typeFor: 'movie',\r\n        title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' '),\r\n        ...movies\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default movie;\r\n"]},"metadata":{},"sourceType":"module"}