{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\mediaProfile\\\\ProfileHeader.jsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport MovieContext from '../../context/MovieContext';\nimport { IMG_URL } from '../../context/types';\nimport groupCredits from '../../utility/groupCredits';\nimport timeConvert from '../../utility/timeConvert';\nimport CirclePercentage from '../CirclePercentage';\nimport TagGroup from '../TagGroup';\nimport PlayButton from '../PlayButton';\nimport Link from 'next/link';\nvar Styled = styled.div.withConfig({\n  displayName: \"ProfileHeader__Styled\",\n  componentId: \"sc-1pa4id6-0\"\n})([\"display:grid;grid-gap:1.7em;grid-auto-columns:auto;.rating{svg{margin-right:calc(3vw + 0.5em);}}.head{display:grid;grid-template-columns:auto 1fr;grid-gap:1em;padding:0 1em 0.5em;.title{align-self:center;font-size:calc(0.5em + 3vw);}}.profile--content__img{width:120px;margin-top:-8em;align-self:flex-end;}.year{opacity:0.6;font-weight:400;}.rating,.meta{display:flex;align-items:center;padding:0 0.5em;}.tag--group{border-left:1px solid #7b7b7b;padding-left:1.5em;}.meta{justify-content:space-between;font-size:0.85rem;&--tab{border-right:1px solid #7b7b7b;padding-right:1em;text-align:center;}&--tab:last-child{border:none;}}.crew{display:grid;grid-template-columns:repeat(2,1fr);grid-gap:1em;font-weight:bold;}.play--button{width:fit-content;}@media screen and (min-width:768px){.profile--header{max-width:1100px;padding:2em 1em;}.head .profile--content__img{width:160px;}.rating{grid-column:1 /2;}.meta{grid-column:2 /3;}.head,.overview,.crew{grid-column:1/ 3;}.play--button{flex-direction:row;font-size:1.1rem;&::before{width:auto;margin:auto;transform-origin:left;}svg{font-size:2rem;order:1;margin-left:5px;}&:hover svg,&:focus svg{margin-left:15px;margin-bottom:0;transform:scale(0.98);}}.CircularProgressbar{width:66px;}}\"]);\n\nvar ProfileHeader = function ProfileHeader(_ref) {\n  var data = _ref.data;\n\n  var _useContext = useContext(MovieContext),\n      setModal = _useContext.setModal;\n\n  var getrating = function getrating() {\n    var ratee = data.release_dates.results.filter(function (item) {\n      return item.iso_3166_1 === 'US';\n    }).release_dates; //   const getratd = ratee.\n\n    return ratee;\n  };\n\n  console.log('from rating', getrating());\n  return __jsx(Styled, {\n    className: \"profile--content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--content__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"poster\",\n    src: \"\".concat(IMG_URL).concat(data.poster_path || data.profile_path),\n    alt: data.title || data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, data.title || data.name, ' ', __jsx(\"span\", {\n    className: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"(\", data.release_date.slice(0, 4), \")\"))), __jsx(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(CirclePercentage, {\n    value: data.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), __jsx(TagGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"release meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, data.release_date.slice(0, 4)), __jsx(\"span\", {\n    className: \"runtime meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, timeConvert(data.runtime)), __jsx(\"span\", {\n    className: \"rating meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"R\"), __jsx(\"span\", {\n    className: \"genre meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Action,Drama,Sci-fi\")), __jsx(\"div\", {\n    className: \"overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"OVERVIEW\"), __jsx(\"p\", {\n    className: \"overview--para\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, data.overview)), __jsx(\"div\", {\n    className: \"crew\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, groupCredits(data.credits.crew).map(function (c, i) {\n    return i < 6 && __jsx(\"div\", {\n      key: c[0].id,\n      className: \"crew--person\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/person/[id]\",\n      as: \"/person/\".concat(c[0].id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, c[0].name), __jsx(\"small\", {\n      className: \"d-block mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, c[0].department.join(', ')));\n  })), __jsx(PlayButton, {\n    onclick: function onclick() {\n      return setModal(data.videos.results[1].key);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }));\n};\n\nexport default ProfileHeader;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/mediaProfile/ProfileHeader.jsx"],"names":["React","useContext","styled","MovieContext","IMG_URL","groupCredits","timeConvert","CirclePercentage","TagGroup","PlayButton","Link","Styled","div","ProfileHeader","data","setModal","getrating","ratee","release_dates","results","filter","item","iso_3166_1","console","log","poster_path","profile_path","title","name","release_date","slice","vote_average","runtime","overview","credits","crew","map","c","i","id","department","join","videos","key"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport { IMG_URL } from '../../context/types';\r\nimport groupCredits from '../../utility/groupCredits';\r\nimport timeConvert from '../../utility/timeConvert';\r\nimport CirclePercentage from '../CirclePercentage';\r\nimport TagGroup from '../TagGroup';\r\nimport PlayButton from '../PlayButton';\r\nimport Link from 'next/link';\r\n\r\nconst Styled = styled.div`\r\n  display: grid;\r\n  grid-gap: 1.7em;\r\n  grid-auto-columns: auto;\r\n\r\n  .rating {\r\n    svg {\r\n      margin-right: calc(3vw + 0.5em);\r\n    }\r\n  }\r\n\r\n  .head {\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    grid-gap: 1em;\r\n    padding: 0 1em 0.5em;\r\n\r\n    .title {\r\n      align-self: center;\r\n      font-size: calc(0.5em + 3vw);\r\n    }\r\n  }\r\n\r\n  /* profile--content__img */\r\n  .profile--content__img {\r\n    width: 120px;\r\n    margin-top: -8em;\r\n    align-self: flex-end;\r\n  }\r\n\r\n  .year {\r\n    opacity: 0.6;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .rating,\r\n  .meta {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 0.5em;\r\n  }\r\n\r\n  .tag--group {\r\n    border-left: 1px solid #7b7b7b;\r\n    padding-left: 1.5em;\r\n  }\r\n\r\n  /* /// */\r\n  .meta {\r\n    justify-content: space-between;\r\n    font-size: 0.85rem;\r\n\r\n    &--tab {\r\n      border-right: 1px solid #7b7b7b;\r\n      padding-right: 1em;\r\n      text-align: center;\r\n    }\r\n    &--tab:last-child {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  .crew {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 1em;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .play--button {\r\n    width: fit-content;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--header {\r\n      max-width: 1100px;\r\n      padding: 2em 1em;\r\n    }\r\n\r\n    .head .profile--content__img {\r\n      width: 160px;\r\n    }\r\n\r\n    .rating {\r\n      grid-column: 1 /2;\r\n    }\r\n\r\n    .meta {\r\n      grid-column: 2 /3;\r\n    }\r\n\r\n    .head,\r\n    .overview,\r\n    .crew {\r\n      grid-column: 1/ 3;\r\n    }\r\n\r\n    .play--button {\r\n      flex-direction: row;\r\n      font-size: 1.1rem;\r\n\r\n      &::before {\r\n        width: auto;\r\n        margin: auto;\r\n        transform-origin: left;\r\n      }\r\n\r\n      svg {\r\n        font-size: 2rem;\r\n        order: 1;\r\n        margin-left: 5px;\r\n      }\r\n\r\n      &:hover svg,\r\n      &:focus svg {\r\n        margin-left: 15px;\r\n        margin-bottom: 0;\r\n        transform: scale(0.98);\r\n      }\r\n    }\r\n\r\n    .CircularProgressbar {\r\n      width: 66px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProfileHeader = ({ data }) => {\r\n  const { setModal } = useContext(MovieContext);\r\n\r\n  const getrating = () => {\r\n    const ratee = data.release_dates.results.filter(\r\n      item => item.iso_3166_1 === 'US'\r\n    ).release_dates;\r\n    //   const getratd = ratee.\r\n\r\n    return ratee;\r\n  };\r\n\r\n  console.log('from rating', getrating());\r\n\r\n  return (\r\n    <Styled className='profile--content'>\r\n      <div className='head'>\r\n        <div className='profile--content__img'>\r\n          <img\r\n            className='poster'\r\n            src={`${IMG_URL}${data.poster_path || data.profile_path}`}\r\n            alt={data.title || data.name}\r\n          />\r\n        </div>\r\n        <h2 className='title'>\r\n          {data.title || data.name}{' '}\r\n          <span className='year'>({data.release_date.slice(0, 4)})</span>\r\n        </h2>\r\n      </div>\r\n      <div className='rating'>\r\n        <CirclePercentage value={data.vote_average * 10} />\r\n        <TagGroup />\r\n      </div>\r\n      <div className='meta'>\r\n        <span className='release meta--tab'>\r\n          {data.release_date.slice(0, 4)}\r\n        </span>\r\n        <span className='runtime meta--tab'>{timeConvert(data.runtime)}</span>\r\n        <span className='rating meta--tab'>R</span>\r\n        <span className='genre meta--tab'>Action,Drama,Sci-fi</span>\r\n      </div>\r\n      <div className='overview'>\r\n        <h3 className='subTitle'>OVERVIEW</h3>\r\n        <p className='overview--para'>{data.overview}</p>\r\n      </div>\r\n      <div className='crew'>\r\n        {groupCredits(data.credits.crew).map(\r\n          (c, i) =>\r\n            i < 6 && (\r\n              <div key={c[0].id} className='crew--person'>\r\n                <Link href='/person/[id]' as={`/person/${c[0].id}`}>\r\n                  {c[0].name}\r\n                </Link>\r\n                <small className='d-block mt-1'>\r\n                  {c[0].department.join(', ')}\r\n                </small>\r\n              </div>\r\n            )\r\n        )}\r\n      </div>\r\n      <PlayButton onclick={() => setModal(data.videos.results[1].key)} />\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n"]},"metadata":{},"sourceType":"module"}