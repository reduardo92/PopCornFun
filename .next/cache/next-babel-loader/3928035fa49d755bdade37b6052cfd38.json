{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport { IMG_URL_OR } from '../../components/context/types';\nimport CirclePercentage from '../../components/ui/CirclePercentage';\nimport TagGroup from '../../components/ui/TagGroup';\nimport Link from 'next/link';\nvar Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"zlmctg-0\"\n})([\"background-color:red;.profile--backdrop{background-image:url(\", \");min-height:400px;background-size:cover;background-position:center;}\"], function (_ref) {\n  var bgImg = _ref.bgImg;\n  return \"\".concat(IMG_URL_OR).concat(bgImg);\n});\n\nvar MovieProfile = function MovieProfile(_ref2) {\n  var movie = _ref2.movie,\n      typeFor = _ref2.typeFor;\n  console.log('profile', movie);\n  var countedNames = movie.credits.crew.reduce(function (acc, obj, index) {\n    var key = obj.name;\n\n    if (!acc) {\n      acc[key] = {\n        credit_id: obj.credits,\n        department: obj.department,\n        gender: obj.gender,\n        id: obj.id,\n        job: [].concat(_toConsumableArray(obj.job), [obj.job]),\n        name: obj.name,\n        profile_path: obj.profile_path\n      };\n    }\n\n    acc[key] = _objectSpread({}, obj, {\n      job: obj.job\n    });\n    console.table('yes', acc, obj.id, obj.department);\n    return acc;\n  }, {}); //   const newoo = Object.values(countedNames)[11];\n  //     const nee = newoo.reduce((acc, obj) => {\n  //         const key = obj.id;\n  //         if (!acc) {\n  //             acc[key] = [];\n  //           }\n  //           acc[key].push(obj);\n  //           return acc;\n  //   });\n\n  console.log(countedNames);\n  return __jsx(Styled, {\n    className: \"profile\",\n    bgImg: movie.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--header__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"\",\n    alt: \"\",\n    className: \"poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"profile--header__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, movie.title || movie.name), __jsx(\"div\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(CirclePercentage, {\n    value: movie.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(TagGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"release meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"2017\"), __jsx(\"span\", {\n    className: \"runtime meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"1h 02 mins\"), __jsx(\"span\", {\n    className: \"rating meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"R\"), __jsx(\"span\", {\n    className: \"genre meta--tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Action,Drama,Sci-fi\")), __jsx(\"div\", {\n    className: \"overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, movie.overview), __jsx(\"div\", {\n    className: \"crew\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, movie.credits.crew.filter(function (item) {\n    return item.department === 'Directing' || item.department === 'Writing' || item.department === 'Producer';\n  }).map(function (c) {\n    return __jsx(\"div\", {\n      key: c.id,\n      className: \"crew--person\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/person/[id]\",\n      as: \"/person/\".concat(c.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, c.name), __jsx(\"small\", {\n      className: \"d-block mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, c.job));\n  })))));\n};\n\nMovieProfile.getInitialProps = function _callee(_ref3) {\n  var asPath, movie;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          asPath = _ref3.asPath;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(movieDB(asPath.slice(1), 'append_to_response=account_states,external_ids,images,keywords,release_dates,videos,recommendations,reviews,credits'));\n\n        case 4:\n          movie = _context.sent;\n          return _context.abrupt(\"return\", {\n            movie: movie\n          });\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]]);\n};\n\nexport default MovieProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/[id].jsx"],"names":["styled","movieDB","IMG_URL_OR","CirclePercentage","TagGroup","Link","Styled","section","bgImg","MovieProfile","movie","typeFor","console","log","countedNames","credits","crew","reduce","acc","obj","index","key","name","credit_id","department","gender","id","job","profile_path","table","backdrop_path","title","vote_average","overview","filter","item","map","c","getInitialProps","asPath","slice"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport { IMG_URL_OR } from '../../components/context/types';\r\nimport CirclePercentage from '../../components/ui/CirclePercentage';\r\nimport TagGroup from '../../components/ui/TagGroup';\r\nimport Link from 'next/link';\r\n\r\nconst Styled = styled.section`\r\n  background-color: red;\r\n  .profile--backdrop {\r\n    background-image: url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`});\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: center;\r\n  }\r\n`;\r\n\r\nconst MovieProfile = ({ movie, typeFor }) => {\r\n  console.log('profile', movie);\r\n\r\n  let countedNames = movie.credits.crew.reduce(function(acc, obj, index) {\r\n    let key = obj.name;\r\n    if (!acc) {\r\n      acc[key] = {\r\n        credit_id: obj.credits,\r\n        department: obj.department,\r\n        gender: obj.gender,\r\n        id: obj.id,\r\n        job: [...obj.job, obj.job],\r\n        name: obj.name,\r\n        profile_path: obj.profile_path\r\n      };\r\n    }\r\n    acc[key] = { ...obj, job: obj.job };\r\n    console.table('yes', acc, obj.id, obj.department);\r\n    return acc;\r\n  }, {});\r\n\r\n  //   const newoo = Object.values(countedNames)[11];\r\n  //     const nee = newoo.reduce((acc, obj) => {\r\n  //         const key = obj.id;\r\n  //         if (!acc) {\r\n  //             acc[key] = [];\r\n  //           }\r\n  //           acc[key].push(obj);\r\n  //           return acc;\r\n  //   });\r\n  console.log(countedNames);\r\n\r\n  return (\r\n    <Styled className='profile' bgImg={movie.backdrop_path}>\r\n      <div className='profile--backdrop' />\r\n      <div className='profile--header'>\r\n        <div className='profile--header__img'>\r\n          <img src='' alt='' className='poster' />\r\n        </div>\r\n        <div className='profile--header__content'>\r\n          <h2 className='title'>{movie.title || movie.name}</h2>\r\n          <div className='rating'>\r\n            <CirclePercentage value={movie.vote_average * 10} />\r\n            <TagGroup />\r\n          </div>\r\n          <div className='meta'>\r\n            <span className='release meta--tab'>2017</span>\r\n            <span className='runtime meta--tab'>1h 02 mins</span>\r\n            <span className='rating meta--tab'>R</span>\r\n            <span className='genre meta--tab'>Action,Drama,Sci-fi</span>\r\n          </div>\r\n          <div className='overview'>{movie.overview}</div>\r\n          <div className='crew'>\r\n            {movie.credits.crew\r\n              .filter(\r\n                item =>\r\n                  item.department === 'Directing' ||\r\n                  item.department === 'Writing' ||\r\n                  item.department === 'Producer'\r\n              )\r\n              .map(c => (\r\n                <div key={c.id} className='crew--person'>\r\n                  <Link href='/person/[id]' as={`/person/${c.id}`}>\r\n                    {c.name}\r\n                  </Link>\r\n                  <small className='d-block mt-1'>{c.job}</small>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nMovieProfile.getInitialProps = async ({ asPath }) => {\r\n  try {\r\n    const movie = await movieDB(\r\n      asPath.slice(1),\r\n      'append_to_response=account_states,external_ids,images,keywords,release_dates,videos,recommendations,reviews,credits'\r\n    );\r\n    return {\r\n      movie\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"]},"metadata":{},"sourceType":"module"}