{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\components\\\\ui\\\\mediaProfile\\\\MediaSection.jsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport MovieContext from '../../context/MovieContext';\nimport styled from 'styled-components';\nimport Layout from '../../layout';\nimport Pagination from '../Pagination/Pagination';\nimport CardTwo from '../Cards/CardTwo';\nimport PersonCard from '../Cards/PersonCard';\nimport Link from 'next/link';\nimport DiscoverForm from '../Forms/DiscoverFrom';\nconst Styled = styled.section.withConfig({\n  displayName: \"MediaSection__Styled\",\n  componentId: \"sc-1m2ky1s-0\"\n})([\"background:var(--bg-dark-gradient);padding:150px 1em 5em 1em;.wrapper{max-width:1500px;margin:0 auto;.title{font-size:1.5rem;margin-bottom:1em;}}.content--container{display:grid;grid-gap:2em;margin:3em 0;justify-items:center;}.person--grid{display:grid;grid-template-columns:repeat(2,1fr);justify-items:center;grid-gap:1em;grid-row-gap:2em;margin:3em 0;}.head--tabs{display:flex;&__tab{font-size:1.25rem;font-weight:bold;border-bottom:2px solid transparent;transition:var(--ease-12s);color:var(--white-clr);&:hover{opacity:0.5;border-bottom-color:var(--primary-clr);}&:first-child{margin-right:1em;}}.disabled{border-bottom-color:var(--primary-clr);pointer-events:none;}}@media screen and (min-width:768px){.content--container{grid-row-gap:3.5em;grid-template-columns:repeat(2,1fr);}.person--grid{grid-template-columns:repeat(3,1fr);}}@media screen and (min-width:1000px){.person--grid{grid-template-columns:repeat(4,1fr);}}\"]);\n\nconst MediaSection = ({\n  mediaFor,\n  forPage\n}) => {\n  const {\n    paginate,\n    currentPage\n  } = useContext(MovieContext);\n  useEffect(() => {\n    paginate(mediaFor.page);\n  }, [mediaFor.page]);\n\n  const setLink = () => {\n    const mediaLink = `/${mediaFor.typeFor}?query=${mediaFor.title.split(' ').join('_')}&page=`;\n    const discLink = `/discover?query=${mediaFor.typeFor}&page=`;\n    return forPage === 'disc' ? discLink : mediaLink;\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"MediaSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: `head`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, forPage ? 'Discover New Movies & TV Shows' : __jsx(React.Fragment, null, mediaFor.title, '  ', mediaFor.typeFor === 'tv' ? 'TV' : mediaFor.typeFor)), forPage && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"head--tabs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/discover?query=movie&page=1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: `head--tabs__tab ${mediaFor.title === 'movie' && 'disabled'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, ' ', \"Movies\")), __jsx(Link, {\n    href: \"/discover?query=tv&page=1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: `head--tabs__tab ${mediaFor.title === 'tv' && 'disabled'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Tv Shows\"))), __jsx(DiscoverForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), __jsx(Pagination, {\n    numberOfArticles: mediaFor.total_pages,\n    typeFor: setLink(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: mediaFor.typeFor === 'person' ? 'person--grid' : 'content--container',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, mediaFor.results.map(item => mediaFor.typeFor === 'person' ? __jsx(PersonCard, {\n    key: item.id,\n    data: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }) : __jsx(CardTwo, {\n    key: item.id,\n    data: item,\n    typeFor: mediaFor.typeFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))), __jsx(Pagination, {\n    numberOfArticles: mediaFor.total_pages,\n    typeFor: setLink(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))));\n};\n\nexport default MediaSection;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/components/ui/mediaProfile/MediaSection.jsx"],"names":["React","useContext","useEffect","MovieContext","styled","Layout","Pagination","CardTwo","PersonCard","Link","DiscoverForm","Styled","section","MediaSection","mediaFor","forPage","paginate","currentPage","page","setLink","mediaLink","typeFor","title","split","join","discLink","total_pages","results","map","item","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,OAAV;AAAA;AAAA;AAAA,o6BAAZ;;AAyEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC9C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BhB,UAAU,CAACE,YAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACF,QAAQ,CAACI,IAAV,CAAR;AACD,GAFQ,EAEN,CAACJ,QAAQ,CAACI,IAAV,CAFM,CAAT;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAI,IAAGN,QAAQ,CAACO,OAAQ,UAASP,QAAQ,CAACQ,KAAT,CAC7CC,KAD6C,CACvC,GADuC,EAE7CC,IAF6C,CAExC,GAFwC,CAEnC,QAFb;AAIA,UAAMC,QAAQ,GAAI,mBAAkBX,QAAQ,CAACO,OAAQ,QAArD;AAEA,WAAON,OAAO,KAAK,MAAZ,GAAqBU,QAArB,GAAgCL,SAAvC;AACD,GARD;;AAUA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,GACN,gCADM,GAGN,4BACGD,QAAQ,CAACQ,KADZ,EAEG,IAFH,EAGGR,QAAQ,CAACO,OAAT,KAAqB,IAArB,GAA4B,IAA5B,GAAmCP,QAAQ,CAACO,OAH/C,CAJJ,CADF,EAYGN,OAAO,IACN,4BACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,8BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,mBAAkBD,QAAQ,CAACQ,KAAT,KAC5B,OAD4B,IACjB,UAAW,EAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,GAJH,WADF,CADF,EAUE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,mBAAkBR,QAAQ,CAACQ,KAAT,KAAmB,IAAnB,IAC5B,UAAW,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAVF,CADF,EAoBE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CAbJ,CADF,EAuCE,MAAC,UAAD;AACE,IAAA,gBAAgB,EAAER,QAAQ,CAACY,WAD7B;AAEE,IAAA,OAAO,EAAEP,OAAO,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,EA2CE;AACE,IAAA,SAAS,EACPL,QAAQ,CAACO,OAAT,KAAqB,QAArB,GACI,cADJ,GAEI,oBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGP,QAAQ,CAACa,OAAT,CAAiBC,GAAjB,CAAqBC,IAAI,IACxBf,QAAQ,CAACO,OAAT,KAAqB,QAArB,GACE,MAAC,UAAD;AAAY,IAAA,GAAG,EAAEQ,IAAI,CAACC,EAAtB;AAA0B,IAAA,IAAI,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGE,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAnB;AAAuB,IAAA,IAAI,EAAED,IAA7B;AAAmC,IAAA,OAAO,EAAEf,QAAQ,CAACO,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,CAPH,CA3CF,EA0DE,MAAC,UAAD;AACE,IAAA,gBAAgB,EAAEP,QAAQ,CAACY,WAD7B;AAEE,IAAA,OAAO,EAAEP,OAAO,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DF,CADF,CADF,CADF;AAqED,CAtFD;;AAwFA,eAAeN,YAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../layout';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport CardTwo from '../Cards/CardTwo';\r\nimport PersonCard from '../Cards/PersonCard';\r\nimport Link from 'next/link';\r\nimport DiscoverForm from '../Forms/DiscoverFrom';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  padding: 150px 1em 5em 1em;\r\n\r\n  .wrapper {\r\n    max-width: 1500px;\r\n    margin: 0 auto;\r\n\r\n    .title {\r\n      font-size: 1.5rem;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n\r\n  .content--container {\r\n    display: grid;\r\n    grid-gap: 2em;\r\n    margin: 3em 0;\r\n    justify-items: center;\r\n  }\r\n\r\n  .person--grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    justify-items: center;\r\n    grid-gap: 1em;\r\n    grid-row-gap: 2em;\r\n    margin: 3em 0;\r\n  }\r\n\r\n  /* Set Styles for When Discover Page is Active */\r\n  .head--tabs {\r\n    display: flex;\r\n    &__tab {\r\n      font-size: 1.25rem;\r\n      font-weight: bold;\r\n      border-bottom: 2px solid transparent;\r\n      transition: var(--ease-12s);\r\n      color: var(--white-clr);\r\n\r\n      &:hover {\r\n        opacity: 0.5;\r\n        border-bottom-color: var(--primary-clr);\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1em;\r\n      }\r\n    }\r\n    .disabled {\r\n      border-bottom-color: var(--primary-clr);\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .content--container {\r\n      grid-row-gap: 3.5em;\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    .person--grid {\r\n      grid-template-columns: repeat(3, 1fr);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    .person--grid {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nconst MediaSection = ({ mediaFor, forPage }) => {\r\n  const { paginate, currentPage } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    paginate(mediaFor.page);\r\n  }, [mediaFor.page]);\r\n\r\n  const setLink = () => {\r\n    const mediaLink = `/${mediaFor.typeFor}?query=${mediaFor.title\r\n      .split(' ')\r\n      .join('_')}&page=`;\r\n\r\n    const discLink = `/discover?query=${mediaFor.typeFor}&page=`;\r\n\r\n    return forPage === 'disc' ? discLink : mediaLink;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='MediaSection'>\r\n        <div className='wrapper'>\r\n          <div className={`head`}>\r\n            <h2 className='title'>\r\n              {forPage ? (\r\n                'Discover New Movies & TV Shows'\r\n              ) : (\r\n                <>\r\n                  {mediaFor.title}\r\n                  {'  '}\r\n                  {mediaFor.typeFor === 'tv' ? 'TV' : mediaFor.typeFor}\r\n                </>\r\n              )}\r\n            </h2>\r\n            {forPage && (\r\n              <>\r\n                <div className='head--tabs'>\r\n                  <Link href='/discover?query=movie&page=1'>\r\n                    <a\r\n                      className={`head--tabs__tab ${mediaFor.title ===\r\n                        'movie' && 'disabled'}`}\r\n                    >\r\n                      {' '}\r\n                      Movies\r\n                    </a>\r\n                  </Link>\r\n                  <Link href='/discover?query=tv&page=1'>\r\n                    <a\r\n                      className={`head--tabs__tab ${mediaFor.title === 'tv' &&\r\n                        'disabled'}`}\r\n                    >\r\n                      Tv Shows\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n                <DiscoverForm />\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <Pagination\r\n            numberOfArticles={mediaFor.total_pages}\r\n            typeFor={setLink()}\r\n          />\r\n          <div\r\n            className={\r\n              mediaFor.typeFor === 'person'\r\n                ? 'person--grid'\r\n                : 'content--container'\r\n            }\r\n          >\r\n            {mediaFor.results.map(item =>\r\n              mediaFor.typeFor === 'person' ? (\r\n                <PersonCard key={item.id} data={item} />\r\n              ) : (\r\n                <CardTwo key={item.id} data={item} typeFor={mediaFor.typeFor} />\r\n              )\r\n            )}\r\n          </div>\r\n          <Pagination\r\n            numberOfArticles={mediaFor.total_pages}\r\n            typeFor={setLink()}\r\n          />\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MediaSection;\r\n"]},"metadata":{},"sourceType":"module"}