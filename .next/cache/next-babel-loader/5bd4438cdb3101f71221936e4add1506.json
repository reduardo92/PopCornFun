{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\discover\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport movieDB from '../../components/utility/movieDB';\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\n\nvar discover = function discover(_ref) {\n  var discover = _ref.discover;\n  console.log(discover);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Hello\"); // <MediaSection mediaFor={discover} />\n};\n\ndiscover.getInitialProps = function _callee(_ref2) {\n  var query, page, sort_by, year, genres, keywords, _discover;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          page = \"&page=\".concat(query.page ? query.page : 1);\n          sort_by = \"sort_by=release_date.asc\";\n          year = \"&year=\".concat(query.year ? query.year : '');\n          genres = \"&with_genres=\".concat(query.genres ? query.genres : '');\n          keywords = \"&with_keywords=\".concat(query.keywords ? query.keywords : '');\n          _context.prev = 6;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(movieDB(\"discover/\".concat(query.query), \"\".concat(sort_by).concat(year).concat(genres).concat(keywords).concat(page)));\n\n        case 9:\n          _discover = _context.sent;\n          return _context.abrupt(\"return\", {\n            discover: _objectSpread({\n              typeFor: query.query,\n              title: query.query\n            }, _discover)\n          });\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](6);\n          console.log(_context.t0);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6, 13]], Promise);\n};\n\nexport default discover;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/discover/index.jsx"],"names":["React","movieDB","MediaSection","discover","console","log","getInitialProps","query","page","sort_by","year","genres","keywords","typeFor","title"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;AAEA,IAAMC,QAAQ,GAAG,wBAAkB;AAAA,MAAfA,QAAe,QAAfA,QAAe;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP,CAHiC,CAKjC;AACD,CAND;;AAQAA,QAAQ,CAACG,eAAT,GAA2B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AACnBC,UAAAA,IADmB,mBACHD,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,CADvB;AAEnBC,UAAAA,OAFmB;AAGnBC,UAAAA,IAHmB,mBAGHH,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAnB,GAA0B,EAHvB;AAInBC,UAAAA,MAJmB,0BAIMJ,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACI,MAArB,GAA8B,EAJpC;AAKnBC,UAAAA,QALmB,4BAKUL,KAAK,CAACK,QAAN,GAAiBL,KAAK,CAACK,QAAvB,GAAkC,EAL5C;AAAA;AAAA;AAAA,2CAOAX,OAAO,oBAChBM,KAAK,CAACA,KADU,aAEzBE,OAFyB,SAEfC,IAFe,SAERC,MAFQ,SAECC,QAFD,SAEYJ,IAFZ,EAPP;;AAAA;AAOjBL,UAAAA,SAPiB;AAAA,2CAWhB;AACLA,YAAAA,QAAQ;AACNU,cAAAA,OAAO,EAAEN,KAAK,CAACA,KADT;AAENO,cAAAA,KAAK,EAAEP,KAAK,CAACA;AAFP,eAGHJ,SAHG;AADH,WAXgB;;AAAA;AAAA;AAAA;AAmBvBC,UAAAA,OAAO,CAACC,GAAR;;AAnBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAuBA,eAAeF,QAAf","sourcesContent":["import React from 'react';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\r\n\r\nconst discover = ({ discover }) => {\r\n  console.log(discover);\r\n\r\n  return <div>Hello</div>;\r\n\r\n  // <MediaSection mediaFor={discover} />\r\n};\r\n\r\ndiscover.getInitialProps = async ({ query }) => {\r\n  const page = `&page=${query.page ? query.page : 1}`;\r\n  const sort_by = `sort_by=release_date.asc`;\r\n  const year = `&year=${query.year ? query.year : ''}`;\r\n  const genres = `&with_genres=${query.genres ? query.genres : ''}`;\r\n  const keywords = `&with_keywords=${query.keywords ? query.keywords : ''}`;\r\n  try {\r\n    const discover = await movieDB(\r\n      `discover/${query.query}`,\r\n      `${sort_by}${year}${genres}${keywords}${page}`\r\n    );\r\n    return {\r\n      discover: {\r\n        typeFor: query.query,\r\n        title: query.query,\r\n        ...discover\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default discover;\r\n"]},"metadata":{},"sourceType":"module"}