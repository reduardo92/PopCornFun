{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\tv\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useEffect } from 'react';\nimport MovieContext from '../../components/context/MovieContext';\nimport { IMG_URL_OR, SET_MEDIADATA, CLEAR_MEDIADATA } from '../../components/context/types';\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport TopBilledCast from '../../components/ui/TopBilledCast';\nimport ReviewSection from '../../components/ui/ReviewSection';\nimport MediaSection from '../../components/ui/MediaSection';\nimport Layout from '../../components/layout';\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\nimport RecommenSection from '../../components/ui/RecommenSection';\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\nconst Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"sc-1qdj2gq-0\"\n})([\"background:var(--bg-gradient);margin-top:110px;.profile--backdrop{background:linear-gradient(rgba(0,0,0,0.2),rgba(0,0,0,0.2)),url(\", \") no-repeat center;background-color:black;min-height:400px;background-size:cover;background-position:top;object-fit:cover;position:relative;&__img{position:absolute;bottom:-20vw;left:20px;width:120px;}}.profile--header{position:relative;padding:2em 0.5em;max-width:750px;margin:0 auto;}@media screen and (min-width:768px){.profile--header{max-width:1100px;padding:2em 1em;}}\"], ({\n  bgImg\n}) => `${IMG_URL_OR}${bgImg}`);\n\nconst TvProfile = ({\n  tv\n}) => {\n  const {\n    setData,\n    clearData,\n    mediaProfile\n  } = useContext(MovieContext);\n  useEffect(() => {\n    setData(SET_MEDIADATA, tv);\n    return () => {\n      clearData(CLEAR_MEDIADATA);\n      console.log('clear DAta');\n    };\n  }, [tv]);\n  console.log('from mediaProfile', mediaProfile);\n  return mediaProfile && __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"profile\",\n    bgImg: mediaProfile.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(ProfileHeader, {\n    data: mediaProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(TopBilledCast, {\n    data: mediaProfile.credits.cast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(ReviewSection, {\n    data: mediaProfile.reviews.results,\n    movieId: mediaProfile.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(MediaSection, {\n    videos: mediaProfile.videos.results,\n    posters: mediaProfile.images.posters,\n    backdrops: mediaProfile.images.backdrops,\n    typeId: mediaProfile.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(RecommenSection, {\n    data: mediaProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), __jsx(ProfileStats, {\n    data: mediaProfile,\n    keywords: Object.values(mediaProfile.keywords)[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n};\n\nTvProfile.getInitialProps = async ctx => {\n  console.log(ctx.query, 'ID');\n  console.log(ctx);\n\n  try {\n    const tv = await movieDB(`tv/${ctx.query.id || '62688'}`, 'append_to_response=account_states,external_ids,keywords,content_ratings,videos,recommendations,reviews,credits,images&include_image_language=en,null');\n    return {\n      tv: _objectSpread({\n        typeFor: 'tv'\n      }, tv)\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default TvProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/tv/[id].jsx"],"names":["useContext","useEffect","MovieContext","IMG_URL_OR","SET_MEDIADATA","CLEAR_MEDIADATA","styled","movieDB","TopBilledCast","ReviewSection","MediaSection","Layout","ProfileHeader","RecommenSection","ProfileStats","Styled","section","bgImg","TvProfile","tv","setData","clearData","mediaProfile","console","log","backdrop_path","credits","cast","reviews","results","id","videos","images","posters","backdrops","Object","values","keywords","getInitialProps","ctx","query","typeFor","error"],"mappings":"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","sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport {\r\n  IMG_URL_OR,\r\n  SET_MEDIADATA,\r\n  CLEAR_MEDIADATA\r\n} from '../../components/context/types';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport TopBilledCast from '../../components/ui/TopBilledCast';\r\nimport ReviewSection from '../../components/ui/ReviewSection';\r\nimport MediaSection from '../../components/ui/MediaSection';\r\nimport Layout from '../../components/layout';\r\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\r\nimport RecommenSection from '../../components/ui/RecommenSection';\r\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 110px;\r\n\r\n  .profile--backdrop {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),\r\n      url(${({ bgImg }) => `${IMG_URL_OR}${bgImg}`}) no-repeat center;\r\n    background-color: black;\r\n    min-height: 400px;\r\n    background-size: cover;\r\n    background-position: top;\r\n    object-fit: cover;\r\n    position: relative;\r\n\r\n    &__img {\r\n      position: absolute;\r\n      bottom: -20vw;\r\n      left: 20px;\r\n      width: 120px;\r\n    }\r\n  }\r\n\r\n  .profile--header {\r\n    position: relative;\r\n    padding: 2em 0.5em;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .profile--header {\r\n      max-width: 1100px;\r\n      padding: 2em 1em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TvProfile = ({ tv }) => {\r\n  const { setData, clearData, mediaProfile } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    setData(SET_MEDIADATA, tv);\r\n    return () => {\r\n      clearData(CLEAR_MEDIADATA);\r\n      console.log('clear DAta');\r\n    };\r\n  }, [tv]);\r\n\r\n  console.log('from mediaProfile', mediaProfile);\r\n  return (\r\n    mediaProfile && (\r\n      <Layout>\r\n        <Styled className='profile' bgImg={mediaProfile.backdrop_path}>\r\n          <div className='profile--backdrop' />\r\n          <div className='profile--header'>\r\n            <ProfileHeader data={mediaProfile} />\r\n            <TopBilledCast data={mediaProfile.credits.cast} />\r\n            <ReviewSection\r\n              data={mediaProfile.reviews.results}\r\n              movieId={mediaProfile.id}\r\n            />\r\n            <MediaSection\r\n              videos={mediaProfile.videos.results}\r\n              posters={mediaProfile.images.posters}\r\n              backdrops={mediaProfile.images.backdrops}\r\n              typeId={mediaProfile.id}\r\n            />\r\n            <RecommenSection data={mediaProfile} />\r\n          </div>\r\n          <ProfileStats\r\n            data={mediaProfile}\r\n            keywords={Object.values(mediaProfile.keywords)[0]}\r\n          />\r\n        </Styled>\r\n      </Layout>\r\n    )\r\n  );\r\n};\r\n\r\nTvProfile.getInitialProps = async ctx => {\r\n  console.log(ctx.query, 'ID');\r\n  console.log(ctx);\r\n\r\n  try {\r\n    const tv = await movieDB(\r\n      `tv/${ctx.query.id || '62688'}`,\r\n      'append_to_response=account_states,external_ids,keywords,content_ratings,videos,recommendations,reviews,credits,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      tv: { typeFor: 'tv', ...tv }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default TvProfile;\r\n"]},"metadata":{},"sourceType":"module"}