{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport movieDB from '../../components/utility/movieDB';\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\n\nvar movie = function movie(_ref) {\n  var movies = _ref.movies;\n  return __jsx(MediaSection, {\n    mediaFor: movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  });\n};\n\nmovie.getInitialProps = function _callee(_ref2) {\n  var query, queryLeng, movies;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          queryLeng = Object.keys(query).length;\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(movieDB(\"movies/\".concat(queryLeng === 0 ? 'popular' : query.query), \"page=\".concat(query.page ? query.page : 1)));\n\n        case 5:\n          movies = _context.sent;\n          return _context.abrupt(\"return\", {\n            movies: _objectSpread({\n              typeFor: 'movie',\n              title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' ')\n            }, movies)\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 9]], Promise);\n};\n\nexport default movie;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/index.jsx"],"names":["React","movieDB","MediaSection","movie","movies","getInitialProps","query","queryLeng","Object","keys","length","page","typeFor","title","split","join","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,SAAgB,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB;AAAA,CAAd;;AAEAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAChBC,UAAAA,SADgB,GACJC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MADf;AAAA;AAAA;AAAA,2CAGCT,OAAO,kBAChBM,SAAS,KAAK,CAAd,GAAkB,SAAlB,GAA8BD,KAAK,CAACA,KADpB,kBAElBA,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACK,IAAnB,GAA0B,CAFR,EAHR;;AAAA;AAGdP,UAAAA,MAHc;AAAA,2CAOb;AACLA,YAAAA,MAAM;AACJQ,cAAAA,OAAO,EAAE,OADL;AAEJC,cAAAA,KAAK,EAAEN,SAAS,KAAK,CAAd,GAAkB,SAAlB,GAA8BD,KAAK,CAACA,KAAN,CAAYQ,KAAZ,CAAkB,GAAlB,EAAuBC,IAAvB,CAA4B,GAA5B;AAFjC,eAGDX,MAHC;AADD,WAPa;;AAAA;AAAA;AAAA;AAepBY,UAAAA,OAAO,CAACC,GAAR;;AAfoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAmBA,eAAed,KAAf","sourcesContent":["import React from 'react';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\r\n\r\nconst movie = ({ movies }) => <MediaSection mediaFor={movies} />;\r\n\r\nmovie.getInitialProps = async ({ query }) => {\r\n  const queryLeng = Object.keys(query).length;\r\n  try {\r\n    const movies = await movieDB(\r\n      `movies/${queryLeng === 0 ? 'popular' : query.query}`,\r\n      `page=${query.page ? query.page : 1}`\r\n    );\r\n    return {\r\n      movies: {\r\n        typeFor: 'movie',\r\n        title: queryLeng === 0 ? 'popular' : query.query.split('_').join(' '),\r\n        ...movies,\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default movie;\r\n"]},"metadata":{},"sourceType":"module"}