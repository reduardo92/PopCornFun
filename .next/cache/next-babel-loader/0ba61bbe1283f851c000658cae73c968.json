{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\movie\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport movieDB from '../../components/utility/movieDB';\nimport MediaMainStyle from '../../components/ui/mediaProfile/mediaMainStyle';\nimport TopBilledCast from '../../components/ui/TopBilledCast';\nimport ReviewSection from '../../components/ui/ReviewSection';\nimport MediaSection from '../../components/ui/MediaSection';\nimport Layout from '../../components/layout';\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\nimport RecommenSection from '../../components/ui/RecommenSection';\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\n\nconst MovieProfile = ({\n  movie\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(MediaMainStyle, {\n  className: \"profile\",\n  bgImg: movie.backdrop_path,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"profile--backdrop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"profile--main\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(ProfileHeader, {\n  data: movie,\n  bgImg: movie.backdrop_path,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"main-con px-2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(TopBilledCast, {\n  data: movie.credits.cast,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), __jsx(ReviewSection, {\n  data: movie.reviews.results,\n  movieId: movie.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), __jsx(MediaSection, {\n  videos: movie.videos.results,\n  posters: movie.images.posters,\n  backdrops: movie.images.backdrops,\n  typeId: movie.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), __jsx(RecommenSection, {\n  data: movie,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n})), __jsx(ProfileStats, {\n  data: movie,\n  keywords: Object.values(movie.keywords)[0],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}))));\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  try {\n    const movie = await movieDB(`movie/${query.id || '454626'}`, 'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null');\n    return {\n      props: {\n        movie: _objectSpread({\n          typeFor: 'movie'\n        }, movie)\n      }\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport default MovieProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/movie/[id].jsx"],"names":["movieDB","MediaMainStyle","TopBilledCast","ReviewSection","MediaSection","Layout","ProfileHeader","RecommenSection","ProfileStats","MovieProfile","movie","backdrop_path","credits","cast","reviews","results","id","videos","images","posters","backdrops","Object","values","keywords","getServerSideProps","query","props","typeFor","error","console","log"],"mappings":";;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,kCAApB;AACA,OAAOC,cAAP,MAA2B,iDAA3B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,YAAP,MAAyB,4DAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACnB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,cAAD;AAAgB,EAAA,SAAS,EAAC,SAA1B;AAAoC,EAAA,KAAK,EAAEA,KAAK,CAACC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,aAAD;AAAe,EAAA,IAAI,EAAED,KAArB;AAA4B,EAAA,KAAK,EAAEA,KAAK,CAACC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,aAAD;AAAe,EAAA,IAAI,EAAED,KAAK,CAACE,OAAN,CAAcC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,aAAD;AAAe,EAAA,IAAI,EAAEH,KAAK,CAACI,OAAN,CAAcC,OAAnC;AAA4C,EAAA,OAAO,EAAEL,KAAK,CAACM,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,MAAC,YAAD;AACE,EAAA,MAAM,EAAEN,KAAK,CAACO,MAAN,CAAaF,OADvB;AAEE,EAAA,OAAO,EAAEL,KAAK,CAACQ,MAAN,CAAaC,OAFxB;AAGE,EAAA,SAAS,EAAET,KAAK,CAACQ,MAAN,CAAaE,SAH1B;AAIE,EAAA,MAAM,EAAEV,KAAK,CAACM,EAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EASE,MAAC,eAAD;AAAiB,EAAA,IAAI,EAAEN,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,CAFF,EAaE,MAAC,YAAD;AACE,EAAA,IAAI,EAAEA,KADR;AAEE,EAAA,QAAQ,EAAEW,MAAM,CAACC,MAAP,CAAcZ,KAAK,CAACa,QAApB,EAA8B,CAA9B,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbF,CAFF,CADF,CADF;;AA0BA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACrD,MAAI;AACF,UAAMf,KAAK,GAAG,MAAMV,OAAO,CACxB,SAAQyB,KAAK,CAACT,EAAN,IAAY,QAAS,EADL,EAEzB,oJAFyB,CAA3B;AAIA,WAAO;AACLU,MAAAA,KAAK,EAAE;AACLhB,QAAAA,KAAK;AAAIiB,UAAAA,OAAO,EAAE;AAAb,WAAyBjB,KAAzB;AADA;AADF,KAAP;AAKD,GAVD,CAUE,OAAOkB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAdM;AAgBP,eAAenB,YAAf","sourcesContent":["import movieDB from '../../components/utility/movieDB';\r\nimport MediaMainStyle from '../../components/ui/mediaProfile/mediaMainStyle';\r\nimport TopBilledCast from '../../components/ui/TopBilledCast';\r\nimport ReviewSection from '../../components/ui/ReviewSection';\r\nimport MediaSection from '../../components/ui/MediaSection';\r\nimport Layout from '../../components/layout';\r\nimport ProfileHeader from '../../components/ui/mediaProfile/ProfileHeader';\r\nimport RecommenSection from '../../components/ui/RecommenSection';\r\nimport ProfileStats from '../../components/ui/mediaProfile/ProfileStats/ProfileStats';\r\n\r\nconst MovieProfile = ({ movie }) => (\r\n  <Layout>\r\n    <MediaMainStyle className='profile' bgImg={movie.backdrop_path}>\r\n      <div className='profile--backdrop' />\r\n      <div className='profile--main'>\r\n        <ProfileHeader data={movie} bgImg={movie.backdrop_path} />\r\n        <div className='main-con px-2'>\r\n          <TopBilledCast data={movie.credits.cast} />\r\n          <ReviewSection data={movie.reviews.results} movieId={movie.id} />\r\n          <MediaSection\r\n            videos={movie.videos.results}\r\n            posters={movie.images.posters}\r\n            backdrops={movie.images.backdrops}\r\n            typeId={movie.id}\r\n          />\r\n          <RecommenSection data={movie} />\r\n        </div>\r\n        <ProfileStats\r\n          data={movie}\r\n          keywords={Object.values(movie.keywords)[0]}\r\n        />\r\n      </div>\r\n    </MediaMainStyle>\r\n  </Layout>\r\n);\r\n\r\nexport const getServerSideProps = async ({ query }) => {\r\n  try {\r\n    const movie = await movieDB(\r\n      `movie/${query.id || '454626'}`,\r\n      'append_to_response=account_states,external_ids,keywords,release_dates,videos,recommendations,reviews,credits,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      props: {\r\n        movie: { typeFor: 'movie', ...movie },\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default MovieProfile;\r\n"]},"metadata":{},"sourceType":"module"}