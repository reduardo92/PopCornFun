{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\person\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useState } from 'react';\nimport { IMG_URL } from '../../components/context/types';\nimport movieDB from '../../components/utility/movieDB';\nimport styled from 'styled-components';\nimport Layout from '../../components/layout';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport MovieContext from '../../components/context/MovieContext';\nimport SimpleFlex from '../../components/ui/SimpleFlex';\nimport RecommenCard from '../../components/ui/Cards/RecommenCard';\nimport groupByDate from '../../components/utility/groupByDate';\nimport groupeCrew from '../../components/utility/groupeCrew';\nimport numberWithCommas from '../../components/utility/numberWithCommas';\nimport CreditsTabs from '../../components/ui/mediaProfile/CreditsTabs';\nconst Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"sc-1s2kqjg-0\"\n})([\"background:var(--bg-gradient);margin-top:110px;padding:2em 1em;.profile--person{max-width:300px;margin:0 auto;}.profile--biography{margin:2em 0;display:grid;&__name{font-weight:bold;margin-bottom:1em;text-align:center;}.read--more{display:flex;align-items:center;margin:0 auto;background-color:var(--primary-clr);border-radius:50%;padding:0.25em;font-size:1.7rem;transition:var(--ease--in--out--02s);color:var(--white-clr);&:hover{opacity:0.8;transform:scale(0.9);}}}.profile--media__credits{display:grid;grid-template-columns:repeat(2,1fr);align-items:center;justify-content:center;.tabs--container{flex-wrap:nowrap;}&--content{display:grid;grid-column:1 / 3;margin-top:1.2em;grid-gap:1.5em;}}}.grouped{& > div:first-child{padding-top:0.6em !important;}& > div:last-child{padding-bottom:0.6em !important;}.date{flex:0 0 9%;}}@media screen and (min-width:768px){}\"]);\n\nconst PersonProfile = ({\n  person\n}) => {\n  console.log(person);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('movies');\n  const {\n    setModal\n  } = useContext(MovieContext);\n  const knonwFor = person.combined_credits.cast.sort((a, b) => b.vote_count - a.vote_count).slice(0, 8);\n\n  const actingDiv = (arry, media) => Object.entries(arry).sort((a, b) => b[0] - a[0]).map(([_, value], index) => __jsx(\"div\", {\n    key: Math.random() * 10,\n    className: \"grouped border border-black \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, value.map(i => __jsx(CreditsTabs, {\n    key: i.id * index,\n    data: i,\n    typeFor: media,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))));\n\n  const crewDiv = (arr, sortBy, media) => {\n    const data = Object.entries(groupeCrew(arr, 'department', sortBy));\n    return data.map(([key, _], index) => __jsx(\"div\", {\n      key: key,\n      className: \"credit--role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      key: key,\n      className: \"subTitle text-light my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, key), data.map(([_, value]) => value)[index].map(item => item.map(i => __jsx(\"div\", {\n      key: i.id * (Math.random() * 10),\n      className: \"grouped border border-black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(CreditsTabs, {\n      data: i,\n      typeFor: media,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))))));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--person\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: `${IMG_URL}${person.profile_path}`,\n    alt: person.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"profile--biography\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"profile--biography__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, person.name), __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Biography\"), __jsx(\"p\", {\n    className: \"profile--biography__bio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, `${person.biography.slice(0, 500)}...`), __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => setModal(person.biography, 'person'),\n    className: \"read--more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(IoIosArrowDown, {\n    className: \"read--more__arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"profile--media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--media__knownFor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Known For\"), __jsx(SimpleFlex, {\n    className: \"knonwFor--content\",\n    setWidth: \"160px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, knonwFor.map(item => __jsx(RecommenCard, {\n    key: item.id,\n    data: item,\n    typeFor: item.media_type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    className: \"profile--media__credits\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Credits\"), __jsx(\"div\", {\n    className: \"tabs--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: `tab ${tab === 'movies' && 'activeTab'}`,\n    onClick: () => setTab('movies'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Movies\"), __jsx(\"button\", {\n    className: `tab ${tab === 'tv' && 'activeTab'}`,\n    onClick: () => setTab('tv'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Tv Shows\")), __jsx(\"div\", {\n    className: \"profile--media__credits--content table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"credit--role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle text-light my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Acting\"), tab === 'movies' ? actingDiv(groupByDate(person.movie_credits.cast, 'release_date'), 'movie') : actingDiv(groupByDate(person.tv_credits.cast, 'first_air_date'), 'tv')), tab === 'movies' ? crewDiv(person.movie_credits.crew, 'release_date', 'movie') : crewDiv(person.tv_credits.crew, 'first_air_date', 'tv')))), __jsx(\"div\", {\n    className: \"profile--facts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Facts\"))));\n};\n\nPersonProfile.getInitialProps = async ctx => {\n  console.log(ctx.query, 'ID');\n  console.log(ctx);\n\n  try {\n    const person = await movieDB(`person/${ctx.query.id || '85'}`, 'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null');\n    return {\n      person: _objectSpread({\n        typeFor: 'person'\n      }, person)\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default PersonProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/person/[id].jsx"],"names":["useContext","useState","IMG_URL","movieDB","styled","Layout","IoIosArrowDown","MovieContext","SimpleFlex","RecommenCard","groupByDate","groupeCrew","numberWithCommas","CreditsTabs","Styled","section","PersonProfile","person","console","log","tab","setTab","setModal","knonwFor","combined_credits","cast","sort","a","b","vote_count","slice","actingDiv","arry","media","Object","entries","map","_","value","index","Math","random","i","id","crewDiv","arr","sortBy","data","key","item","profile_path","name","biography","media_type","movie_credits","tv_credits","crew","getInitialProps","ctx","query","typeFor","error"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\nimport { IMG_URL } from '../../components/context/types';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../components/layout';\r\nimport { IoIosArrowDown } from 'react-icons/io';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport SimpleFlex from '../../components/ui/SimpleFlex';\r\nimport RecommenCard from '../../components/ui/Cards/RecommenCard';\r\nimport groupByDate from '../../components/utility/groupByDate';\r\nimport groupeCrew from '../../components/utility/groupeCrew';\r\nimport numberWithCommas from '../../components/utility/numberWithCommas';\r\nimport CreditsTabs from '../../components/ui/mediaProfile/CreditsTabs';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 110px;\r\n  padding: 2em 1em;\r\n\r\n  .profile--person {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .profile--biography {\r\n    margin: 2em 0;\r\n    display: grid;\r\n    &__name {\r\n      font-weight: bold;\r\n      margin-bottom: 1em;\r\n      text-align: center;\r\n    }\r\n\r\n    .read--more {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 0 auto;\r\n      background-color: var(--primary-clr);\r\n      border-radius: 50%;\r\n      padding: 0.25em;\r\n      font-size: 1.7rem;\r\n      transition: var(--ease--in--out--02s);\r\n      color: var(--white-clr);\r\n\r\n      &:hover {\r\n        opacity: 0.8;\r\n        transform: scale(0.9);\r\n      }\r\n    }\r\n  }\r\n\r\n  .profile--media__credits {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .tabs--container {\r\n      flex-wrap: nowrap;\r\n    }\r\n\r\n\r\n    &--content {\r\n    display: grid;\r\n    grid-column: 1 / 3;\r\n    margin-top: 1.2em;\r\n    grid-gap: 1.5em;\r\n}\r\n    }\r\n  }\r\n\r\n  .grouped {\r\n    & > div:first-child {\r\n      padding-top: 0.6em !important;\r\n    }\r\n    & > div:last-child {\r\n      padding-bottom: 0.6em !important;\r\n    }\r\n    .date {\r\n      flex: 0 0 9%;\r\n    }\r\n  }\r\n  /* .knonwFor--content {\r\n    .card--one {\r\n      width: 100%;\r\n      margin: 0 1em;\r\n    }\r\n  } */\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n`;\r\n\r\nconst PersonProfile = ({ person }) => {\r\n  console.log(person);\r\n  const [tab, setTab] = useState('movies');\r\n  const { setModal } = useContext(MovieContext);\r\n  const knonwFor = person.combined_credits.cast\r\n    .sort((a, b) => b.vote_count - a.vote_count)\r\n    .slice(0, 8);\r\n\r\n  const actingDiv = (arry, media) =>\r\n    Object.entries(arry)\r\n      .sort((a, b) => b[0] - a[0])\r\n      .map(([_, value], index) => (\r\n        <div key={Math.random() * 10} className='grouped border border-black '>\r\n          {value.map(i => (\r\n            <CreditsTabs key={i.id * index} data={i} typeFor={media} />\r\n          ))}\r\n        </div>\r\n      ));\r\n\r\n  const crewDiv = (arr, sortBy, media) => {\r\n    const data = Object.entries(groupeCrew(arr, 'department', sortBy));\r\n\r\n    return data.map(([key, _], index) => (\r\n      <div key={key} className='credit--role'>\r\n        <h3 key={key} className='subTitle text-light my-3'>\r\n          {key}\r\n        </h3>\r\n        {data\r\n          .map(([_, value]) => value)\r\n          [index].map(item =>\r\n            item.map(i => (\r\n              <div\r\n                key={i.id * (Math.random() * 10)}\r\n                className='grouped border border-black'\r\n              >\r\n                <CreditsTabs data={i} typeFor={media} />\r\n              </div>\r\n            ))\r\n          )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile'>\r\n        <div className='profile--person'>\r\n          <img src={`${IMG_URL}${person.profile_path}`} alt={person.name} />\r\n        </div>\r\n        <div className='profile--biography'>\r\n          <h2 className='profile--biography__name'>{person.name}</h2>\r\n          <h3 className='subTitle'>Biography</h3>\r\n          <p className='profile--biography__bio'>{`${person.biography.slice(\r\n            0,\r\n            500\r\n          )}...`}</p>\r\n          <a\r\n            href='#'\r\n            onClick={() => setModal(person.biography, 'person')}\r\n            className='read--more'\r\n          >\r\n            <IoIosArrowDown className='read--more__arrow' />\r\n          </a>\r\n        </div>\r\n        <div className='profile--media'>\r\n          <div className='profile--media__knownFor'>\r\n            <h3 className='subTitle'>Known For</h3>\r\n            <SimpleFlex className='knonwFor--content' setWidth='160px'>\r\n              {knonwFor.map(item => (\r\n                <RecommenCard\r\n                  key={item.id}\r\n                  data={item}\r\n                  typeFor={item.media_type}\r\n                />\r\n              ))}\r\n            </SimpleFlex>\r\n          </div>\r\n          <div className='profile--media__credits'>\r\n            <h3 className='subTitle'>Credits</h3>\r\n            <div className='tabs--container'>\r\n              <button\r\n                className={`tab ${tab === 'movies' && 'activeTab'}`}\r\n                onClick={() => setTab('movies')}\r\n              >\r\n                Movies\r\n              </button>\r\n              <button\r\n                className={`tab ${tab === 'tv' && 'activeTab'}`}\r\n                onClick={() => setTab('tv')}\r\n              >\r\n                Tv Shows\r\n              </button>\r\n            </div>\r\n            <div className='profile--media__credits--content table'>\r\n              <div className='credit--role'>\r\n                <h3 className='subTitle text-light my-3'>Acting</h3>\r\n                {tab === 'movies'\r\n                  ? actingDiv(\r\n                      groupByDate(person.movie_credits.cast, 'release_date'),\r\n                      'movie'\r\n                    )\r\n                  : actingDiv(\r\n                      groupByDate(person.tv_credits.cast, 'first_air_date'),\r\n                      'tv'\r\n                    )}\r\n              </div>\r\n              {tab === 'movies'\r\n                ? crewDiv(person.movie_credits.crew, 'release_date', 'movie')\r\n                : crewDiv(person.tv_credits.crew, 'first_air_date', 'tv')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='profile--facts'>\r\n          <h3 className='subTitle'>Facts</h3>\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPersonProfile.getInitialProps = async ctx => {\r\n  console.log(ctx.query, 'ID');\r\n  console.log(ctx);\r\n\r\n  try {\r\n    const person = await movieDB(\r\n      `person/${ctx.query.id || '85'}`,\r\n      'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      person: { typeFor: 'person', ...person }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default PersonProfile;\r\n"]},"metadata":{},"sourceType":"module"}