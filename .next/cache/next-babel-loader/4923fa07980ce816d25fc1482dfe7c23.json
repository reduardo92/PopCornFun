{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\person\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { IMG_URL } from '../../components/context/types';\nimport Layout from '../../components/layout';\nimport styled from 'styled-components';\nimport movieDB from '../../components/utility/movieDB';\nimport KnownFor from '../../components/ui/PersonProfile/KnownFor';\nimport MediaCredits from '../../components/ui/PersonProfile/MediaCredits';\nimport PersonFacts from '../../components/ui/PersonProfile/PersonFacts';\nimport Biography from '../../components/ui/PersonProfile/Biography';\nvar Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"sc-1s2kqjg-0\"\n})([\"background:var(--bg-dark-gradient);margin-top:110px;.profile--person{max-width:300px;margin:0 auto;}@media screen and (min-width:1000px){margin-top:70px;display:grid;grid-template-areas:'pp bio' 'pf pm';grid-template-columns:2fr 1fr;.profile--person{grid-area:pp;justify-self:end;max-width:355px;margin:0;z-index:10;}.profile--biography{grid-area:bio;align-self:center;justify-self:center;}.profile--media{grid-area:pm;background:var(--bg-gradient);}.profile--media--container{}.profile--facts{grid-area:pf;}}\"]);\n\nvar PersonProfile = function PersonProfile(_ref) {\n  var person = _ref.person;\n\n  var _useState = useState('movies'),\n      tab = _useState[0],\n      setTab = _useState[1]; // const { setModal } = useContext(MovieContext);\n\n\n  var knonwFor = person && person.combined_credits.cast.sort(function (a, b) {\n    return b.vote_count - a.vote_count;\n  }).slice(0, 8);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--person pt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: person.profile_path ? \"\".concat(IMG_URL).concat(person.profile_path) : 'no_img.jpg',\n    alt: person.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), __jsx(Biography, {\n    name: person.name,\n    bio: person.biography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--media--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(KnownFor, {\n    data: knonwFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(MediaCredits, {\n    data: person,\n    tab: tab,\n    setTab: setTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), __jsx(PersonFacts, {\n    data: person,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n};\n\nPersonProfile.getInitialProps = function _callee(ctx) {\n  var person;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(movieDB(\"person/\".concat(ctx.query.id || '85'), 'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null'));\n\n        case 3:\n          person = _context.sent;\n          return _context.abrupt(\"return\", {\n            person: _objectSpread({\n              typeFor: 'person'\n            }, person)\n          });\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nexport default PersonProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/person/[id].jsx"],"names":["useState","IMG_URL","Layout","styled","movieDB","KnownFor","MediaCredits","PersonFacts","Biography","Styled","section","PersonProfile","person","tab","setTab","knonwFor","combined_credits","cast","sort","a","b","vote_count","slice","profile_path","name","biography","getInitialProps","ctx","query","id","typeFor","console","log"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AAEA,IAAMC,MAAM,GAAGN,MAAM,CAACO,OAAV;AAAA;AAAA;AAAA,qgBAAZ;;AA4CA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACdZ,QAAQ,CAAC,QAAD,CADM;AAAA,MAC7Ba,GAD6B;AAAA,MACxBC,MADwB,iBAGpC;;;AAEA,MAAMC,QAAQ,GACZH,MAAM,IACNA,MAAM,CAACI,gBAAP,CAAwBC,IAAxB,CACGC,IADH,CACQ,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,CAACC,UAAF,GAAeF,CAAC,CAACE,UAA3B;AAAA,GADR,EAEGC,KAFH,CAES,CAFT,EAEY,CAFZ,CAFF;AAMA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EACDV,MAAM,CAACW,YAAP,aACOtB,OADP,SACiBW,MAAM,CAACW,YADxB,IAEI,YAJR;AAME,IAAA,GAAG,EAAEX,MAAM,CAACY,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAWE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEZ,MAAM,CAACY,IAAxB;AAA8B,IAAA,GAAG,EAAEZ,MAAM,CAACa,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEV,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAEH,MAApB;AAA4B,IAAA,GAAG,EAAEC,GAAjC;AAAsC,IAAA,MAAM,EAAEC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAZF,EAkBE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEF,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF,CADF;AAwBD,CAnCD;;AAqCAD,aAAa,CAACe,eAAd,GAAgC,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEPvB,OAAO,kBAChBuB,GAAG,CAACC,KAAJ,CAAUC,EAAV,IAAgB,IADA,GAE1B,iHAF0B,CAFA;;AAAA;AAEtBjB,UAAAA,MAFsB;AAAA,2CAMrB;AACLA,YAAAA,MAAM;AAAIkB,cAAAA,OAAO,EAAE;AAAb,eAA0BlB,MAA1B;AADD,WANqB;;AAAA;AAAA;AAAA;AAU5BmB,UAAAA,OAAO,CAACC,GAAR;;AAV4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAcA,eAAerB,aAAf","sourcesContent":["import { useState } from 'react';\r\nimport { IMG_URL } from '../../components/context/types';\r\nimport Layout from '../../components/layout';\r\nimport styled from 'styled-components';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport KnownFor from '../../components/ui/PersonProfile/KnownFor';\r\nimport MediaCredits from '../../components/ui/PersonProfile/MediaCredits';\r\nimport PersonFacts from '../../components/ui/PersonProfile/PersonFacts';\r\nimport Biography from '../../components/ui/PersonProfile/Biography';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-dark-gradient);\r\n  margin-top: 110px;\r\n\r\n  .profile--person {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    margin-top: 70px;\r\n    display: grid;\r\n    grid-template-areas: 'pp bio' 'pf pm';\r\n    grid-template-columns: 2fr 1fr;\r\n\r\n    .profile--person {\r\n      grid-area: pp;\r\n      justify-self: end;\r\n      max-width: 355px;\r\n      margin: 0;\r\n      z-index: 10;\r\n    }\r\n\r\n    .profile--biography {\r\n      grid-area: bio;\r\n      align-self: center;\r\n      justify-self: center;\r\n    }\r\n\r\n    .profile--media {\r\n      grid-area: pm;\r\n      background: var(--bg-gradient);\r\n    }\r\n\r\n    .profile--media--container {\r\n      /* max-width: 1500px; */\r\n    }\r\n\r\n    .profile--facts {\r\n      grid-area: pf;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PersonProfile = ({ person }) => {\r\n  const [tab, setTab] = useState('movies');\r\n\r\n  // const { setModal } = useContext(MovieContext);\r\n\r\n  const knonwFor =\r\n    person &&\r\n    person.combined_credits.cast\r\n      .sort((a, b) => b.vote_count - a.vote_count)\r\n      .slice(0, 8);\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile'>\r\n        <div className='profile--person pt-5'>\r\n          <img\r\n            src={\r\n              person.profile_path\r\n                ? `${IMG_URL}${person.profile_path}`\r\n                : 'no_img.jpg'\r\n            }\r\n            alt={person.name}\r\n          />\r\n        </div>\r\n        <Biography name={person.name} bio={person.biography} />\r\n        <div className='profile--media'>\r\n          <div className='profile--media--container'>\r\n            <KnownFor data={knonwFor} />\r\n            <MediaCredits data={person} tab={tab} setTab={setTab} />\r\n          </div>\r\n        </div>\r\n        <PersonFacts data={person} />\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPersonProfile.getInitialProps = async ctx => {\r\n  try {\r\n    const person = await movieDB(\r\n      `person/${ctx.query.id || '85'}`,\r\n      'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      person: { typeFor: 'person', ...person }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default PersonProfile;\r\n"]},"metadata":{},"sourceType":"module"}