{"ast":null,"code":"import auth from '../../server/middleware/auth';\nimport connectDB from '../../server/config/db';\nimport { mediaValidation } from '../../server/Validation';\nimport Watchlist from '../../server/models/Watchlist';\nexport default (async (req, res) => {\n  await connectDB();\n  await auth(req, res);\n  const {\n    method\n  } = req;\n\n  switch (method) {\n    // @route   GET api/watchlist\n    // @desc    Get all Watchlist Media\n    // @access  Private\n    case 'GET':\n      console.log(req.user);\n\n      try {\n        const watchlist = await Watchlist.find({\n          user: req.user.id\n        }).sort({\n          date: -1\n        });\n        res.json(watchlist);\n      } catch (err) {\n        console.log(err.message);\n        res.status(500).send('Server Error');\n      }\n\n      break;\n\n    case 'POST':\n      // @route   POST api/watchlist\n      // @desc    add new watchlist\n      // @access  Private\n      const {\n        error\n      } = mediaValidation(req.body);\n      if (error) return res.status(400).json({\n        msg: error.details[0].message\n      });\n      const {\n        media\n      } = req.body;\n\n      try {\n        const newwatchlist = new Watchlist({\n          media,\n          user: req.user.id\n        });\n        const watchlist = await newwatchlist.save();\n        res.json(watchlist);\n      } catch (err) {\n        console.error(err.message);\n        res.status(500).send('Server Error');\n      }\n\n      break;\n\n    case 'DELETE':\n      // @route   DELETE api/watchlist/:id\n      // @desc    Delete watchlist\n      // @access  Private\n      try {\n        let watchlist = await Watchlist.findById(req.query.id);\n        if (!watchlist) return res.status(400).json({\n          msg: 'Watchlist not found'\n        }); // Make sure user owns watchlist\n\n        if (watchlist.user.toString() !== req.user.id) {\n          return res.status(401).json({\n            msg: 'Not authorized'\n          });\n        }\n\n        await Watchlist.findByIdAndRemove(req.query.id);\n        res.json({\n          msg: 'Watchlist removed'\n        });\n      } catch (err) {\n        console.error(err.message);\n        res.status(500).send('Server Error');\n      }\n\n      break;\n\n    default:\n      console.log('defa', method, req.params);\n      return res.status(405).end(`Method ${method} Not Allowed`);\n  }\n});","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/api/watchlist.js"],"names":["auth","connectDB","mediaValidation","Watchlist","req","res","method","console","log","user","watchlist","find","id","sort","date","json","err","message","status","send","error","body","msg","details","media","newwatchlist","save","findById","query","toString","findByIdAndRemove","params","end"],"mappings":"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","sourcesContent":["import auth from '../../server/middleware/auth';\r\nimport connectDB from '../../server/config/db';\r\nimport { mediaValidation } from '../../server/Validation';\r\nimport Watchlist from '../../server/models/Watchlist';\r\n\r\nexport default async (req, res) => {\r\n  await connectDB();\r\n  await auth(req, res);\r\n  const { method } = req;\r\n\r\n  switch (method) {\r\n    // @route   GET api/watchlist\r\n    // @desc    Get all Watchlist Media\r\n    // @access  Private\r\n    case 'GET':\r\n      console.log(req.user);\r\n      try {\r\n        const watchlist = await Watchlist.find({ user: req.user.id }).sort({\r\n          date: -1,\r\n        });\r\n        res.json(watchlist);\r\n      } catch (err) {\r\n        console.log(err.message);\r\n        res.status(500).send('Server Error');\r\n      }\r\n      break;\r\n    case 'POST':\r\n      // @route   POST api/watchlist\r\n      // @desc    add new watchlist\r\n      // @access  Private\r\n\r\n      const { error } = mediaValidation(req.body);\r\n      if (error) return res.status(400).json({ msg: error.details[0].message });\r\n\r\n      const { media } = req.body;\r\n\r\n      try {\r\n        const newwatchlist = new Watchlist({ media, user: req.user.id });\r\n\r\n        const watchlist = await newwatchlist.save();\r\n\r\n        res.json(watchlist);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).send('Server Error');\r\n      }\r\n      break;\r\n    case 'DELETE':\r\n      // @route   DELETE api/watchlist/:id\r\n      // @desc    Delete watchlist\r\n      // @access  Private\r\n      try {\r\n        let watchlist = await Watchlist.findById(req.query.id);\r\n\r\n        if (!watchlist)\r\n          return res.status(400).json({ msg: 'Watchlist not found' });\r\n\r\n        // Make sure user owns watchlist\r\n        if (watchlist.user.toString() !== req.user.id) {\r\n          return res.status(401).json({ msg: 'Not authorized' });\r\n        }\r\n\r\n        await Watchlist.findByIdAndRemove(req.query.id);\r\n\r\n        res.json({ msg: 'Watchlist removed' });\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).send('Server Error');\r\n      }\r\n      break;\r\n    default:\r\n      console.log('defa', method, req.params);\r\n      return res.status(405).end(`Method ${method} Not Allowed`);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}