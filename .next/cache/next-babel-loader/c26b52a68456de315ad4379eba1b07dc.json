{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\person\\\\[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useContext, useState } from 'react';\nimport { IMG_URL } from '../../components/context/types';\nimport movieDB from '../../components/utility/movieDB';\nimport styled from 'styled-components';\nimport Layout from '../../components/layout';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport MovieContext from '../../components/context/MovieContext';\nimport SimpleFlex from '../../components/ui/SimpleFlex';\nimport RecommenCard from '../../components/ui/Cards/RecommenCard';\nimport groupByDate from '../../components/utility/groupByDate';\nimport groupeCrew from '../../components/utility/groupeCrew';\nimport numberWithCommas from '../../components/utility/numberWithCommas';\nvar Styled = styled.section.withConfig({\n  displayName: \"id__Styled\",\n  componentId: \"sc-1s2kqjg-0\"\n})([\"background:var(--bg-gradient);margin-top:110px;padding:2em 1em;.profile--person{max-width:300px;margin:0 auto;}.profile--biography{margin:2em 0;display:grid;&__name{font-weight:bold;margin-bottom:1em;text-align:center;}.read--more{display:flex;align-items:center;margin:0 auto;background-color:var(--primary-clr);border-radius:50%;padding:0.25em;font-size:1.7rem;transition:var(--ease--in--out--02s);color:var(--white-clr);&:hover{opacity:0.8;transform:scale(0.9);}}}.profile--media__credits{display:grid;grid-template-columns:repeat(2,1fr);align-items:center;justify-content:center;&--content{grid-column:1 / 3;margin-top:1.2em;}}.grouped{& > div:first-child{padding-top:0.6em !important;}& > div:last-child{padding-bottom:0.6em !important;}.date{flex:0 0 9%;}}@media screen and (min-width:768px){}\"]);\n\nvar PersonProfile = function PersonProfile(_ref) {\n  var person = _ref.person;\n  console.log(person);\n\n  var _useState = useState('movies'),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var _useContext = useContext(MovieContext),\n      setModal = _useContext.setModal;\n\n  var knonwFor = person.combined_credits.cast.sort(function (a, b) {\n    return b.vote_count - a.vote_count;\n  }).slice(0, 8);\n\n  var actingDiv = function actingDiv(arry) {\n    return _Object$entries(arry).sort(function (a, b) {\n      return b[0] - a[0];\n    }).map(function (_ref2, index) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          value = _ref3[1];\n\n      return __jsx(\"div\", {\n        key: index,\n        className: \"grouped border border-black \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, value.map(function (i) {\n        return __jsx(\"div\", {\n          key: i.id + Math.random() * 10,\n          className: \"d-flex shadow-sm border border-light bg-light py-1 px-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"date text-dark mr-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, i.date === '' ? '-' : i.date)), __jsx(\"span\", {\n          className: \"text-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          className: \"d-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, i.title || i.name), i.job ? \"...\".concat(i.job) : i.character ? \"as \".concat(i.character) : ''));\n      }));\n    });\n  };\n\n  var crewDiv = function crewDiv(arry) {\n    var entr = _Object$entries(groupeCrew(person.movie_credits.crew, 'department', 'release_date'));\n\n    var numLenght = entr.length - 3;\n    var dat = entr.map(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          _ = _ref5[0],\n          value = _ref5[1];\n\n      return value;\n    })[1].map(function (item) {\n      return item;\n    });\n    return entr.map(function (_ref6, index) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          key = _ref7[0],\n          value = _ref7[1];\n\n      return (// <div key={index} className='grouped border border-black bg-light '>\n        //   <h3 className='subTitle'>{key}</h3>\n        // </div>\n        value\n      );\n    }).map(function (item) {\n      return item;\n    });\n  };\n\n  console.log('hello', crewDiv());\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Styled, {\n    className: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--person\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"\".concat(IMG_URL).concat(person.profile_path),\n    alt: person.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"profile--biography\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"profile--biography__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, person.name), __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Biography\"), __jsx(\"p\", {\n    className: \"profile--biography__bio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"\".concat(person.biography.slice(0, 500), \"...\")), __jsx(\"a\", {\n    href: \"#\",\n    onClick: function onClick() {\n      return setModal(person.biography, 'person');\n    },\n    className: \"read--more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, __jsx(IoIosArrowDown, {\n    className: \"read--more__arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"profile--media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profile--media__knownFor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Known For\"), __jsx(SimpleFlex, {\n    className: \"knonwFor--content\",\n    setWidth: \"160px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, knonwFor.map(function (item) {\n    return __jsx(RecommenCard, {\n      key: item.id,\n      data: item,\n      typeFor: item.media_type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    });\n  }))), __jsx(\"div\", {\n    className: \"profile--media__credits\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Acting\"), __jsx(\"div\", {\n    className: \"tabs--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"tab \".concat(tab === 'movies' && 'activeTab'),\n    onClick: function onClick() {\n      return setTab('movies');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Movies\"), __jsx(\"button\", {\n    className: \"tab \".concat(tab === 'tv' && 'activeTab'),\n    onClick: function onClick() {\n      return setTab('tv');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Tv Shows\")), __jsx(\"div\", {\n    className: \"profile--media__credits--content table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"profile--media__credits--content table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, tab === 'movies' && crewDiv()))), __jsx(\"div\", {\n    className: \"profile--facts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"subTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Facts\"))));\n};\n\nPersonProfile.getInitialProps = function _callee(ctx) {\n  var person;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(ctx.query, 'ID');\n          console.log(ctx);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(movieDB(\"person/\".concat(ctx.query.id || '85'), 'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null'));\n\n        case 5:\n          person = _context.sent;\n          return _context.abrupt(\"return\", {\n            person: _objectSpread({\n              typeFor: 'person'\n            }, person)\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 9]]);\n};\n\nexport default PersonProfile;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/person/[id].jsx"],"names":["useContext","useState","IMG_URL","movieDB","styled","Layout","IoIosArrowDown","MovieContext","SimpleFlex","RecommenCard","groupByDate","groupeCrew","numberWithCommas","Styled","section","PersonProfile","person","console","log","tab","setTab","setModal","knonwFor","combined_credits","cast","sort","a","b","vote_count","slice","actingDiv","arry","map","index","key","value","i","id","Math","random","date","title","name","job","character","crewDiv","entr","movie_credits","crew","numLenght","length","dat","_","item","profile_path","biography","media_type","getInitialProps","ctx","query","typeFor"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\nimport { IMG_URL } from '../../components/context/types';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../components/layout';\r\nimport { IoIosArrowDown } from 'react-icons/io';\r\nimport MovieContext from '../../components/context/MovieContext';\r\nimport SimpleFlex from '../../components/ui/SimpleFlex';\r\nimport RecommenCard from '../../components/ui/Cards/RecommenCard';\r\nimport groupByDate from '../../components/utility/groupByDate';\r\nimport groupeCrew from '../../components/utility/groupeCrew';\r\nimport numberWithCommas from '../../components/utility/numberWithCommas';\r\n\r\nconst Styled = styled.section`\r\n  background: var(--bg-gradient);\r\n  margin-top: 110px;\r\n  padding: 2em 1em;\r\n\r\n  .profile--person {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .profile--biography {\r\n    margin: 2em 0;\r\n    display: grid;\r\n    &__name {\r\n      font-weight: bold;\r\n      margin-bottom: 1em;\r\n      text-align: center;\r\n    }\r\n\r\n    .read--more {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 0 auto;\r\n      background-color: var(--primary-clr);\r\n      border-radius: 50%;\r\n      padding: 0.25em;\r\n      font-size: 1.7rem;\r\n      transition: var(--ease--in--out--02s);\r\n      color: var(--white-clr);\r\n\r\n      &:hover {\r\n        opacity: 0.8;\r\n        transform: scale(0.9);\r\n      }\r\n    }\r\n  }\r\n\r\n  .profile--media__credits {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &--content {\r\n      grid-column: 1 / 3;\r\n      margin-top: 1.2em;\r\n    }\r\n  }\r\n\r\n  .grouped {\r\n    & > div:first-child {\r\n      padding-top: 0.6em !important;\r\n    }\r\n    & > div:last-child {\r\n      padding-bottom: 0.6em !important;\r\n    }\r\n    .date {\r\n      flex: 0 0 9%;\r\n    }\r\n  }\r\n  /* .knonwFor--content {\r\n    .card--one {\r\n      width: 100%;\r\n      margin: 0 1em;\r\n    }\r\n  } */\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n`;\r\n\r\nconst PersonProfile = ({ person }) => {\r\n  console.log(person);\r\n  const [tab, setTab] = useState('movies');\r\n  const { setModal } = useContext(MovieContext);\r\n  const knonwFor = person.combined_credits.cast\r\n    .sort((a, b) => b.vote_count - a.vote_count)\r\n    .slice(0, 8);\r\n\r\n  const actingDiv = arry =>\r\n    Object.entries(arry)\r\n      .sort((a, b) => b[0] - a[0])\r\n      .map(([key, value], index) => (\r\n        <div key={index} className='grouped border border-black '>\r\n          {value.map(i => (\r\n            <div\r\n              key={i.id + Math.random() * 10}\r\n              className='d-flex shadow-sm border border-light bg-light py-1 px-2'\r\n            >\r\n              <span className='date text-dark mr-4'>\r\n                <strong>{i.date === '' ? '-' : i.date}</strong>\r\n              </span>\r\n              <span className='text-dark'>\r\n                <strong className='d-block'>{i.title || i.name}</strong>\r\n                {i.job ? `...${i.job}` : i.character ? `as ${i.character}` : ''}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ));\r\n\r\n  const crewDiv = arry => {\r\n    const entr = Object.entries(\r\n      groupeCrew(person.movie_credits.crew, 'department', 'release_date')\r\n    );\r\n\r\n    const numLenght = entr.length - 3;\r\n\r\n    const dat = entr.map(([_, value]) => value)[1].map(item => item);\r\n\r\n    return entr\r\n      .map(\r\n        ([key, value], index) =>\r\n          // <div key={index} className='grouped border border-black bg-light '>\r\n          //   <h3 className='subTitle'>{key}</h3>\r\n          // </div>\r\n          value\r\n      )\r\n      .map(item => item);\r\n  };\r\n\r\n  console.log(\r\n    'hello',\r\n\r\n    crewDiv()\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <Styled className='profile'>\r\n        <div className='profile--person'>\r\n          <img src={`${IMG_URL}${person.profile_path}`} alt={person.name} />\r\n        </div>\r\n        <div className='profile--biography'>\r\n          <h2 className='profile--biography__name'>{person.name}</h2>\r\n          <h3 className='subTitle'>Biography</h3>\r\n          <p className='profile--biography__bio'>{`${person.biography.slice(\r\n            0,\r\n            500\r\n          )}...`}</p>\r\n          <a\r\n            href='#'\r\n            onClick={() => setModal(person.biography, 'person')}\r\n            className='read--more'\r\n          >\r\n            <IoIosArrowDown className='read--more__arrow' />\r\n          </a>\r\n        </div>\r\n        <div className='profile--media'>\r\n          <div className='profile--media__knownFor'>\r\n            <h3 className='subTitle'>Known For</h3>\r\n            <SimpleFlex className='knonwFor--content' setWidth='160px'>\r\n              {knonwFor.map(item => (\r\n                <RecommenCard\r\n                  key={item.id}\r\n                  data={item}\r\n                  typeFor={item.media_type}\r\n                />\r\n              ))}\r\n            </SimpleFlex>\r\n          </div>\r\n          <div className='profile--media__credits'>\r\n            <h3 className='subTitle'>Acting</h3>\r\n            <div className='tabs--container'>\r\n              <button\r\n                className={`tab ${tab === 'movies' && 'activeTab'}`}\r\n                onClick={() => setTab('movies')}\r\n              >\r\n                Movies\r\n              </button>\r\n              <button\r\n                className={`tab ${tab === 'tv' && 'activeTab'}`}\r\n                onClick={() => setTab('tv')}\r\n              >\r\n                Tv Shows\r\n              </button>\r\n            </div>\r\n            <div className='profile--media__credits--content table'>\r\n              {/* {tab === 'movies'\r\n                ? actingDiv(\r\n                    groupByDate(person.movie_credits.cast, 'release_date')\r\n                  )\r\n                : actingDiv(\r\n                    groupByDate(person.tv_credits.cast, 'first_air_date')\r\n                  )} */}\r\n            </div>\r\n            <div className='profile--media__credits--content table'>\r\n              {tab === 'movies' && crewDiv()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='profile--facts'>\r\n          <h3 className='subTitle'>Facts</h3>\r\n        </div>\r\n      </Styled>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPersonProfile.getInitialProps = async ctx => {\r\n  console.log(ctx.query, 'ID');\r\n  console.log(ctx);\r\n\r\n  try {\r\n    const person = await movieDB(\r\n      `person/${ctx.query.id || '85'}`,\r\n      'append_to_response=movie_credits,tv_credits,combined_credits,external_ids,images&include_image_language=en,null'\r\n    );\r\n    return {\r\n      person: { typeFor: 'person', ...person }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default PersonProfile;\r\n"]},"metadata":{},"sourceType":"module"}