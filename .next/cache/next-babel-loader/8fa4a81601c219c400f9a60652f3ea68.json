{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/layout';\nimport VideoHero from '../components/ui/VideoHero';\nimport Contact from '../components/contact';\nimport PopularSection from '../components/ui/PopularSection';\nimport movieDB from '../components/utility/movieDB';\nimport SectionCarousel from '../components/ui/sectionCarousel/SectionCarousel';\nimport randomNum from '../components/utility/randomNum';\nimport FeturedSection from '../components/ui/FeturedSection/FeturedSection';\n\nvar IndexPage = function IndexPage(_ref) {\n  var movieNowPlay = _ref.movieNowPlay,\n      tvOnAir = _ref.tvOnAir,\n      movieAction = _ref.movieAction,\n      tvAnima = _ref.tvAnima,\n      feturedMovie = _ref.feturedMovie,\n      feturedTv = _ref.feturedTv;\n  console.log(feturedMovie);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(VideoHero, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: movieNowPlay,\n    typeFor: \"movie\",\n    title: __jsx(React.Fragment, null, \"in theaters \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), \" now to enjoy\"),\n    subtitle: \"Most watched movies\",\n    toLink: \"/movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: movieAction,\n    typeFor: \"movie\",\n    title: \"popular action movies\",\n    toLink: \"/movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(FeturedSection, {\n    data: feturedMovie,\n    typeFor: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(PopularSection, {\n    data: tvOnAir,\n    typeFor: \"tv\",\n    title: __jsx(React.Fragment, null, \"Popular TV \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \"Series Right Now\"),\n    subtitle: \"Most watched tv\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(SectionCarousel, {\n    data: tvAnima,\n    typeFor: \"tv\",\n    title: \"animation to Enjoy\",\n    toLink: \"/tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(FeturedSection, {\n    data: feturedTv,\n    typeFor: \"tv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(Contact, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nvar feturedMoviee = function feturedMoviee(typeFor, id) {\n  var _ref2, results, getObj, getvideos;\n\n  return _regeneratorRuntime.async(function feturedMoviee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(movieDB(\"trending/\".concat(typeFor, \"/week\")));\n\n        case 2:\n          _ref2 = _context.sent;\n          results = _ref2.results;\n          getObj = results[id];\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(movieDB(\"\".concat(typeFor, \"/\").concat(getObj.id, \"/videos\")));\n\n        case 7:\n          getvideos = _context.sent;\n          return _context.abrupt(\"return\", _objectSpread({}, getObj, {}, getvideos));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nIndexPage.getInitialProps = function _callee() {\n  var tv, movie, movieAction, tvAnima, _ref3, feturedMovie, _ref4, feturedTv;\n\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(movieDB('tv/on_the_air'));\n\n        case 3:\n          tv = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(movieDB('movie/now_playing'));\n\n        case 6:\n          movie = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(movieDB('discover/movie', 'with_genres=28&sort_by=vote_count.desc'));\n\n        case 9:\n          movieAction = _context2.sent;\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap(movieDB('discover/tv', 'with_genres=16'));\n\n        case 12:\n          tvAnima = _context2.sent;\n          _context2.next = 15;\n          return _regeneratorRuntime.awrap(movieDB('trending/movie/week'));\n\n        case 15:\n          _ref3 = _context2.sent;\n          feturedMovie = _ref3.results;\n          _context2.next = 19;\n          return _regeneratorRuntime.awrap(movieDB('trending/tv/week'));\n\n        case 19:\n          _ref4 = _context2.sent;\n          feturedTv = _ref4.results;\n          _context2.t0 = console;\n          _context2.next = 24;\n          return _regeneratorRuntime.awrap(feturedMoviee('movie', randomNum(feturedMovie.length)));\n\n        case 24:\n          _context2.t1 = _context2.sent;\n\n          _context2.t0.log.call(_context2.t0, 'helllll', _context2.t1);\n\n          return _context2.abrupt(\"return\", {\n            movieNowPlay: movie.results.slice(0, 12),\n            tvOnAir: tv.results.slice(0, 12),\n            movieAction: movieAction.results.slice(0, 10),\n            tvAnima: tvAnima.results.slice(0, 10),\n            feturedMovie: feturedMovie[randomNum(feturedMovie.length)],\n            feturedTv: feturedTv[randomNum(feturedTv.length)]\n          });\n\n        case 29:\n          _context2.prev = 29;\n          _context2.t2 = _context2[\"catch\"](0);\n          console.log(_context2.t2);\n          return _context2.abrupt(\"return\", {\n            movieNowPlay: null,\n            tvOnAir: null\n          });\n\n        case 33:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 29]]);\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/index.js"],"names":["Layout","VideoHero","Contact","PopularSection","movieDB","SectionCarousel","randomNum","FeturedSection","IndexPage","movieNowPlay","tvOnAir","movieAction","tvAnima","feturedMovie","feturedTv","console","log","feturedMoviee","typeFor","id","results","getObj","getvideos","getInitialProps","tv","movie","length","slice"],"mappings":"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","sourcesContent":["import Layout from '../components/layout';\r\nimport VideoHero from '../components/ui/VideoHero';\r\nimport Contact from '../components/contact';\r\nimport PopularSection from '../components/ui/PopularSection';\r\nimport movieDB from '../components/utility/movieDB';\r\nimport SectionCarousel from '../components/ui/sectionCarousel/SectionCarousel';\r\nimport randomNum from '../components/utility/randomNum';\r\nimport FeturedSection from '../components/ui/FeturedSection/FeturedSection';\r\n\r\nconst IndexPage = ({\r\n  movieNowPlay,\r\n  tvOnAir,\r\n  movieAction,\r\n  tvAnima,\r\n  feturedMovie,\r\n  feturedTv\r\n}) => {\r\n  console.log(feturedMovie);\r\n  return (\r\n    <Layout>\r\n      <VideoHero />\r\n      <PopularSection\r\n        data={movieNowPlay}\r\n        typeFor='movie'\r\n        title={\r\n          <>\r\n            in theaters <br /> now to enjoy\r\n          </>\r\n        }\r\n        subtitle='Most watched movies'\r\n        toLink='/movie'\r\n      />\r\n      <SectionCarousel\r\n        data={movieAction}\r\n        typeFor='movie'\r\n        title='popular action movies'\r\n        toLink='/movie'\r\n      />\r\n      <FeturedSection data={feturedMovie} typeFor='movie' />\r\n      <PopularSection\r\n        data={tvOnAir}\r\n        typeFor='tv'\r\n        title={\r\n          <>\r\n            Popular TV <br />\r\n            Series Right Now\r\n          </>\r\n        }\r\n        subtitle='Most watched tv'\r\n        toLink='/tv'\r\n      />\r\n      <SectionCarousel\r\n        data={tvAnima}\r\n        typeFor='tv'\r\n        title='animation to Enjoy'\r\n        toLink='/tv'\r\n      />\r\n      <FeturedSection data={feturedTv} typeFor='tv' />\r\n      <Contact />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst feturedMoviee = async (typeFor, id) => {\r\n  const { results } = await movieDB(`trending/${typeFor}/week`);\r\n  const getObj = results[id];\r\n  const getvideos = await movieDB(`${typeFor}/${getObj.id}/videos`);\r\n\r\n  return { ...getObj, ...getvideos };\r\n};\r\n\r\nIndexPage.getInitialProps = async () => {\r\n  try {\r\n    const tv = await movieDB('tv/on_the_air');\r\n    const movie = await movieDB('movie/now_playing');\r\n    const movieAction = await movieDB(\r\n      'discover/movie',\r\n      'with_genres=28&sort_by=vote_count.desc'\r\n    );\r\n    const tvAnima = await movieDB('discover/tv', 'with_genres=16');\r\n    const { results: feturedMovie } = await movieDB('trending/movie/week');\r\n    const { results: feturedTv } = await movieDB('trending/tv/week');\r\n\r\n    console.log(\r\n      'helllll',\r\n      await feturedMoviee('movie', randomNum(feturedMovie.length))\r\n    );\r\n    return {\r\n      movieNowPlay: movie.results.slice(0, 12),\r\n      tvOnAir: tv.results.slice(0, 12),\r\n      movieAction: movieAction.results.slice(0, 10),\r\n      tvAnima: tvAnima.results.slice(0, 10),\r\n      feturedMovie: feturedMovie[randomNum(feturedMovie.length)],\r\n      feturedTv: feturedTv[randomNum(feturedTv.length)]\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      movieNowPlay: null,\r\n      tvOnAir: null\r\n    };\r\n  }\r\n};\r\n\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}