{"ast":null,"code":"// import nextConnect from 'next-connect';\n// import middleware from '../../server/middleware/database';\nimport connectDB from '../../server/config/db'; // import Movies from '../../server/models/Movies';\n// import Meal from '../../server/models/Meal';\n\nimport mongoose from 'mongoose';\nconst MovieSchema = new mongoose.Schema({\n  plot: String\n});\nconst Movies = mongoose.model('movies', MovieSchema);\nexport default (async (req, res) => {\n  await connectDB();\n\n  try {\n    const movies = await Movies.findOne();\n    res.send(movies);\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send('Server Error');\n  } // try {\n  //   const movies = await Meal.findById({ _id: '5e8776961c9d4400007e0128' });\n  //   res.json(movies);\n  // } catch (err) {\n  //   console.log(err.message);\n  //   res.status(500).send('Server Error');\n  // }\n\n}); // const user = nextConnect();\n// user.use(middleware);\n// console.log(user);\n// user.get(async (req, res) => {\n//   let doc = await req.db.collection('theaters').findOne();\n//   console.log(doc);\n//   res.json(doc);\n// });\n// export default user;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/api/user.js"],"names":["connectDB","mongoose","MovieSchema","Schema","plot","String","Movies","model","req","res","movies","findOne","send","err","console","error","message","status"],"mappings":"AAAA;AACA;AACA,OAAOA,SAAP,MAAsB,wBAAtB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,WAAW,GAAG,IAAID,QAAQ,CAACE,MAAb,CAAoB;AACtCC,EAAAA,IAAI,EAAEC;AADgC,CAApB,CAApB;AAIA,MAAMC,MAAM,GAAGL,QAAQ,CAACM,KAAT,CAAe,QAAf,EAAyBL,WAAzB,CAAf;AAEA,gBAAe,OAAOM,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMT,SAAS,EAAf;;AAEA,MAAI;AACF,UAAMU,MAAM,GAAG,MAAMJ,MAAM,CAACK,OAAP,EAArB;AAEAF,IAAAA,GAAG,CAACG,IAAJ,CAASF,MAAT;AACD,GAJD,CAIE,OAAOG,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACAP,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,cAArB;AACD,GAVgC,CAYjC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAnBD,E,CAqBA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import nextConnect from 'next-connect';\r\n// import middleware from '../../server/middleware/database';\r\nimport connectDB from '../../server/config/db';\r\n// import Movies from '../../server/models/Movies';\r\n// import Meal from '../../server/models/Meal';\r\nimport mongoose from 'mongoose';\r\n\r\nconst MovieSchema = new mongoose.Schema({\r\n  plot: String\r\n});\r\n\r\nconst Movies = mongoose.model('movies', MovieSchema);\r\n\r\nexport default async (req, res) => {\r\n  await connectDB();\r\n\r\n  try {\r\n    const movies = await Movies.findOne();\r\n\r\n    res.send(movies);\r\n  } catch (err) {\r\n    console.error(err.message);\r\n    res.status(500).send('Server Error');\r\n  }\r\n\r\n  // try {\r\n  //   const movies = await Meal.findById({ _id: '5e8776961c9d4400007e0128' });\r\n  //   res.json(movies);\r\n  // } catch (err) {\r\n  //   console.log(err.message);\r\n  //   res.status(500).send('Server Error');\r\n  // }\r\n};\r\n\r\n// const user = nextConnect();\r\n\r\n// user.use(middleware);\r\n\r\n// console.log(user);\r\n\r\n// user.get(async (req, res) => {\r\n//   let doc = await req.db.collection('theaters').findOne();\r\n//   console.log(doc);\r\n//   res.json(doc);\r\n// });\r\n\r\n// export default user;\r\n"]},"metadata":{},"sourceType":"module"}