{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\discover\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport movieDB from '../../components/utility/movieDB';\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\n\nconst discover = ({\n  discover\n}) => {\n  // console.log(discover);\n  return __jsx(MediaSection, {\n    mediaFor: discover,\n    forPage: \"disc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n};\n\ndiscover.getInitialProps = async ({\n  query\n}) => {\n  const page = `&page=${query.page ? query.page : 1}`;\n  const sort_by = `sort_by=${query.sort_by ? query.sort_by : 'popularity.desc'}`; // const year = `&primary_release_year=${query.year ? query.year : ''}`;\n\n  const year = query.year && `&primary_release_year=${query.year}`;\n  const genres = query.genres`&with_genres=${query.genres}`; // const genres = `&with_genres=${query.genres ? query.genres : ''}`;\n\n  console.log('from query', query);\n\n  try {\n    const discover = await movieDB(`discover/${query.query}`, `${sort_by}${year}${genres}${page}`);\n    return {\n      discover: _objectSpread({\n        typeFor: query.query,\n        title: query.query\n      }, discover)\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default discover;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/discover/index.jsx"],"names":["React","movieDB","MediaSection","discover","getInitialProps","query","page","sort_by","year","genres","console","log","typeFor","title","error"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAkB;AACjC;AAEA,SAAO,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,QAAxB;AAAkC,IAAA,OAAO,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAJD;;AAMAA,QAAQ,CAACC,eAAT,GAA2B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC9C,QAAMC,IAAI,GAAI,SAAQD,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,CAAE,EAAlD;AACA,QAAMC,OAAO,GAAI,WACfF,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACE,OAAtB,GAAgC,iBACjC,EAFD,CAF8C,CAK9C;;AACA,QAAMC,IAAI,GAAGH,KAAK,CAACG,IAAN,IAAe,yBAAwBH,KAAK,CAACG,IAAK,EAA/D;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACI,MAAO,gBAAeJ,KAAK,CAACI,MAAO,EAAxD,CAP8C,CAQ9C;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,KAA1B;;AACA,MAAI;AACF,UAAMF,QAAQ,GAAG,MAAMF,OAAO,CAC3B,YAAWI,KAAK,CAACA,KAAM,EADI,EAE3B,GAAEE,OAAQ,GAAEC,IAAK,GAAEC,MAAO,GAAEH,IAAK,EAFN,CAA9B;AAIA,WAAO;AACLH,MAAAA,QAAQ;AACNS,QAAAA,OAAO,EAAEP,KAAK,CAACA,KADT;AAENQ,QAAAA,KAAK,EAAER,KAAK,CAACA;AAFP,SAGHF,QAHG;AADH,KAAP;AAOD,GAZD,CAYE,OAAOW,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,CA1BD;;AA4BA,eAAeX,QAAf","sourcesContent":["import React from 'react';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\r\n\r\nconst discover = ({ discover }) => {\r\n  // console.log(discover);\r\n\r\n  return <MediaSection mediaFor={discover} forPage='disc' />;\r\n};\r\n\r\ndiscover.getInitialProps = async ({ query }) => {\r\n  const page = `&page=${query.page ? query.page : 1}`;\r\n  const sort_by = `sort_by=${\r\n    query.sort_by ? query.sort_by : 'popularity.desc'\r\n  }`;\r\n  // const year = `&primary_release_year=${query.year ? query.year : ''}`;\r\n  const year = query.year && `&primary_release_year=${query.year}`;\r\n  const genres = query.genres`&with_genres=${query.genres}`;\r\n  // const genres = `&with_genres=${query.genres ? query.genres : ''}`;\r\n\r\n  console.log('from query', query);\r\n  try {\r\n    const discover = await movieDB(\r\n      `discover/${query.query}`,\r\n      `${sort_by}${year}${genres}${page}`\r\n    );\r\n    return {\r\n      discover: {\r\n        typeFor: query.query,\r\n        title: query.query,\r\n        ...discover\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default discover;\r\n"]},"metadata":{},"sourceType":"module"}