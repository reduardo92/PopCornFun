{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\popcornFun\\\\pages\\\\discover\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport movieDB from '../../components/utility/movieDB';\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\n\nconst discover = ({\n  discover\n}) => {\n  console.log(discover);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Hello\"); // <MediaSection mediaFor={discover} />\n};\n\ndiscover.getInitialProps = async ({\n  query\n}) => {\n  const page = `&page=${query.page ? query.page : 1}`;\n  const sort_by = `sort_by=${query.sort_by ? query.sort_by : 'popularity.desc'}`;\n  const year = `&year=${query.year ? query.year : ''}`;\n  const genres = `&with_genres=${query.genres ? query.genres : ''}`;\n  const keywords = `&with_keywords=release_date.asc`;\n\n  try {\n    const discover = await movieDB(`discover/${query.query}`, `${sort_by}${year}${genres}${keywords}${page}`);\n    return {\n      discover: _objectSpread({\n        typeFor: query.query,\n        title: query.query\n      }, discover)\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default discover;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/popcornFun/pages/discover/index.jsx"],"names":["React","movieDB","MediaSection","discover","console","log","getInitialProps","query","page","sort_by","year","genres","keywords","typeFor","title","error"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAkB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP,CAHiC,CAKjC;AACD,CAND;;AAQAA,QAAQ,CAACG,eAAT,GAA2B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC9C,QAAMC,IAAI,GAAI,SAAQD,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,CAAE,EAAlD;AACA,QAAMC,OAAO,GAAI,WACfF,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACE,OAAtB,GAAgC,iBACjC,EAFD;AAGA,QAAMC,IAAI,GAAI,SAAQH,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAnB,GAA0B,EAAG,EAAnD;AACA,QAAMC,MAAM,GAAI,gBAAeJ,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACI,MAArB,GAA8B,EAAG,EAAhE;AACA,QAAMC,QAAQ,GAAI,iCAAlB;;AACA,MAAI;AACF,UAAMT,QAAQ,GAAG,MAAMF,OAAO,CAC3B,YAAWM,KAAK,CAACA,KAAM,EADI,EAE3B,GAAEE,OAAQ,GAAEC,IAAK,GAAEC,MAAO,GAAEC,QAAS,GAAEJ,IAAK,EAFjB,CAA9B;AAIA,WAAO;AACLL,MAAAA,QAAQ;AACNU,QAAAA,OAAO,EAAEN,KAAK,CAACA,KADT;AAENO,QAAAA,KAAK,EAAEP,KAAK,CAACA;AAFP,SAGHJ,QAHG;AADH,KAAP;AAOD,GAZD,CAYE,OAAOY,KAAP,EAAc;AACdX,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD;AACF,CAvBD;;AAyBA,eAAeZ,QAAf","sourcesContent":["import React from 'react';\r\nimport movieDB from '../../components/utility/movieDB';\r\nimport MediaSection from '../../components/ui/mediaProfile/MediaSection';\r\n\r\nconst discover = ({ discover }) => {\r\n  console.log(discover);\r\n\r\n  return <div>Hello</div>;\r\n\r\n  // <MediaSection mediaFor={discover} />\r\n};\r\n\r\ndiscover.getInitialProps = async ({ query }) => {\r\n  const page = `&page=${query.page ? query.page : 1}`;\r\n  const sort_by = `sort_by=${\r\n    query.sort_by ? query.sort_by : 'popularity.desc'\r\n  }`;\r\n  const year = `&year=${query.year ? query.year : ''}`;\r\n  const genres = `&with_genres=${query.genres ? query.genres : ''}`;\r\n  const keywords = `&with_keywords=release_date.asc`;\r\n  try {\r\n    const discover = await movieDB(\r\n      `discover/${query.query}`,\r\n      `${sort_by}${year}${genres}${keywords}${page}`\r\n    );\r\n    return {\r\n      discover: {\r\n        typeFor: query.query,\r\n        title: query.query,\r\n        ...discover\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default discover;\r\n"]},"metadata":{},"sourceType":"module"}